[32m[     info][0m Compiler type: gcc
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/gcc-4.3.0/bin/gcc
====================Ground truth & buggy output:====================
Correct output:
checksum = 75960f52
Output of gcc-4.3.0 with -Os:
checksum = 75961052
Output of gcc-4.3.0 with -O0:
checksum = 75960f52
====================================================================
[32m[     info][0m Good version found: gcc-4.2.0
[32m[     info][0m Start Bisection...
No local changes to save
Bisecting: a merge base must be tested
[b23987ec2f0f24c38c78f7cf63c91a699da681bd] tree.h (DECL_PTA_ARTIFICIAL): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [b23987e]
+---------------------------------------- Current commit hash: [b23987e] ----------------------------------------+
GCC for commit [b23987e] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-b23987e/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-b23987e/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at b23987e... tree.h (DECL_PTA_ARTIFICIAL): Remove.
[32m[     info][0m Current commit [b23987e] is good. Return value: 0

Bisecting: 4487 revisions left to test after this (roughly 12 steps)
[b718216c5ad4bc0054646d701d3b4fa67d74c96b] df-scan.c (df_get_exit-block_use_set): Always add the stack pointer to the exit block use set.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [b718216]
+---------------------------------------- Current commit hash: [b718216] ----------------------------------------+
GCC for commit [b718216] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-b718216/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-b718216/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at b718216... df-scan.c (df_get_exit-block_use_set): Always add the stack pointer to the exit block use set.
[32m[     info][0m Current commit [b718216] is bad. Return value: 1

Bisecting: 2243 revisions left to test after this (roughly 11 steps)
[2b5e5642e38e17dc60ca6408f4c2bba651e1a9f7] builtins.c (fold_builtin_load_exponent): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [2b5e564]
+---------------------------------------- Current commit hash: [2b5e564] ----------------------------------------+
GCC for commit [2b5e564] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-2b5e564/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-2b5e564/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 2b5e564... builtins.c (fold_builtin_load_exponent): New.
[32m[     info][0m Current commit [2b5e564] is good. Return value: 0

Bisecting: 1121 revisions left to test after this (roughly 10 steps)
[a97dcb4c3690f2b6fa294c8931998c7a7daed883] warnings_are_errors_1.f90: Add -std=f95 to options.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [a97dcb4]
+---------------------------------------- Current commit hash: [a97dcb4] ----------------------------------------+
GCC for commit [a97dcb4] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-a97dcb4/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-a97dcb4/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at a97dcb4... warnings_are_errors_1.f90: Add -std=f95 to options.
[32m[     info][0m Current commit [a97dcb4] is good. Return value: 0

Bisecting: 560 revisions left to test after this (roughly 9 steps)
[538639f4ab33f1a9f8c347a8f1e2369fdc4989e4] VMFrame.java (<init>): Add parameter for "this" pointer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [538639f]
+---------------------------------------- Current commit hash: [538639f] ----------------------------------------+
GCC for commit [538639f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-538639f/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-538639f/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 538639f... VMFrame.java (<init>): Add parameter for "this" pointer.
[32m[     info][0m Current commit [538639f] is bad. Return value: 1

Bisecting: 280 revisions left to test after this (roughly 8 steps)
[39dd88f08d3f8e69796f77aba403d5ade33df9c0] 2007-04-30  Benjamin Kosnik  <bkoz@redhat.com>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [39dd88f]
+---------------------------------------- Current commit hash: [39dd88f] ----------------------------------------+
GCC for commit [39dd88f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-39dd88f/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-39dd88f/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 39dd88f... 2007-04-30  Benjamin Kosnik  <bkoz@redhat.com>
[32m[     info][0m Current commit [39dd88f] is good. Return value: 0

Bisecting: 140 revisions left to test after this (roughly 7 steps)
[5abd2125f012351411df08f07918667ce3e418a9] m32c.c (SYMBOL_FLAG_FUNCVEC_FUNCTION): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [5abd212]
+---------------------------------------- Current commit hash: [5abd212] ----------------------------------------+
GCC for commit [5abd212] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-5abd212/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-5abd212/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 5abd212... m32c.c (SYMBOL_FLAG_FUNCVEC_FUNCTION): Define.
[32m[     info][0m Current commit [5abd212] is bad. Return value: 1

Bisecting: 69 revisions left to test after this (roughly 6 steps)
[916fa4f033247e40c1fc7bad3211427766d3dca3] haifa-sched.c (rtx_vec_t): New typedef.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [916fa4f]
+---------------------------------------- Current commit hash: [916fa4f] ----------------------------------------+
GCC for commit [916fa4f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-916fa4f/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-916fa4f/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 916fa4f... haifa-sched.c (rtx_vec_t): New typedef.
[32m[     info][0m Current commit [916fa4f] is good. Return value: 0

Bisecting: 34 revisions left to test after this (roughly 5 steps)
[290358f770d21d9204ea621f839ee8fba606a275] Fix PR30957
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [290358f]
+---------------------------------------- Current commit hash: [290358f] ----------------------------------------+
GCC for commit [290358f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-290358f/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-290358f/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 290358f... Fix PR30957
[32m[     info][0m Current commit [290358f] is bad. Return value: 1

Bisecting: 17 revisions left to test after this (roughly 4 steps)
[2b28c07aa788ba7cff755d6858d707de675ad39a] basic-block.h (cdi_direction): Assign values to all enumeration constants.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [2b28c07]
+---------------------------------------- Current commit hash: [2b28c07] ----------------------------------------+
GCC for commit [2b28c07] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-2b28c07/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-2b28c07/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 2b28c07... basic-block.h (cdi_direction): Assign values to all enumeration constants.
[32m[     info][0m Current commit [2b28c07] is bad. Return value: 1

Bisecting: 8 revisions left to test after this (roughly 3 steps)
[e50443368c22ea4a2ec4e6585154b13cae31dc09] re PR libfortran/31210 (I/O of string with (non-constant) zero length)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [e504433]
+---------------------------------------- Current commit hash: [e504433] ----------------------------------------+
GCC for commit [e504433] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-e504433/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-e504433/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at e504433... re PR libfortran/31210 (I/O of string with (non-constant) zero length)
[32m[     info][0m Current commit [e504433] is good. Return value: 0

Bisecting: 4 revisions left to test after this (roughly 2 steps)
[b60cb710ba05d240c6f8a7ef0df41976797c82d0] s390.md ("fix_trunc<mode>di2", [...]): Expander removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [b60cb71]
+---------------------------------------- Current commit hash: [b60cb71] ----------------------------------------+
GCC for commit [b60cb71] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-b60cb71/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-b60cb71/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at b60cb71... s390.md ("fix_trunc<mode>di2", [...]): Expander removed.
[32m[     info][0m Current commit [b60cb71] is bad. Return value: 1

Bisecting: 1 revision left to test after this (roughly 1 step)
[06ea1b848618b585bf335d760a18b31f7ad421b1] opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [06ea1b8]
+---------------------------------------- Current commit hash: [06ea1b8] ----------------------------------------+
GCC for commit [06ea1b8] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-06ea1b8/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-06ea1b8/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 06ea1b8... opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.
[32m[     info][0m Current commit [06ea1b8] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 0 steps)
[70aa27669b01c03118b7e18596aafbb0b00f1cf1] re PR libfortran/31210 (I/O of string with (non-constant) zero length)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430-orig/tc0406 orig
[32m[     info][0m Testing commit: [70aa276]
+---------------------------------------- Current commit hash: [70aa276] ----------------------------------------+
GCC for commit [70aa276] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-70aa276/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-70aa276/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 70aa276... re PR libfortran/31210 (I/O of string with (non-constant) zero length)
[32m[     info][0m Current commit [70aa276] is good. Return value: 0

06ea1b848618b585bf335d760a18b31f7ad421b1 is the first bad commit
commit 06ea1b848618b585bf335d760a18b31f7ad421b1
Author: Jan Hubicka <jh@suse.cz>
Date:   Fri May 4 17:32:42 2007 +0200

    opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.
    
    
    	* opts.c (decode_options): Do not fiddle with inlining
    	parameters in case of optimizing for size.
    	* ipa-inline.c (cgraph_decide_recursive_inlining): When optimizing
    	for size do nothing.
    	(cgraph_decide_inlining_of_small_function): When optimizing for
    	size never inline functions increasing caller size.
    	(cgraph_early_inlining): Inline for size when optimizing for size.
    
    Co-Authored-By: Richard Guenther <rguenther@suse.de>
    
    From-SVN: r124431

:040000 040000 b8ac659535f5cdee8aea68435f33d1076b907bd6 c8007d6f1e7b266a0df9cba54f009ba53c3c1dc4 M	gcc
bisect run success
[32m[     info][0m First bad commit: 06ea1b8 opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.
Checking out files:  18% (4369/23110)   Checking out files:  19% (4391/23110)   Checking out files:  20% (4622/23110)   Checking out files:  21% (4854/23110)   Checking out files:  22% (5085/23110)   Checking out files:  23% (5316/23110)   Checking out files:  24% (5547/23110)   Checking out files:  25% (5778/23110)   Checking out files:  26% (6009/23110)   Checking out files:  27% (6240/23110)   Checking out files:  28% (6471/23110)   Checking out files:  29% (6702/23110)   Checking out files:  30% (6933/23110)   Checking out files:  31% (7165/23110)   Checking out files:  32% (7396/23110)   Checking out files:  33% (7627/23110)   Checking out files:  34% (7858/23110)   Checking out files:  35% (8089/23110)   Checking out files:  36% (8320/23110)   Checking out files:  37% (8551/23110)   Checking out files:  38% (8782/23110)   Checking out files:  38% (8881/23110)   Checking out files:  39% (9013/23110)   Checking out files:  40% (9244/23110)   Checking out files:  41% (9476/23110)   Checking out files:  42% (9707/23110)   Checking out files:  43% (9938/23110)   Checking out files:  44% (10169/23110)   Checking out files:  45% (10400/23110)   Checking out files:  46% (10631/23110)   Checking out files:  47% (10862/23110)   Checking out files:  48% (11093/23110)   Checking out files:  49% (11324/23110)   Checking out files:  50% (11555/23110)   Checking out files:  51% (11787/23110)   Checking out files:  52% (12018/23110)   Checking out files:  53% (12249/23110)   Checking out files:  54% (12480/23110)   Checking out files:  55% (12711/23110)   Checking out files:  56% (12942/23110)   Checking out files:  57% (13173/23110)   Checking out files:  57% (13280/23110)   Checking out files:  58% (13404/23110)   Checking out files:  59% (13635/23110)   Checking out files:  60% (13866/23110)   Checking out files:  61% (14098/23110)   Checking out files:  62% (14329/23110)   Checking out files:  63% (14560/23110)   Checking out files:  64% (14791/23110)   Checking out files:  65% (15022/23110)   Checking out files:  66% (15253/23110)   Checking out files:  67% (15484/23110)   Checking out files:  68% (15715/23110)   Checking out files:  69% (15946/23110)   Checking out files:  70% (16177/23110)   Checking out files:  71% (16409/23110)   Checking out files:  72% (16640/23110)   Checking out files:  73% (16871/23110)   Checking out files:  74% (17102/23110)   Checking out files:  75% (17333/23110)   Checking out files:  76% (17564/23110)   Checking out files:  76% (17665/23110)   Checking out files:  77% (17795/23110)   Checking out files:  78% (18026/23110)   Checking out files:  79% (18257/23110)   Checking out files:  80% (18488/23110)   Checking out files:  81% (18720/23110)   Checking out files:  81% (18803/23110)   Checking out files:  82% (18951/23110)   Checking out files:  83% (19182/23110)   Checking out files:  84% (19413/23110)   Checking out files:  85% (19644/23110)   Checking out files:  85% (19786/23110)   Checking out files:  86% (19875/23110)   Checking out files:  87% (20106/23110)   Checking out files:  88% (20337/23110)   Checking out files:  89% (20568/23110)   Checking out files:  90% (20799/23110)   Checking out files:  91% (21031/23110)   Checking out files:  91% (21228/23110)   Checking out files:  92% (21262/23110)   Checking out files:  93% (21493/23110)   Checking out files:  94% (21724/23110)   Checking out files:  95% (21955/23110)   Checking out files:  96% (22186/23110)   Checking out files:  97% (22417/23110)   Checking out files:  98% (22648/23110)   Checking out files:  98% (22759/23110)   Checking out files:  99% (22879/23110)   Checking out files: 100% (23110/23110)   Checking out files: 100% (23110/23110), done.
Previous HEAD position was 70aa276... re PR libfortran/31210 (I/O of string with (non-constant) zero length)
HEAD is now at 870aa1e... re PR middle-end/30322 (((-i-1) + i) +1) is turned into ~i + (i+1) and never into 0 on the tree level)

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [06ea1b8]
+---------------------------------------- Current commit hash: [06ea1b8] ----------------------------------------+
GCC for commit [06ea1b8] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-06ea1b8/bin/gcc with -Os:
checksum = 75961052
Output of /tmp/gcc-06ea1b8/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 06ea1b8... opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.
[32m[     info][0m Current commit [06ea1b8] is bad. Return value: 1

[32m[     info][0m Testing commit: [70aa276]
+---------------------------------------- Current commit hash: [70aa276] ----------------------------------------+
GCC for commit [70aa276] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
checksum = 75960f52
Output of /tmp/gcc-70aa276/bin/gcc with -Os:
checksum = 75960f52
Output of /tmp/gcc-70aa276/bin/gcc with -O0:
checksum = 75960f52
----------------------------------------------------
No local changes to save
HEAD is now at 70aa276... re PR libfortran/31210 (I/O of string with (non-constant) zero length)
[32m[     info][0m Current commit [70aa276] is good. Return value: 0

[32m[     info][0m Bisection result is correct.
=========================================================================================================================

[32m[     info][0m Getting extra information...
=========================================================================================================================
Output of gcc [06ea1b8] with -O0:
checksum = 75960f52
Output of gcc [06ea1b8] with -O1:
checksum = 75960f52
[31m[  warning][0m Compilation by gcc [06ea1b8] with -O2 failed. Continue...
[31m[  warning][0m Compilation by gcc [06ea1b8] with -O3 failed. Continue...
Output of gcc [06ea1b8] with -Os:
checksum = 75961052
[32m[     info][0m Got extra information.
=========================================================================================================================
[32m[     info][0m Bisection done.
