[32m[     info][0m Compiler type: gcc
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/gcc-4.3.0/bin/gcc
====================Ground truth & buggy output:====================
Correct output:
1
Output of gcc-4.3.0 with -O1:
0
Output of gcc-4.3.0 with -O0:
1
====================================================================
[32m[     info][0m Good version found: gcc-3.4.0
[32m[     info][0m Start Bisection...
No local changes to save
Bisecting: a merge base must be tested
[a8e6c82ab09c4c7a8490bc3861049b1941b84c75] re PR c++/13574 (array default initializer in class lets gcc consume all memory and die)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a8e6c82]
+---------------------------------------- Current commit hash: [a8e6c82] ----------------------------------------+
GCC for commit [a8e6c82] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-a8e6c82/bin/gcc with -O1:
1
Output of /tmp/gcc-a8e6c82/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at a8e6c82... re PR c++/13574 (array default initializer in class lets gcc consume all memory and die)
[32m[     info][0m Current commit [a8e6c82] is good. Return value: 0

Bisecting: 15168 revisions left to test after this (roughly 14 steps)
[024f1251b584243372c0413105b2230769f3e682] re PR c++/23691 (`mpl_::bool_<false>::value' is not a valid template argument for type `bool' because it is a non-constant expression)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [024f125]
+---------------------------------------- Current commit hash: [024f125] ----------------------------------------+
GCC for commit [024f125] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-024f125/bin/gcc with -O1:
0
Output of /tmp/gcc-024f125/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 024f125... re PR c++/23691 (`mpl_::bool_<false>::value' is not a valid template argument for type `bool' because it is a non-constant expression)
[32m[     info][0m Current commit [024f125] is bad. Return value: 1

Bisecting: 7583 revisions left to test after this (roughly 13 steps)
[65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb] tree-cfg.c (find_taken_edge): Reject VAL begin NULL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [65f4323]
+---------------------------------------- Current commit hash: [65f4323] ----------------------------------------+
GCC for commit [65f4323] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-65f4323/bin/gcc with -O1:
0
Output of /tmp/gcc-65f4323/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 65f4323... tree-cfg.c (find_taken_edge): Reject VAL begin NULL.
[32m[     info][0m Current commit [65f4323] is bad. Return value: 1

Bisecting: 3791 revisions left to test after this (roughly 12 steps)
[ef558756f2838de518a99a52caabe931e9af52b1] decl.c, [...]: Add 2004 to copyright years.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ef55875]
+---------------------------------------- Current commit hash: [ef55875] ----------------------------------------+
GCC for commit [ef55875] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-ef55875/bin/gcc with -O1:
0
Output of /tmp/gcc-ef55875/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at ef55875... decl.c, [...]: Add 2004 to copyright years.
[32m[     info][0m Current commit [ef55875] is bad. Return value: 1

Bisecting: 1895 revisions left to test after this (roughly 11 steps)
[cfdfa11075770af7e2c8b0d3fd7e17d066c7385d] * hashtab.h, splay-tree.h: Use new shorter form of GTY markers.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfdfa11]
+---------------------------------------- Current commit hash: [cfdfa11] ----------------------------------------+
GCC for commit [cfdfa11] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-cfdfa11/bin/gcc with -O1:
1
Output of /tmp/gcc-cfdfa11/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at cfdfa11... * hashtab.h, splay-tree.h: Use new shorter form of GTY markers.
[32m[     info][0m Current commit [cfdfa11] is good. Return value: 0

Bisecting: 947 revisions left to test after this (roughly 10 steps)
[aef0afc4f41cab8148ee17a4ea7dddb6fca0342e] re PR tree-optimization/14197 (Wrong code for bcopy/memmove (string-asm-2.c))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aef0afc]
+---------------------------------------- Current commit hash: [aef0afc] ----------------------------------------+
Building GCC for commit [aef0afc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aef0afc re PR tree-optimization/14197 (Wrong code for bcopy/memmove (string-asm-2.c))
HEAD is now at aef0afc re PR tree-optimization/14197 (Wrong code for bcopy/memmove (string-asm-2.c))
Note: checking out 'aef0afc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aef0afc... re PR tree-optimization/14197 (Wrong code for bcopy/memmove (string-asm-2.c))
Deleted branch temp-test-branch (was aef0afc).
Fail to build gcc for commit [aef0afc], skip this commit. Return 125.
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[543a0daa84fd7dda27536a892dd88896ba25b1f3] c-common.h (add_decl_stmt): Move to cp-tree.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [543a0da]
+---------------------------------------- Current commit hash: [543a0da] ----------------------------------------+
Building GCC for commit [543a0da]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 543a0da c-common.h (add_decl_stmt): Move to cp-tree.h.
HEAD is now at 543a0da c-common.h (add_decl_stmt): Move to cp-tree.h.
Note: checking out '543a0da'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 543a0da... c-common.h (add_decl_stmt): Move to cp-tree.h.
Deleted branch temp-test-branch (was 543a0da).
Fail to build gcc for commit [543a0da], skip this commit. Return 125.
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[7a70d70c54f4b73e25f7860f56bcd8f9e532f16c] Toolkit.java (loadSystemColors): Implement.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7a70d70]
+---------------------------------------- Current commit hash: [7a70d70] ----------------------------------------+
Building GCC for commit [7a70d70]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7a70d70 Toolkit.java (loadSystemColors): Implement.
HEAD is now at 7a70d70 Toolkit.java (loadSystemColors): Implement.
Note: checking out '7a70d70'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7a70d70... Toolkit.java (loadSystemColors): Implement.
Deleted branch temp-test-branch (was 7a70d70).
Fail to build gcc for commit [7a70d70], skip this commit. Return 125.
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[2832d07bd187c8298675cf1f6f2020033624e0df] pool_allocator.h: Qualify __throw_bad_alloc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2832d07b]
+---------------------------------------- Current commit hash: [2832d07b] ----------------------------------------+
Building GCC for commit [2832d07b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2832d07b pool_allocator.h: Qualify __throw_bad_alloc.
HEAD is now at 2832d07b pool_allocator.h: Qualify __throw_bad_alloc.
Note: checking out '2832d07b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2832d07b... pool_allocator.h: Qualify __throw_bad_alloc.
Deleted branch temp-test-branch (was 2832d07b).
Fail to build gcc for commit [2832d07b], skip this commit. Return 125.
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[c37bb106ec37b73a1d44494a268f5857a2b90b93] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c37bb10]
+---------------------------------------- Current commit hash: [c37bb10] ----------------------------------------+
Building GCC for commit [c37bb10]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c37bb10 [multiple changes]
HEAD is now at c37bb10 [multiple changes]
Note: checking out 'c37bb10'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c37bb10... [multiple changes]
Deleted branch temp-test-branch (was c37bb10).
Fail to build gcc for commit [c37bb10], skip this commit. Return 125.
Bisecting: 947 revisions left to test after this (roughly 10 steps)
[77278891d14e6ff888fee7dcb9ae47a9ec33422b] expmed.c (expand_mult_highpart_adjust): Do not assume OP1 is a CONST_INT.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7727889]
+---------------------------------------- Current commit hash: [7727889] ----------------------------------------+
GCC for commit [7727889] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-7727889/bin/gcc with -O1:
1
Output of /tmp/gcc-7727889/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 7727889... expmed.c (expand_mult_highpart_adjust): Do not assume OP1 is a CONST_INT.
[32m[     info][0m Current commit [7727889] is good. Return value: 0

Bisecting: 760 revisions left to test after this (roughly 10 steps)
[43daf8ffa83f013ccc2a7db8845375df73f5556b] re PR c++/13092 (Accepts invalid pointer-to-member conversion)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [43daf8f]
+---------------------------------------- Current commit hash: [43daf8f] ----------------------------------------+
Building GCC for commit [43daf8f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 43daf8f re PR c++/13092 (Accepts invalid pointer-to-member conversion)
HEAD is now at 43daf8f re PR c++/13092 (Accepts invalid pointer-to-member conversion)
Note: checking out '43daf8f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 43daf8f... re PR c++/13092 (Accepts invalid pointer-to-member conversion)
Deleted branch temp-test-branch (was 43daf8f).
Fail to build gcc for commit [43daf8f], skip this commit. Return 125.
Bisecting: 760 revisions left to test after this (roughly 10 steps)
[34a863061325c013695186e25784d56cd562a0c4] invoke.texi (ARM Options): Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [34a8630]
+---------------------------------------- Current commit hash: [34a8630] ----------------------------------------+
Building GCC for commit [34a8630]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 34a8630 invoke.texi (ARM Options): Fix typo.
HEAD is now at 34a8630 invoke.texi (ARM Options): Fix typo.
Note: checking out '34a8630'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 34a8630... invoke.texi (ARM Options): Fix typo.
Deleted branch temp-test-branch (was 34a8630).
Fail to build gcc for commit [34a8630], skip this commit. Return 125.
Bisecting: 760 revisions left to test after this (roughly 10 steps)
[5050d266eaf5c63b62a22579c3f25c598de83417] m68k.c (m68k_output_mi_thunk): For ColdFire, use %d0 as a scratch to perform an add to memory.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5050d26]
+---------------------------------------- Current commit hash: [5050d26] ----------------------------------------+
Building GCC for commit [5050d26]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5050d26 m68k.c (m68k_output_mi_thunk): For ColdFire, use %d0 as a scratch to perform an add to memory.
HEAD is now at 5050d26 m68k.c (m68k_output_mi_thunk): For ColdFire, use %d0 as a scratch to perform an add to memory.
Note: checking out '5050d26'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5050d26... m68k.c (m68k_output_mi_thunk): For ColdFire, use %d0 as a scratch to perform an add to memory.
Deleted branch temp-test-branch (was 5050d26).
Fail to build gcc for commit [5050d26], skip this commit. Return 125.
Bisecting: 760 revisions left to test after this (roughly 10 steps)
[9bf6462a81179f291ba32404cb8ee329f3e6e593] rs6000.c (print_operand): Call mark_decl_referenced before assemble_name.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9bf6462]
+---------------------------------------- Current commit hash: [9bf6462] ----------------------------------------+
Building GCC for commit [9bf6462]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9bf6462 rs6000.c (print_operand): Call mark_decl_referenced before assemble_name.
HEAD is now at 9bf6462 rs6000.c (print_operand): Call mark_decl_referenced before assemble_name.
Note: checking out '9bf6462'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9bf6462... rs6000.c (print_operand): Call mark_decl_referenced before assemble_name.
Deleted branch temp-test-branch (was 9bf6462).
Fail to build gcc for commit [9bf6462], skip this commit. Return 125.
Bisecting: 760 revisions left to test after this (roughly 10 steps)
[acde5ecb011c6813c9c4c3c1b95d763ff3b0c561] run_all.sh: Handle cd2a83c, cd2a91c (target_bit) and ad8011a (target_insn).
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [acde5ec]
+---------------------------------------- Current commit hash: [acde5ec] ----------------------------------------+
GCC for commit [acde5ec] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-acde5ec/bin/gcc with -O1:
1
Output of /tmp/gcc-acde5ec/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at acde5ec... run_all.sh: Handle cd2a83c, cd2a91c (target_bit) and ad8011a (target_insn).
[32m[     info][0m Current commit [acde5ec] is good. Return value: 0

Bisecting: 754 revisions left to test after this (roughly 10 steps)
[1e2a2bdc35afe7bbab8d92226882e2494644bc08] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1e2a2bd]
+---------------------------------------- Current commit hash: [1e2a2bd] ----------------------------------------+
Building GCC for commit [1e2a2bd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1e2a2bd Daily bump.
HEAD is now at 1e2a2bd Daily bump.
Note: checking out '1e2a2bd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1e2a2bd... Daily bump.
Deleted branch temp-test-branch (was 1e2a2bd).
Fail to build gcc for commit [1e2a2bd], skip this commit. Return 125.
Bisecting: 754 revisions left to test after this (roughly 10 steps)
[0760c3805d97a3c1554d95e982d86d096952e873] * gfortran.fortran-torture/execure/intrinsic_associated.f90 	(pointer_to_section): Rewrite to use smaller array.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0760c38]
+---------------------------------------- Current commit hash: [0760c38] ----------------------------------------+
Building GCC for commit [0760c38]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0760c38 * gfortran.fortran-torture/execure/intrinsic_associated.f90 	(pointer_to_section): Rewrite to use smaller array.
HEAD is now at 0760c38 * gfortran.fortran-torture/execure/intrinsic_associated.f90
Note: checking out '0760c38'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0760c38... * gfortran.fortran-torture/execure/intrinsic_associated.f90 	(pointer_to_section): Rewrite to use smaller array.
Deleted branch temp-test-branch (was 0760c38).
Fail to build gcc for commit [0760c38], skip this commit. Return 125.
Bisecting: 754 revisions left to test after this (roughly 10 steps)
[ce120bb2c4b34529fca824ea81f9021132e69713] iterator.h: Add GPL copyright info, with exception clause.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce120bb]
+---------------------------------------- Current commit hash: [ce120bb] ----------------------------------------+
GCC for commit [ce120bb] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-ce120bb/bin/gcc with -O1:
1
Output of /tmp/gcc-ce120bb/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at ce120bb... iterator.h: Add GPL copyright info, with exception clause.
[32m[     info][0m Current commit [ce120bb] is good. Return value: 0

Bisecting: 645 revisions left to test after this (roughly 9 steps)
[0b1d52f74522f2e1ab43a0ada8ad1c89f6daeac5] gimplify.c (copy_if_shared_r): Revert: 2004-05-21 Richard Henderson <rth@redhat.com>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b1d52f]
+---------------------------------------- Current commit hash: [0b1d52f] ----------------------------------------+
Building GCC for commit [0b1d52f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b1d52f gimplify.c (copy_if_shared_r): Revert: 2004-05-21 Richard Henderson <rth@redhat.com>
HEAD is now at 0b1d52f gimplify.c (copy_if_shared_r): Revert: 2004-05-21 Richard Henderson <rth@redhat.com>
Note: checking out '0b1d52f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b1d52f... gimplify.c (copy_if_shared_r): Revert: 2004-05-21 Richard Henderson <rth@redhat.com>
Deleted branch temp-test-branch (was 0b1d52f).
Fail to build gcc for commit [0b1d52f], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[0397ac35755f5edc409010579811e9101f86ab2c] i386.c (TARGET_STRUCT_VALUE_RTX): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0397ac3]
+---------------------------------------- Current commit hash: [0397ac3] ----------------------------------------+
Building GCC for commit [0397ac3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0397ac3 i386.c (TARGET_STRUCT_VALUE_RTX): New.
HEAD is now at 0397ac3 i386.c (TARGET_STRUCT_VALUE_RTX): New.
Note: checking out '0397ac3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0397ac3... i386.c (TARGET_STRUCT_VALUE_RTX): New.
Deleted branch temp-test-branch (was 0397ac3).
Fail to build gcc for commit [0397ac3], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[9bf7acfccbac7fe9541cd27ef2961c763144787c] Makefile.in (df.o): Remove fibheap dependency.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9bf7acf]
+---------------------------------------- Current commit hash: [9bf7acf] ----------------------------------------+
Building GCC for commit [9bf7acf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9bf7acf Makefile.in (df.o): Remove fibheap dependency.
HEAD is now at 9bf7acf Makefile.in (df.o): Remove fibheap dependency.
Note: checking out '9bf7acf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9bf7acf... Makefile.in (df.o): Remove fibheap dependency.
Deleted branch temp-test-branch (was 9bf7acf).
Fail to build gcc for commit [9bf7acf], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[98d784a90b1eaf326983efce3465531ba3b79d00] optimize.c (calls_setjmp_r): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [98d784a]
+---------------------------------------- Current commit hash: [98d784a] ----------------------------------------+
Building GCC for commit [98d784a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 98d784a optimize.c (calls_setjmp_r): Remove.
HEAD is now at 98d784a optimize.c (calls_setjmp_r): Remove.
Note: checking out '98d784a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 98d784a... optimize.c (calls_setjmp_r): Remove.
Deleted branch temp-test-branch (was 98d784a).
Fail to build gcc for commit [98d784a], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[fce66145a8cdde580c01a973f9db87556ce71771] tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores match.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fce6614]
+---------------------------------------- Current commit hash: [fce6614] ----------------------------------------+
Building GCC for commit [fce6614]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fce6614 tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores match.
HEAD is now at fce6614 tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores match.
Note: checking out 'fce6614'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fce6614... tree-ssa.c (verify_ssa): Verify that vdefs/makes_aliased_stores match.
Deleted branch temp-test-branch (was fce6614).
Fail to build gcc for commit [fce6614], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[6263a8f6a597b54898d4865420e61c6368f67080] New test, extracted from 15982
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6263a8f]
+---------------------------------------- Current commit hash: [6263a8f] ----------------------------------------+
Building GCC for commit [6263a8f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6263a8f New test, extracted from 15982
HEAD is now at 6263a8f New test, extracted from 15982
Note: checking out '6263a8f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6263a8f... New test, extracted from 15982
Deleted branch temp-test-branch (was 6263a8f).
Fail to build gcc for commit [6263a8f], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[c6dd0441446d52d675a30056aadf0d2d513c1419] 2004-06-05  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c6dd044]
+---------------------------------------- Current commit hash: [c6dd044] ----------------------------------------+
Building GCC for commit [c6dd044]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c6dd044 2004-06-05  Michael Koch  <konqueror@gmx.de>
HEAD is now at c6dd044 2004-06-05  Michael Koch  <konqueror@gmx.de>
Note: checking out 'c6dd044'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c6dd044... 2004-06-05  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was c6dd044).
Fail to build gcc for commit [c6dd044], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[2d8b59dfd5402cce6da3949fb1f84d7492ab5cbc] invoke.texi: Document -Wunderflow and spell check.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2d8b59d]
+---------------------------------------- Current commit hash: [2d8b59d] ----------------------------------------+
Building GCC for commit [2d8b59d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2d8b59d invoke.texi: Document -Wunderflow and spell check.
HEAD is now at 2d8b59d invoke.texi: Document -Wunderflow and spell check.
Note: checking out '2d8b59d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2d8b59d... invoke.texi: Document -Wunderflow and spell check.
Deleted branch temp-test-branch (was 2d8b59d).
Fail to build gcc for commit [2d8b59d], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[93a9f7d6c63e39974dd0f77ba42af58f71671ad3] * h8300.md (ldm_h8300s_4): Fix condition for expander.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [93a9f7d]
+---------------------------------------- Current commit hash: [93a9f7d] ----------------------------------------+
Building GCC for commit [93a9f7d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 93a9f7d * h8300.md (ldm_h8300s_4): Fix condition for expander.
HEAD is now at 93a9f7d * h8300.md (ldm_h8300s_4): Fix condition for expander.
Note: checking out '93a9f7d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 93a9f7d... * h8300.md (ldm_h8300s_4): Fix condition for expander.
Deleted branch temp-test-branch (was 93a9f7d).
Fail to build gcc for commit [93a9f7d], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[4460cef2258096e1ad518654c127eea8ac71fb79] class.c (alter_access): Use %E format specifier to print an identifier node.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4460cef]
+---------------------------------------- Current commit hash: [4460cef] ----------------------------------------+
Building GCC for commit [4460cef]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4460cef class.c (alter_access): Use %E format specifier to print an identifier node.
HEAD is now at 4460cef class.c (alter_access): Use %E format specifier to print an identifier node.
Note: checking out '4460cef'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4460cef... class.c (alter_access): Use %E format specifier to print an identifier node.
Deleted branch temp-test-branch (was 4460cef).
Fail to build gcc for commit [4460cef], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[ad6717df263c91ddaf139f0bed1578d2fd932744] Makefile.tpl (touch-stage[+id+]): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ad6717d]
+---------------------------------------- Current commit hash: [ad6717d] ----------------------------------------+
Building GCC for commit [ad6717d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ad6717d Makefile.tpl (touch-stage[+id+]): New.
HEAD is now at ad6717d Makefile.tpl (touch-stage[+id+]): New.
Note: checking out 'ad6717d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ad6717d... Makefile.tpl (touch-stage[+id+]): New.
Deleted branch temp-test-branch (was ad6717d).
Fail to build gcc for commit [ad6717d], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[7599f1b0501ea3dec6d5c7afc72072b7d658d9b8] s-osinte-linux-ia64.ads renamed system-linux-ia64.ads
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7599f1b]
+---------------------------------------- Current commit hash: [7599f1b] ----------------------------------------+
Building GCC for commit [7599f1b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7599f1b s-osinte-linux-ia64.ads renamed system-linux-ia64.ads
HEAD is now at 7599f1b s-osinte-linux-ia64.ads renamed system-linux-ia64.ads
Note: checking out '7599f1b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7599f1b... s-osinte-linux-ia64.ads renamed system-linux-ia64.ads
Deleted branch temp-test-branch (was 7599f1b).
Fail to build gcc for commit [7599f1b], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[5c64c9001b34df259ef676ec1af22a652dcd3607] re PR rtl-optimization/15193 (Unary minus using pointer to V4SF vector causes -fforce-mem to exhaust all memory)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5c64c90]
+---------------------------------------- Current commit hash: [5c64c90] ----------------------------------------+
Building GCC for commit [5c64c90]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5c64c90 re PR rtl-optimization/15193 (Unary minus using pointer to V4SF vector causes -fforce-mem to exhaust all memory)
HEAD is now at 5c64c90 re PR rtl-optimization/15193 (Unary minus using pointer to V4SF vector causes -fforce-mem to exhaust all memory)
Note: checking out '5c64c90'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5c64c90... re PR rtl-optimization/15193 (Unary minus using pointer to V4SF vector causes -fforce-mem to exhaust all memory)
Deleted branch temp-test-branch (was 5c64c90).
Fail to build gcc for commit [5c64c90], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[6ffbdf03e5d6863c7441dce9adab8fbf724bc8a4] remove xfails
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ffbdf0]
+---------------------------------------- Current commit hash: [6ffbdf0] ----------------------------------------+
Building GCC for commit [6ffbdf0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ffbdf0 remove xfails
HEAD is now at 6ffbdf0 remove xfails
Note: checking out '6ffbdf0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ffbdf0... remove xfails
Deleted branch temp-test-branch (was 6ffbdf0).
Fail to build gcc for commit [6ffbdf0], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[821e1ea1b155e9ca33f12e8e7af447042822c66b] ada-tree.def (TRANSFORM_EXPR, [...]): Deleted.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [821e1ea]
+---------------------------------------- Current commit hash: [821e1ea] ----------------------------------------+
Building GCC for commit [821e1ea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 821e1ea ada-tree.def (TRANSFORM_EXPR, [...]): Deleted.
HEAD is now at 821e1ea ada-tree.def (TRANSFORM_EXPR, [...]): Deleted.
Note: checking out '821e1ea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 821e1ea... ada-tree.def (TRANSFORM_EXPR, [...]): Deleted.
Deleted branch temp-test-branch (was 821e1ea).
Fail to build gcc for commit [821e1ea], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[dabbc72269ece1873a9bc9a841ed7f3577312da3] i386.md (UNSPECV_EH_RETURN): Kill.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dabbc72]
+---------------------------------------- Current commit hash: [dabbc72] ----------------------------------------+
Building GCC for commit [dabbc72]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dabbc72 i386.md (UNSPECV_EH_RETURN): Kill.
HEAD is now at dabbc72 i386.md (UNSPECV_EH_RETURN): Kill.
Note: checking out 'dabbc72'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dabbc72... i386.md (UNSPECV_EH_RETURN): Kill.
Deleted branch temp-test-branch (was dabbc72).
Fail to build gcc for commit [dabbc72], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[b61d577bdc333fa999b390204c16529b7cca747e] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b61d577]
+---------------------------------------- Current commit hash: [b61d577] ----------------------------------------+
Building GCC for commit [b61d577]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b61d577 Daily bump.
HEAD is now at b61d577 Daily bump.
Note: checking out 'b61d577'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b61d577... Daily bump.
Deleted branch temp-test-branch (was b61d577).
Fail to build gcc for commit [b61d577], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[30f1bddcb7217576c4b746ca0e84e50e3684cf78] configure.in: Fix sed invocation for GFORTRAN_FOR_TARGET.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [30f1bdd]
+---------------------------------------- Current commit hash: [30f1bdd] ----------------------------------------+
Building GCC for commit [30f1bdd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 30f1bdd configure.in: Fix sed invocation for GFORTRAN_FOR_TARGET.
HEAD is now at 30f1bdd configure.in: Fix sed invocation for GFORTRAN_FOR_TARGET.
Note: checking out '30f1bdd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 30f1bdd... configure.in: Fix sed invocation for GFORTRAN_FOR_TARGET.
Deleted branch temp-test-branch (was 30f1bdd).
Fail to build gcc for commit [30f1bdd], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[a98f59be6461692ca395b721c8fd60c9527449cf] re PR ada/15568 (Shared libgnat fails to link on IRIX 6 with GNU ld)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a98f59b]
+---------------------------------------- Current commit hash: [a98f59b] ----------------------------------------+
Building GCC for commit [a98f59b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a98f59b re PR ada/15568 (Shared libgnat fails to link on IRIX 6 with GNU ld)
HEAD is now at a98f59b re PR ada/15568 (Shared libgnat fails to link on IRIX 6 with GNU ld)
Note: checking out 'a98f59b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a98f59b... re PR ada/15568 (Shared libgnat fails to link on IRIX 6 with GNU ld)
Deleted branch temp-test-branch (was a98f59b).
Fail to build gcc for commit [a98f59b], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[ca60dce284a912a0e62500ed6b097c1960dce26e] gcj.texi (Object allocation): Remove _Jv_AllocBytes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ca60dce]
+---------------------------------------- Current commit hash: [ca60dce] ----------------------------------------+
Building GCC for commit [ca60dce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ca60dce gcj.texi (Object allocation): Remove _Jv_AllocBytes.
HEAD is now at ca60dce gcj.texi (Object allocation): Remove _Jv_AllocBytes.
Note: checking out 'ca60dce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ca60dce... gcj.texi (Object allocation): Remove _Jv_AllocBytes.
Deleted branch temp-test-branch (was ca60dce).
Fail to build gcc for commit [ca60dce], skip this commit. Return 125.
Bisecting: 645 revisions left to test after this (roughly 9 steps)
[97e73bd25031f3c7ea03a29c469fbbd4b6db6f8e] tree-sra.c: Rewrite from scratch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [97e73bd25]
+---------------------------------------- Current commit hash: [97e73bd25] ----------------------------------------+
GCC for commit [97e73bd25] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-97e73bd25/bin/gcc with -O1:
0
Output of /tmp/gcc-97e73bd25/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 97e73bd25... tree-sra.c: Rewrite from scratch.
[32m[     info][0m Current commit [97e73bd25] is bad. Return value: 1

Bisecting: 636 revisions left to test after this (roughly 9 steps)
[f29b9db93eb2f3508d2376103af158675f1ee2b0] * tree.c (iterative_hash_expr): Use real_hash.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f29b9db]
+---------------------------------------- Current commit hash: [f29b9db] ----------------------------------------+
Building GCC for commit [f29b9db]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f29b9db * tree.c (iterative_hash_expr): Use real_hash.
HEAD is now at f29b9db * tree.c (iterative_hash_expr): Use real_hash.
Note: checking out 'f29b9db'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f29b9db... * tree.c (iterative_hash_expr): Use real_hash.
Deleted branch temp-test-branch (was f29b9db).
Fail to build gcc for commit [f29b9db], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[1600fe22b9c077d311efd4c677b80d2fa0efb17e] gfortran.h (gfc_actual_arglist): New field missing_arg_type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1600fe2]
+---------------------------------------- Current commit hash: [1600fe2] ----------------------------------------+
Building GCC for commit [1600fe2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1600fe2 gfortran.h (gfc_actual_arglist): New field missing_arg_type.
HEAD is now at 1600fe2 gfortran.h (gfc_actual_arglist): New field missing_arg_type.
Note: checking out '1600fe2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1600fe2... gfortran.h (gfc_actual_arglist): New field missing_arg_type.
Deleted branch temp-test-branch (was 1600fe2).
Fail to build gcc for commit [1600fe2], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[0bf68c6eabb671e2c02a8fabf76120cc1834da77] etime.c (etime_sub): Remove array rank check; Add check for sufficient space.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0bf68c6]
+---------------------------------------- Current commit hash: [0bf68c6] ----------------------------------------+
Building GCC for commit [0bf68c6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0bf68c6 etime.c (etime_sub): Remove array rank check; Add check for sufficient space.
HEAD is now at 0bf68c6 etime.c (etime_sub): Remove array rank check; Add check for sufficient space.
Note: checking out '0bf68c6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0bf68c6... etime.c (etime_sub): Remove array rank check; Add check for sufficient space.
Deleted branch temp-test-branch (was 0bf68c6).
Fail to build gcc for commit [0bf68c6], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[282450180d4350e1b94d527c3d7a1c5b4a63c7ac] alpha.c (alpha_gimplify_va_arg_1, [...]): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2824501]
+---------------------------------------- Current commit hash: [2824501] ----------------------------------------+
Building GCC for commit [2824501]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2824501 alpha.c (alpha_gimplify_va_arg_1, [...]): New.
HEAD is now at 2824501 alpha.c (alpha_gimplify_va_arg_1, [...]): New.
Note: checking out '2824501'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2824501... alpha.c (alpha_gimplify_va_arg_1, [...]): New.
Deleted branch temp-test-branch (was 2824501).
Fail to build gcc for commit [2824501], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[db7b47014640b98a8865bf9242a684a8ed9bb209] oops - omitted from previous delta.  This change is:
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [db7b470]
+---------------------------------------- Current commit hash: [db7b470] ----------------------------------------+
Building GCC for commit [db7b470]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: db7b470 oops - omitted from previous delta.  This change is:
HEAD is now at db7b470 oops - omitted from previous delta.  This change is:
Note: checking out 'db7b470'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at db7b470... oops - omitted from previous delta.  This change is:
Deleted branch temp-test-branch (was db7b470).
Fail to build gcc for commit [db7b470], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[cd3ce9b44c1c3b4f4567de0d2767df058b89ce58] Gimplify VA_ARG_EXPR into simpler forms.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cd3ce9b]
+---------------------------------------- Current commit hash: [cd3ce9b] ----------------------------------------+
Building GCC for commit [cd3ce9b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cd3ce9b Gimplify VA_ARG_EXPR into simpler forms.
HEAD is now at cd3ce9b Gimplify VA_ARG_EXPR into simpler forms.
Note: checking out 'cd3ce9b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cd3ce9b... Gimplify VA_ARG_EXPR into simpler forms.
Deleted branch temp-test-branch (was cd3ce9b).
Fail to build gcc for commit [cd3ce9b], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[04b0faec0878e8b47e732369bad771e8297a6baa] re PR libfortran/16080 (segmentation fault when reading empty string)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [04b0fae]
+---------------------------------------- Current commit hash: [04b0fae] ----------------------------------------+
Building GCC for commit [04b0fae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 04b0fae re PR libfortran/16080 (segmentation fault when reading empty string)
HEAD is now at 04b0fae re PR libfortran/16080 (segmentation fault when reading empty string)
Note: checking out '04b0fae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 04b0fae... re PR libfortran/16080 (segmentation fault when reading empty string)
Deleted branch temp-test-branch (was 04b0fae).
Fail to build gcc for commit [04b0fae], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[f8bcef17296bc600214816f188956d02b4299285] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f8bcef1]
+---------------------------------------- Current commit hash: [f8bcef1] ----------------------------------------+
Building GCC for commit [f8bcef1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f8bcef1 Daily bump.
HEAD is now at f8bcef1 Daily bump.
Note: checking out 'f8bcef1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f8bcef1... Daily bump.
Deleted branch temp-test-branch (was f8bcef1).
Fail to build gcc for commit [f8bcef1], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[5291e69adedd50438763fcaf9c2bfd05d75ca5ff] gfortran.h (struct gfc_symbol): Add equiv_built.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5291e69]
+---------------------------------------- Current commit hash: [5291e69] ----------------------------------------+
Building GCC for commit [5291e69]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5291e69 gfortran.h (struct gfc_symbol): Add equiv_built.
HEAD is now at 5291e69 gfortran.h (struct gfc_symbol): Add equiv_built.
Note: checking out '5291e69'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5291e69... gfortran.h (struct gfc_symbol): Add equiv_built.
Deleted branch temp-test-branch (was 5291e69).
Fail to build gcc for commit [5291e69], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[37f40c9cfd5acd2f5cf508e0a4d31611373a7bc5] re PR target/14542 (ICE on simple source)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [37f40c9]
+---------------------------------------- Current commit hash: [37f40c9] ----------------------------------------+
Building GCC for commit [37f40c9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 37f40c9 re PR target/14542 (ICE on simple source)
HEAD is now at 37f40c9 re PR target/14542 (ICE on simple source)
Note: checking out '37f40c9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 37f40c9... re PR target/14542 (ICE on simple source)
Deleted branch temp-test-branch (was 37f40c9).
Fail to build gcc for commit [37f40c9], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[a1db9d9c61bb4c74f5dac30c9d673c84b63c6384] Complete previous check-in.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a1db9d9]
+---------------------------------------- Current commit hash: [a1db9d9] ----------------------------------------+
Building GCC for commit [a1db9d9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a1db9d9 Complete previous check-in.
HEAD is now at a1db9d9 Complete previous check-in.
Note: checking out 'a1db9d9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a1db9d9... Complete previous check-in.
Deleted branch temp-test-branch (was a1db9d9).
Fail to build gcc for commit [a1db9d9], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[3d5c8546d460a98243615f7d8065f60ee1f1c10c] h8300.md (extendqisi2_h8300): Add constraints.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3d5c854]
+---------------------------------------- Current commit hash: [3d5c854] ----------------------------------------+
Building GCC for commit [3d5c854]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3d5c854 h8300.md (extendqisi2_h8300): Add constraints.
HEAD is now at 3d5c854 h8300.md (extendqisi2_h8300): Add constraints.
Note: checking out '3d5c854'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3d5c854... h8300.md (extendqisi2_h8300): Add constraints.
Deleted branch temp-test-branch (was 3d5c854).
Fail to build gcc for commit [3d5c854], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[ac5347368c5e7943a853427d42c8dd0ca2958939] tree-alias-common.c: Add whitespace.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ac53473]
+---------------------------------------- Current commit hash: [ac53473] ----------------------------------------+
Building GCC for commit [ac53473]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ac53473 tree-alias-common.c: Add whitespace.
HEAD is now at ac53473 tree-alias-common.c: Add whitespace.
Note: checking out 'ac53473'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ac53473... tree-alias-common.c: Add whitespace.
Deleted branch temp-test-branch (was ac53473).
Fail to build gcc for commit [ac53473], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[8cd0b81e9e372e8d7ff510d59e74e1a74616d773] * g++.dg/eh/elide1.C: Remove XFAIL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8cd0b81]
+---------------------------------------- Current commit hash: [8cd0b81] ----------------------------------------+
Building GCC for commit [8cd0b81]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8cd0b81 * g++.dg/eh/elide1.C: Remove XFAIL.
HEAD is now at 8cd0b81 * g++.dg/eh/elide1.C: Remove XFAIL.
Note: checking out '8cd0b81'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8cd0b81... * g++.dg/eh/elide1.C: Remove XFAIL.
Deleted branch temp-test-branch (was 8cd0b81).
Fail to build gcc for commit [8cd0b81], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[5d44aeed9a79c8a149af3c5c22b697ac0beea203] tree-cfg.c (pass_split_crit_edge): Give it a name and a dump file.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5d44aee]
+---------------------------------------- Current commit hash: [5d44aee] ----------------------------------------+
Building GCC for commit [5d44aee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5d44aee tree-cfg.c (pass_split_crit_edge): Give it a name and a dump file.
HEAD is now at 5d44aee tree-cfg.c (pass_split_crit_edge): Give it a name and a dump file.
Note: checking out '5d44aee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5d44aee... tree-cfg.c (pass_split_crit_edge): Give it a name and a dump file.
Deleted branch temp-test-branch (was 5d44aee).
Fail to build gcc for commit [5d44aee], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[45b0c94cb45aefa68b1627f8a76a84bad2d5b717] re PR c/14765 (ice-on-invalid-code, ICE while compiling ({}) expression)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [45b0c94]
+---------------------------------------- Current commit hash: [45b0c94] ----------------------------------------+
Building GCC for commit [45b0c94]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 45b0c94 re PR c/14765 (ice-on-invalid-code, ICE while compiling ({}) expression)
HEAD is now at 45b0c94 re PR c/14765 (ice-on-invalid-code, ICE while compiling ({}) expression)
Note: checking out '45b0c94'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 45b0c94... re PR c/14765 (ice-on-invalid-code, ICE while compiling ({}) expression)
Deleted branch temp-test-branch (was 45b0c94).
Fail to build gcc for commit [45b0c94], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[18db8f19afa7464645b265b771c397b188b6d1f8] re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [18db8f1]
+---------------------------------------- Current commit hash: [18db8f1] ----------------------------------------+
Building GCC for commit [18db8f1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 18db8f1 re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
HEAD is now at 18db8f1 re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
Note: checking out '18db8f1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 18db8f1... re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
Deleted branch temp-test-branch (was 18db8f1).
Fail to build gcc for commit [18db8f1], skip this commit. Return 125.
Bisecting: 636 revisions left to test after this (roughly 9 steps)
[fe88415f1b385b2dfc11f54422ff414f643df9e0] re PR c++/16260 (ICE in template function)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fe88415]
+---------------------------------------- Current commit hash: [fe88415] ----------------------------------------+
GCC for commit [fe88415] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-fe88415/bin/gcc with -O1:
0
Output of /tmp/gcc-fe88415/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at fe88415... re PR c++/16260 (ICE in template function)
[32m[     info][0m Current commit [fe88415] is bad. Return value: 1

Bisecting: 634 revisions left to test after this (roughly 9 steps)
[72edf1464ddd6345a4caa6e124de0939587b0989] Fix typo in previous patch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [72edf14]
+---------------------------------------- Current commit hash: [72edf14] ----------------------------------------+
Building GCC for commit [72edf14]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 72edf14 Fix typo in previous patch.
HEAD is now at 72edf14 Fix typo in previous patch.
Note: checking out '72edf14'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 72edf14... Fix typo in previous patch.
Deleted branch temp-test-branch (was 72edf14).
Fail to build gcc for commit [72edf14], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[808fd801de9700471d99876e2ff4be467b8096f2] parse.y (qualify_and_find): Pass type decl, not identifier, to load_class.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [808fd80]
+---------------------------------------- Current commit hash: [808fd80] ----------------------------------------+
Building GCC for commit [808fd80]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 808fd80 parse.y (qualify_and_find): Pass type decl, not identifier, to load_class.
HEAD is now at 808fd80 parse.y (qualify_and_find): Pass type decl, not identifier, to load_class.
Note: checking out '808fd80'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 808fd80... parse.y (qualify_and_find): Pass type decl, not identifier, to load_class.
Deleted branch temp-test-branch (was 808fd80).
Fail to build gcc for commit [808fd80], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[6956a6f38abed183071e192fb84f4f8bfd090eb9] * intrinsic.c (add_sym_2s): Use correct function types.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6956a6f]
+---------------------------------------- Current commit hash: [6956a6f] ----------------------------------------+
Building GCC for commit [6956a6f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6956a6f * intrinsic.c (add_sym_2s): Use correct function types.
HEAD is now at 6956a6f * intrinsic.c (add_sym_2s): Use correct function types.
Note: checking out '6956a6f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6956a6f... * intrinsic.c (add_sym_2s): Use correct function types.
Deleted branch temp-test-branch (was 6956a6f).
Fail to build gcc for commit [6956a6f], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[960076d93074792ff3c6b749150e577216e4e44b] tree-ssa-dce.c (perform_tree_ssa_dce): Free el at the end of the function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [960076d]
+---------------------------------------- Current commit hash: [960076d] ----------------------------------------+
Building GCC for commit [960076d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 960076d tree-ssa-dce.c (perform_tree_ssa_dce): Free el at the end of the function.
HEAD is now at 960076d tree-ssa-dce.c (perform_tree_ssa_dce): Free el at the end of the function.
Note: checking out '960076d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 960076d... tree-ssa-dce.c (perform_tree_ssa_dce): Free el at the end of the function.
Deleted branch temp-test-branch (was 960076d).
Fail to build gcc for commit [960076d], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[97509a89b1c27446c4ac98d0756f6a587d3ebbf5] pa.c (emit_move_sequence): Fix loading of non 14-bit CONST operands when generating PIC code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [97509a8]
+---------------------------------------- Current commit hash: [97509a8] ----------------------------------------+
Building GCC for commit [97509a8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 97509a8 pa.c (emit_move_sequence): Fix loading of non 14-bit CONST operands when generating PIC code.
HEAD is now at 97509a8 pa.c (emit_move_sequence): Fix loading of non 14-bit CONST operands when generating PIC code.
Note: checking out '97509a8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 97509a8... pa.c (emit_move_sequence): Fix loading of non 14-bit CONST operands when generating PIC code.
Deleted branch temp-test-branch (was 97509a8).
Fail to build gcc for commit [97509a8], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[4f9c6b6e187417a15ac89f7e76019f27fd637076] re PR fortran/15206 (RRSPACING intrinsics returns wrong result for 0.0)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4f9c6b6]
+---------------------------------------- Current commit hash: [4f9c6b6] ----------------------------------------+
Building GCC for commit [4f9c6b6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4f9c6b6 re PR fortran/15206 (RRSPACING intrinsics returns wrong result for 0.0)
HEAD is now at 4f9c6b6 re PR fortran/15206 (RRSPACING intrinsics returns wrong result for 0.0)
Note: checking out '4f9c6b6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4f9c6b6... re PR fortran/15206 (RRSPACING intrinsics returns wrong result for 0.0)
Deleted branch temp-test-branch (was 4f9c6b6).
Fail to build gcc for commit [4f9c6b6], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[09d98c720ee469390f8114878cfd4f46650cec6e] re PR tree-optimization/15743 (Fold index() at tree level.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [09d98c7]
+---------------------------------------- Current commit hash: [09d98c7] ----------------------------------------+
Building GCC for commit [09d98c7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 09d98c7 re PR tree-optimization/15743 (Fold index() at tree level.)
HEAD is now at 09d98c7 re PR tree-optimization/15743 (Fold index() at tree level.)
Note: checking out '09d98c7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 09d98c7... re PR tree-optimization/15743 (Fold index() at tree level.)
Deleted branch temp-test-branch (was 09d98c7).
Fail to build gcc for commit [09d98c7], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[c2484a8b43b3aaa60fb0a1681c735ab0fe459476] Minor updating of comments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c2484a8]
+---------------------------------------- Current commit hash: [c2484a8] ----------------------------------------+
Building GCC for commit [c2484a8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c2484a8 Minor updating of comments.
HEAD is now at c2484a8 Minor updating of comments.
Note: checking out 'c2484a8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c2484a8... Minor updating of comments.
Deleted branch temp-test-branch (was c2484a8).
Fail to build gcc for commit [c2484a8], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[d314442396916fa65739d6baeb24b2f0cfc76634] invoke.texi (-static-libgcc): Explicitly mention non-GNU linkers.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d314442]
+---------------------------------------- Current commit hash: [d314442] ----------------------------------------+
Building GCC for commit [d314442]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d314442 invoke.texi (-static-libgcc): Explicitly mention non-GNU linkers.
HEAD is now at d314442 invoke.texi (-static-libgcc): Explicitly mention non-GNU linkers.
Note: checking out 'd314442'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d314442... invoke.texi (-static-libgcc): Explicitly mention non-GNU linkers.
Deleted branch temp-test-branch (was d314442).
Fail to build gcc for commit [d314442], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[d464f8e99ef16ef8eb26f285e54a2d5ce6024c64] write.c (write_logical): Don't print extra blank.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d464f8e]
+---------------------------------------- Current commit hash: [d464f8e] ----------------------------------------+
Building GCC for commit [d464f8e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d464f8e write.c (write_logical): Don't print extra blank.
HEAD is now at d464f8e write.c (write_logical): Don't print extra blank.
Note: checking out 'd464f8e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d464f8e... write.c (write_logical): Don't print extra blank.
Deleted branch temp-test-branch (was d464f8e).
Fail to build gcc for commit [d464f8e], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[b092552d60a2edc2ae9f7165229092157caf0953] GregorianCalendar.java (computeTime): Skip buggy formulae when we already know the answer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b092552]
+---------------------------------------- Current commit hash: [b092552] ----------------------------------------+
Building GCC for commit [b092552]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b092552 GregorianCalendar.java (computeTime): Skip buggy formulae when we already know the answer.
HEAD is now at b092552 GregorianCalendar.java (computeTime): Skip buggy formulae when we already know the answer.
Note: checking out 'b092552'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b092552... GregorianCalendar.java (computeTime): Skip buggy formulae when we already know the answer.
Deleted branch temp-test-branch (was b092552).
Fail to build gcc for commit [b092552], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[5e806501e1718e64e12fbae84dd7f35e91620cdd] oh oh oh. forgot to add the PR number.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5e80650]
+---------------------------------------- Current commit hash: [5e80650] ----------------------------------------+
Building GCC for commit [5e80650]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5e80650 oh oh oh. forgot to add the PR number.
HEAD is now at 5e80650 oh oh oh. forgot to add the PR number.
Note: checking out '5e80650'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5e80650... oh oh oh. forgot to add the PR number.
Deleted branch temp-test-branch (was 5e80650).
Fail to build gcc for commit [5e80650], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[aa6c7c3a3a02b5518c9a1398145160ddf8df2f56] builtins.c (expand_builtin): Fall back to library function call for conj...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aa6c7c3]
+---------------------------------------- Current commit hash: [aa6c7c3] ----------------------------------------+
Building GCC for commit [aa6c7c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aa6c7c3 builtins.c (expand_builtin): Fall back to library function call for conj...
HEAD is now at aa6c7c3 builtins.c (expand_builtin): Fall back to library function call for conj...
Note: checking out 'aa6c7c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aa6c7c3... builtins.c (expand_builtin): Fall back to library function call for conj...
Deleted branch temp-test-branch (was aa6c7c3).
Fail to build gcc for commit [aa6c7c3], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[14886ab7b706a6b19c262d4c3b9684afb0e879c1] * tree-ssa-phiopt.c: Fix various formatting issues.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [14886ab]
+---------------------------------------- Current commit hash: [14886ab] ----------------------------------------+
Building GCC for commit [14886ab]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 14886ab * tree-ssa-phiopt.c: Fix various formatting issues.
HEAD is now at 14886ab * tree-ssa-phiopt.c: Fix various formatting issues.
Note: checking out '14886ab'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 14886ab... * tree-ssa-phiopt.c: Fix various formatting issues.
Deleted branch temp-test-branch (was 14886ab).
Fail to build gcc for commit [14886ab], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[37c849e40ef7215ae2f78862a483781811b69bc7] unix.S (ffi_call_unix): Insert group barrier break fp_done.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [37c849e]
+---------------------------------------- Current commit hash: [37c849e] ----------------------------------------+
Building GCC for commit [37c849e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 37c849e unix.S (ffi_call_unix): Insert group barrier break fp_done.
HEAD is now at 37c849e unix.S (ffi_call_unix): Insert group barrier break fp_done.
Note: checking out '37c849e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 37c849e... unix.S (ffi_call_unix): Insert group barrier break fp_done.
Deleted branch temp-test-branch (was 37c849e).
Fail to build gcc for commit [37c849e], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[026a935f414f319840a64bb49ef13b3928ae6f29] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [026a935]
+---------------------------------------- Current commit hash: [026a935] ----------------------------------------+
Building GCC for commit [026a935]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 026a935 Daily bump.
HEAD is now at 026a935 Daily bump.
Note: checking out '026a935'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 026a935... Daily bump.
Deleted branch temp-test-branch (was 026a935).
Fail to build gcc for commit [026a935], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[4b5b961390cde313cc983f4cbffb954eeaf078e3] re PR tree-optimization/15108 ([tree-ssa] [regression] missed sib-calling for pointer changes)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4b5b961]
+---------------------------------------- Current commit hash: [4b5b961] ----------------------------------------+
Building GCC for commit [4b5b961]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4b5b961 re PR tree-optimization/15108 ([tree-ssa] [regression] missed sib-calling for pointer changes)
HEAD is now at 4b5b961 re PR tree-optimization/15108 ([tree-ssa] [regression] missed sib-calling for pointer changes)
Note: checking out '4b5b961'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4b5b961... re PR tree-optimization/15108 ([tree-ssa] [regression] missed sib-calling for pointer changes)
Deleted branch temp-test-branch (was 4b5b961).
Fail to build gcc for commit [4b5b961], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[4ac29b33742d45c8cdc4da91b6e994d6cc49e79a] * Makefile.in (AR_FOR_TARGET, RANLIB_FOR_TARGET) 	(NM_FOR_TARGET): Use := and $(shell). 	(mainversion): Remove unused variable.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4ac29b3]
+---------------------------------------- Current commit hash: [4ac29b3] ----------------------------------------+
Building GCC for commit [4ac29b3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4ac29b3 * Makefile.in (AR_FOR_TARGET, RANLIB_FOR_TARGET) 	(NM_FOR_TARGET): Use := and $(shell). 	(mainversion): Remove unused variable.
HEAD is now at 4ac29b3 * Makefile.in (AR_FOR_TARGET, RANLIB_FOR_TARGET)
Note: checking out '4ac29b3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4ac29b3... * Makefile.in (AR_FOR_TARGET, RANLIB_FOR_TARGET) 	(NM_FOR_TARGET): Use := and $(shell). 	(mainversion): Remove unused variable.
Deleted branch temp-test-branch (was 4ac29b3).
Fail to build gcc for commit [4ac29b3], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[9cf84a3cf034bdc70b501b592c1981221c115a2b] * cfgrtl.c (try_redirect_by_replacing_jump): Fix return value.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9cf84a3]
+---------------------------------------- Current commit hash: [9cf84a3] ----------------------------------------+
Building GCC for commit [9cf84a3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9cf84a3 * cfgrtl.c (try_redirect_by_replacing_jump): Fix return value.
HEAD is now at 9cf84a3 * cfgrtl.c (try_redirect_by_replacing_jump): Fix return value.
Note: checking out '9cf84a3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9cf84a3... * cfgrtl.c (try_redirect_by_replacing_jump): Fix return value.
Deleted branch temp-test-branch (was 9cf84a3).
Fail to build gcc for commit [9cf84a3], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[14f661f16c1aabf017bcd7b0fea29786366b502f] builtins.c (fold_builtin_unordered_cmp): Take an EXP argument instead of both an ARGLIST and a result TYPE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [14f661f]
+---------------------------------------- Current commit hash: [14f661f] ----------------------------------------+
Building GCC for commit [14f661f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 14f661f builtins.c (fold_builtin_unordered_cmp): Take an EXP argument instead of both an ARGLIST and a result TYPE.
HEAD is now at 14f661f builtins.c (fold_builtin_unordered_cmp): Take an EXP argument instead of both an ARGLIST and a result TYPE.
Note: checking out '14f661f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 14f661f... builtins.c (fold_builtin_unordered_cmp): Take an EXP argument instead of both an ARGLIST and a result TYPE.
Deleted branch temp-test-branch (was 14f661f).
Fail to build gcc for commit [14f661f], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[90aa6719a03ca37a01bf94240dbf02fb4b1eb3e0] toplev.c (init_asm_output): Add explicit 'b' to mode when opening asm_out_file.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [90aa671]
+---------------------------------------- Current commit hash: [90aa671] ----------------------------------------+
Building GCC for commit [90aa671]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 90aa671 toplev.c (init_asm_output): Add explicit 'b' to mode when opening asm_out_file.
HEAD is now at 90aa671 toplev.c (init_asm_output): Add explicit 'b' to mode when opening asm_out_file.
Note: checking out '90aa671'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 90aa671... toplev.c (init_asm_output): Add explicit 'b' to mode when opening asm_out_file.
Deleted branch temp-test-branch (was 90aa671).
Fail to build gcc for commit [90aa671], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[dc04f75547c55a6022125ef3684f18ae432af236] struct-align-2_x.c: Include <limits.h>.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dc04f75]
+---------------------------------------- Current commit hash: [dc04f75] ----------------------------------------+
Building GCC for commit [dc04f75]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dc04f75 struct-align-2_x.c: Include <limits.h>.
HEAD is now at dc04f75 struct-align-2_x.c: Include <limits.h>.
Note: checking out 'dc04f75'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dc04f75... struct-align-2_x.c: Include <limits.h>.
Deleted branch temp-test-branch (was dc04f75).
Fail to build gcc for commit [dc04f75], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[e9dc0db773f588f61906922675f36fb5bb128967] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e9dc0db]
+---------------------------------------- Current commit hash: [e9dc0db] ----------------------------------------+
Building GCC for commit [e9dc0db]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e9dc0db Daily bump.
HEAD is now at e9dc0db Daily bump.
Note: checking out 'e9dc0db'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e9dc0db... Daily bump.
Deleted branch temp-test-branch (was e9dc0db).
Fail to build gcc for commit [e9dc0db], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[9bb80bb2de9425d04f47d3570d1ccde5e383e66d] fold-const.c (constant_boolean_node): Handle boolean_type_node directly...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9bb80bb]
+---------------------------------------- Current commit hash: [9bb80bb] ----------------------------------------+
Building GCC for commit [9bb80bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9bb80bb fold-const.c (constant_boolean_node): Handle boolean_type_node directly...
HEAD is now at 9bb80bb fold-const.c (constant_boolean_node): Handle boolean_type_node directly...
Note: checking out '9bb80bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9bb80bb... fold-const.c (constant_boolean_node): Handle boolean_type_node directly...
Deleted branch temp-test-branch (was 9bb80bb).
Fail to build gcc for commit [9bb80bb], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[648b6075b27f942672d0665619acf58747768fd4] ZipEntry.java (setTime): Remove scaling.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [648b607]
+---------------------------------------- Current commit hash: [648b607] ----------------------------------------+
Building GCC for commit [648b607]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 648b607 ZipEntry.java (setTime): Remove scaling.
HEAD is now at 648b607 ZipEntry.java (setTime): Remove scaling.
Note: checking out '648b607'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 648b607... ZipEntry.java (setTime): Remove scaling.
Deleted branch temp-test-branch (was 648b607).
Fail to build gcc for commit [648b607], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[1bfc8f675bee787718c1f5d24a300d7b86107fea] altivec-7.c: Don't use 'vector long'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1bfc8f6]
+---------------------------------------- Current commit hash: [1bfc8f6] ----------------------------------------+
Building GCC for commit [1bfc8f6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1bfc8f6 altivec-7.c: Don't use 'vector long'.
HEAD is now at 1bfc8f6 altivec-7.c: Don't use 'vector long'.
Note: checking out '1bfc8f6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1bfc8f6... altivec-7.c: Don't use 'vector long'.
Deleted branch temp-test-branch (was 1bfc8f6).
Fail to build gcc for commit [1bfc8f6], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[d599f32955972ba057772d1dfaa85836457bbbfc] re PR rtl-optimization/15717 (Error: can't resolve `L0' {*ABS* section} - `xx' {*UND* section})
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d599f32]
+---------------------------------------- Current commit hash: [d599f32] ----------------------------------------+
Building GCC for commit [d599f32]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d599f32 re PR rtl-optimization/15717 (Error: can't resolve `L0' {*ABS* section} - `xx' {*UND* section})
HEAD is now at d599f32 re PR rtl-optimization/15717 (Error: can't resolve `L0' {*ABS* section} - `xx' {*UND* section})
Note: checking out 'd599f32'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d599f32... re PR rtl-optimization/15717 (Error: can't resolve `L0' {*ABS* section} - `xx' {*UND* section})
Deleted branch temp-test-branch (was d599f32).
Fail to build gcc for commit [d599f32], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[74f48aee289e44577577a8be59dd8233b592f504] * lib/compat.exp (compat-execute): Break up long lines.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [74f48ae]
+---------------------------------------- Current commit hash: [74f48ae] ----------------------------------------+
Building GCC for commit [74f48ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 74f48ae * lib/compat.exp (compat-execute): Break up long lines.
HEAD is now at 74f48ae * lib/compat.exp (compat-execute): Break up long lines.
Note: checking out '74f48ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 74f48ae... * lib/compat.exp (compat-execute): Break up long lines.
Deleted branch temp-test-branch (was 74f48ae).
Fail to build gcc for commit [74f48ae], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[aa07e14d5d3d90dd7f5e0804a8626cd6d4ddbb0e] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aa07e14]
+---------------------------------------- Current commit hash: [aa07e14] ----------------------------------------+
Building GCC for commit [aa07e14]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aa07e14 Daily bump.
HEAD is now at aa07e14 Daily bump.
Note: checking out 'aa07e14'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aa07e14... Daily bump.
Deleted branch temp-test-branch (was aa07e14).
Fail to build gcc for commit [aa07e14], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[67d060c4edc01f4a2a92b05fba4fb07ba43b216a] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67d060c]
+---------------------------------------- Current commit hash: [67d060c] ----------------------------------------+
Building GCC for commit [67d060c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67d060c Daily bump.
HEAD is now at 67d060c Daily bump.
Note: checking out '67d060c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67d060c... Daily bump.
Deleted branch temp-test-branch (was 67d060c).
Fail to build gcc for commit [67d060c], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[3743236e9c2259e46bec32221fcad4db67bfb22b] re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3743236]
+---------------------------------------- Current commit hash: [3743236] ----------------------------------------+
Building GCC for commit [3743236]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3743236 re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
HEAD is now at 3743236 re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
Note: checking out '3743236'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3743236... re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
Deleted branch temp-test-branch (was 3743236).
Fail to build gcc for commit [3743236], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[f8cfc6aa070047007c18468b54996c116e593642] alias.c (record_set, [...]): Use REG_P.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f8cfc6a]
+---------------------------------------- Current commit hash: [f8cfc6a] ----------------------------------------+
Building GCC for commit [f8cfc6a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f8cfc6a alias.c (record_set, [...]): Use REG_P.
HEAD is now at f8cfc6a alias.c (record_set, [...]): Use REG_P.
Note: checking out 'f8cfc6a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f8cfc6a... alias.c (record_set, [...]): Use REG_P.
Deleted branch temp-test-branch (was f8cfc6a).
Fail to build gcc for commit [f8cfc6a], skip this commit. Return 125.
Bisecting: 634 revisions left to test after this (roughly 9 steps)
[f51af25f335bb3d70752efe5f90540a673923569] builtins.def (execl, [...]): Change to DEF_EXT_LIB_BUILTIN.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f51af25]
+---------------------------------------- Current commit hash: [f51af25] ----------------------------------------+
GCC for commit [f51af25] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-f51af25/bin/gcc with -O1:
0
Output of /tmp/gcc-f51af25/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at f51af25... builtins.def (execl, [...]): Change to DEF_EXT_LIB_BUILTIN.
[32m[     info][0m Current commit [f51af25] is bad. Return value: 1

Bisecting: 626 revisions left to test after this (roughly 9 steps)
[07d5edd25f93b247c49250803a3e37b8f17027b2] Fix typo
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [07d5edd]
+---------------------------------------- Current commit hash: [07d5edd] ----------------------------------------+
Building GCC for commit [07d5edd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 07d5edd Fix typo
HEAD is now at 07d5edd Fix typo
Note: checking out '07d5edd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 07d5edd... Fix typo
Deleted branch temp-test-branch (was 07d5edd).
Fail to build gcc for commit [07d5edd], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[dff008b446fd93001c3e0c97d503042c37fa8574] i386.c (ix86_adjust_cost): Don't increase the cost for load+operation for PROCESSOR_PENTIUMPRO...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dff008b]
+---------------------------------------- Current commit hash: [dff008b] ----------------------------------------+
Building GCC for commit [dff008b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dff008b i386.c (ix86_adjust_cost): Don't increase the cost for load+operation for PROCESSOR_PENTIUMPRO...
HEAD is now at dff008b i386.c (ix86_adjust_cost): Don't increase the cost for load+operation for PROCESSOR_PENTIUMPRO...
Note: checking out 'dff008b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dff008b... i386.c (ix86_adjust_cost): Don't increase the cost for load+operation for PROCESSOR_PENTIUMPRO...
Deleted branch temp-test-branch (was dff008b).
Fail to build gcc for commit [dff008b], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[3a3f4da9377970c5cfd96dc7f4717427384263c4] Makefile.in (tree-ssa-phiopt.o): Depends on flags.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a3f4da]
+---------------------------------------- Current commit hash: [3a3f4da] ----------------------------------------+
Building GCC for commit [3a3f4da]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a3f4da Makefile.in (tree-ssa-phiopt.o): Depends on flags.h.
HEAD is now at 3a3f4da Makefile.in (tree-ssa-phiopt.o): Depends on flags.h.
Note: checking out '3a3f4da'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a3f4da... Makefile.in (tree-ssa-phiopt.o): Depends on flags.h.
Deleted branch temp-test-branch (was 3a3f4da).
Fail to build gcc for commit [3a3f4da], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[415c974c0bd00f130e7795c3342bad4e3f014c6e] When a class template is explicitly instantiated, its member should be too.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [415c974]
+---------------------------------------- Current commit hash: [415c974] ----------------------------------------+
Building GCC for commit [415c974]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 415c974 When a class template is explicitly instantiated, its member should be too.
HEAD is now at 415c974 When a class template is explicitly instantiated, its member should be too.
Note: checking out '415c974'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 415c974... When a class template is explicitly instantiated, its member should be too.
Deleted branch temp-test-branch (was 415c974).
Fail to build gcc for commit [415c974], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[413ed876c51b0b85661e938b1914dcd3821066f7] Adding self to MAINTAINERS
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [413ed87]
+---------------------------------------- Current commit hash: [413ed87] ----------------------------------------+
Building GCC for commit [413ed87]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 413ed87 Adding self to MAINTAINERS
HEAD is now at 413ed87 Adding self to MAINTAINERS
Note: checking out '413ed87'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 413ed87... Adding self to MAINTAINERS
Deleted branch temp-test-branch (was 413ed87).
Fail to build gcc for commit [413ed87], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[dfc46c1fdef0d825023be8c49c14214b21d1d4f6] One more comment update
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dfc46c1]
+---------------------------------------- Current commit hash: [dfc46c1] ----------------------------------------+
Building GCC for commit [dfc46c1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dfc46c1 One more comment update
HEAD is now at dfc46c1 One more comment update
Note: checking out 'dfc46c1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dfc46c1... One more comment update
Deleted branch temp-test-branch (was dfc46c1).
Fail to build gcc for commit [dfc46c1], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[f4085d4c0b2c20282d8197507f6ffb35522aa2e6] re PR middle-end/3074 (Statement with no effect not flagged with -Wall)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f4085d4]
+---------------------------------------- Current commit hash: [f4085d4] ----------------------------------------+
Building GCC for commit [f4085d4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f4085d4 re PR middle-end/3074 (Statement with no effect not flagged with -Wall)
HEAD is now at f4085d4 re PR middle-end/3074 (Statement with no effect not flagged with -Wall)
Note: checking out 'f4085d4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f4085d4... re PR middle-end/3074 (Statement with no effect not flagged with -Wall)
Deleted branch temp-test-branch (was f4085d4).
Fail to build gcc for commit [f4085d4], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[1600b7d6167562ce7dbf9cb9f18039e7db848a0e] Improved [Protocol -isEqual:], now more correct and faster
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1600b7d]
+---------------------------------------- Current commit hash: [1600b7d] ----------------------------------------+
Building GCC for commit [1600b7d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1600b7d Improved [Protocol -isEqual:], now more correct and faster
HEAD is now at 1600b7d Improved [Protocol -isEqual:], now more correct and faster
Note: checking out '1600b7d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1600b7d... Improved [Protocol -isEqual:], now more correct and faster
Deleted branch temp-test-branch (was 1600b7d).
Fail to build gcc for commit [1600b7d], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[f4334c063a8fdc1365bec8e51779f5a5e539c632] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f4334c0]
+---------------------------------------- Current commit hash: [f4334c0] ----------------------------------------+
Building GCC for commit [f4334c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f4334c0 Daily bump.
HEAD is now at f4334c0 Daily bump.
Note: checking out 'f4334c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f4334c0... Daily bump.
Deleted branch temp-test-branch (was f4334c0).
Fail to build gcc for commit [f4334c0], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[03febbee849aff83a570f223ad9a3f2425ac3177] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [03febbe]
+---------------------------------------- Current commit hash: [03febbe] ----------------------------------------+
Building GCC for commit [03febbe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 03febbe Daily bump.
HEAD is now at 03febbe Daily bump.
Note: checking out '03febbe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 03febbe... Daily bump.
Deleted branch temp-test-branch (was 03febbe).
Fail to build gcc for commit [03febbe], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[24a88b0c7a37254d961e740f1dc5071177107c01] fix bootstrap build breakage
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [24a88b0]
+---------------------------------------- Current commit hash: [24a88b0] ----------------------------------------+
Building GCC for commit [24a88b0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 24a88b0 fix bootstrap build breakage
HEAD is now at 24a88b0 fix bootstrap build breakage
Note: checking out '24a88b0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 24a88b0... fix bootstrap build breakage
Deleted branch temp-test-branch (was 24a88b0).
Fail to build gcc for commit [24a88b0], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[e0f2a7c6f2b108181d3bc695c8c5c768da56322d] re PR fortran/15478 (gfortran manual problems)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e0f2a7c]
+---------------------------------------- Current commit hash: [e0f2a7c] ----------------------------------------+
Building GCC for commit [e0f2a7c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e0f2a7c re PR fortran/15478 (gfortran manual problems)
HEAD is now at e0f2a7c re PR fortran/15478 (gfortran manual problems)
Note: checking out 'e0f2a7c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e0f2a7c... re PR fortran/15478 (gfortran manual problems)
Deleted branch temp-test-branch (was e0f2a7c).
Fail to build gcc for commit [e0f2a7c], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[d00ad49ba1c217ec55751ed6461890e8911bb001] tree-cfg.c (tree_make_forwarder_block): Use SET_PHI_RESULT.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d00ad49]
+---------------------------------------- Current commit hash: [d00ad49] ----------------------------------------+
Building GCC for commit [d00ad49]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d00ad49 tree-cfg.c (tree_make_forwarder_block): Use SET_PHI_RESULT.
HEAD is now at d00ad49 tree-cfg.c (tree_make_forwarder_block): Use SET_PHI_RESULT.
Note: checking out 'd00ad49'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d00ad49... tree-cfg.c (tree_make_forwarder_block): Use SET_PHI_RESULT.
Deleted branch temp-test-branch (was d00ad49).
Fail to build gcc for commit [d00ad49], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[3017c534d4b25924660d70fb34030691caebde59] Missed these two in previous commit.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3017c53]
+---------------------------------------- Current commit hash: [3017c53] ----------------------------------------+
Building GCC for commit [3017c53]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3017c53 Missed these two in previous commit.
HEAD is now at 3017c53 Missed these two in previous commit.
Note: checking out '3017c53'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3017c53... Missed these two in previous commit.
Deleted branch temp-test-branch (was 3017c53).
Fail to build gcc for commit [3017c53], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[42cc8f8919d926d4cb1209cdcdd4e201f3d0ae62] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42cc8f8]
+---------------------------------------- Current commit hash: [42cc8f8] ----------------------------------------+
Building GCC for commit [42cc8f8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42cc8f8 Daily bump.
HEAD is now at 42cc8f8 Daily bump.
Note: checking out '42cc8f8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42cc8f8... Daily bump.
Deleted branch temp-test-branch (was 42cc8f8).
Fail to build gcc for commit [42cc8f8], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[25a1a39e0d97ba879795de3fafd3115ba06a514f] tree.h (lvalue_or_else): Delete function prototype.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [25a1a39]
+---------------------------------------- Current commit hash: [25a1a39] ----------------------------------------+
Building GCC for commit [25a1a39]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 25a1a39 tree.h (lvalue_or_else): Delete function prototype.
HEAD is now at 25a1a39 tree.h (lvalue_or_else): Delete function prototype.
Note: checking out '25a1a39'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 25a1a39... tree.h (lvalue_or_else): Delete function prototype.
Deleted branch temp-test-branch (was 25a1a39).
Fail to build gcc for commit [25a1a39], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[5ab8e5cc696c9116da67316b19d8c62abde9ed82] compat.exp (compat-get-options-main): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5ab8e5c]
+---------------------------------------- Current commit hash: [5ab8e5c] ----------------------------------------+
Building GCC for commit [5ab8e5c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5ab8e5c compat.exp (compat-get-options-main): New.
HEAD is now at 5ab8e5c compat.exp (compat-get-options-main): New.
Note: checking out '5ab8e5c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5ab8e5c... compat.exp (compat-get-options-main): New.
Deleted branch temp-test-branch (was 5ab8e5c).
Fail to build gcc for commit [5ab8e5c], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[cb6231728e5b5cd61ef549354378252bfa92aabb] configure.ac: Add x86_64-*-freebsd* support.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cb62317]
+---------------------------------------- Current commit hash: [cb62317] ----------------------------------------+
Building GCC for commit [cb62317]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cb62317 configure.ac: Add x86_64-*-freebsd* support.
HEAD is now at cb62317 configure.ac: Add x86_64-*-freebsd* support.
Note: checking out 'cb62317'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cb62317... configure.ac: Add x86_64-*-freebsd* support.
Deleted branch temp-test-branch (was cb62317).
Fail to build gcc for commit [cb62317], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[e314a036a8942fe4ce5d9fd586f0a8bac90f6df3] re PR middle-end/14084 (Reg allocator incorrectly changes REG_OFFSET)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e314a03]
+---------------------------------------- Current commit hash: [e314a03] ----------------------------------------+
Building GCC for commit [e314a03]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e314a03 re PR middle-end/14084 (Reg allocator incorrectly changes REG_OFFSET)
HEAD is now at e314a03 re PR middle-end/14084 (Reg allocator incorrectly changes REG_OFFSET)
Note: checking out 'e314a03'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e314a03... re PR middle-end/14084 (Reg allocator incorrectly changes REG_OFFSET)
Deleted branch temp-test-branch (was e314a03).
Fail to build gcc for commit [e314a03], skip this commit. Return 125.
Bisecting: 626 revisions left to test after this (roughly 9 steps)
[bce3da3294519d63a3fb3f6eb87749b3e2cb83cd] Check-in change to this file that got left out of last check-in
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bce3da3]
+---------------------------------------- Current commit hash: [bce3da3] ----------------------------------------+
GCC for commit [bce3da3] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-bce3da3/bin/gcc with -O1:
0
Output of /tmp/gcc-bce3da3/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at bce3da3... Check-in change to this file that got left out of last check-in
[32m[     info][0m Current commit [bce3da3] is bad. Return value: 1

Bisecting: 624 revisions left to test after this (roughly 9 steps)
[0ab80019b6aadd0fb427920d38428db7ed1ccbf1] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0ab8001]
+---------------------------------------- Current commit hash: [0ab8001] ----------------------------------------+
Building GCC for commit [0ab8001]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0ab8001 [multiple changes]
HEAD is now at 0ab8001 [multiple changes]
Note: checking out '0ab8001'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0ab8001... [multiple changes]
Deleted branch temp-test-branch (was 0ab8001).
Fail to build gcc for commit [0ab8001], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[63694b5ed20fd7c3bb05d1e42fc9d6e96770dbfc] s390.c: Include "tree-gimple.h".
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [63694b5]
+---------------------------------------- Current commit hash: [63694b5] ----------------------------------------+
Building GCC for commit [63694b5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 63694b5 s390.c: Include "tree-gimple.h".
HEAD is now at 63694b5 s390.c: Include "tree-gimple.h".
Note: checking out '63694b5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 63694b5... s390.c: Include "tree-gimple.h".
Deleted branch temp-test-branch (was 63694b5).
Fail to build gcc for commit [63694b5], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[282043099be7da9af2aa7d3d4fcf3ff33a3ed788] * update_web_docs (MANUALS): Add gfortran.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2820430]
+---------------------------------------- Current commit hash: [2820430] ----------------------------------------+
Building GCC for commit [2820430]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2820430 * update_web_docs (MANUALS): Add gfortran.
HEAD is now at 2820430 * update_web_docs (MANUALS): Add gfortran.
Note: checking out '2820430'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2820430... * update_web_docs (MANUALS): Add gfortran.
Deleted branch temp-test-branch (was 2820430).
Fail to build gcc for commit [2820430], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd] random.c: Fix several spelling and formatting mistakes in comments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cdaa9fc]
+---------------------------------------- Current commit hash: [cdaa9fc] ----------------------------------------+
Building GCC for commit [cdaa9fc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cdaa9fc random.c: Fix several spelling and formatting mistakes in comments.
HEAD is now at cdaa9fc random.c: Fix several spelling and formatting mistakes in comments.
Note: checking out 'cdaa9fc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cdaa9fc... random.c: Fix several spelling and formatting mistakes in comments.
Deleted branch temp-test-branch (was cdaa9fc).
Fail to build gcc for commit [cdaa9fc], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[0da2c8ac77a61f9149fcbf3da36f7656aff96a4c] revert: [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0da2c8a]
+---------------------------------------- Current commit hash: [0da2c8a] ----------------------------------------+
Building GCC for commit [0da2c8a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0da2c8a revert: [multiple changes]
HEAD is now at 0da2c8a revert: [multiple changes]
Note: checking out '0da2c8a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0da2c8a... revert: [multiple changes]
Deleted branch temp-test-branch (was 0da2c8a).
Fail to build gcc for commit [0da2c8a], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[2bd749490845f2edc7de74dca4b29fd7d7698dff] check.c (gfc_check_second_sub, [...]): New functions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2bd7494]
+---------------------------------------- Current commit hash: [2bd7494] ----------------------------------------+
Building GCC for commit [2bd7494]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2bd7494 check.c (gfc_check_second_sub, [...]): New functions.
HEAD is now at 2bd7494 check.c (gfc_check_second_sub, [...]): New functions.
Note: checking out '2bd7494'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2bd7494... check.c (gfc_check_second_sub, [...]): New functions.
Deleted branch temp-test-branch (was 2bd7494).
Fail to build gcc for commit [2bd7494], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[61a36b9baaae66daf5ba883a86d4c0886256b05f] tree.h (debug_find_tree): Add declaration.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [61a36b9]
+---------------------------------------- Current commit hash: [61a36b9] ----------------------------------------+
Building GCC for commit [61a36b9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 61a36b9 tree.h (debug_find_tree): Add declaration.
HEAD is now at 61a36b9 tree.h (debug_find_tree): Add declaration.
Note: checking out '61a36b9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 61a36b9... tree.h (debug_find_tree): Add declaration.
Deleted branch temp-test-branch (was 61a36b9).
Fail to build gcc for commit [61a36b9], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[9ade247982d622219e3935880cd2500d2d3c42f2] libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9ade247]
+---------------------------------------- Current commit hash: [9ade247] ----------------------------------------+
Building GCC for commit [9ade247]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9ade247 libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
HEAD is now at 9ade247 libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
Note: checking out '9ade247'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9ade247... libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
Deleted branch temp-test-branch (was 9ade247).
Fail to build gcc for commit [9ade247], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[5c3be6fdb01517c31d6a64e675bc9b52d3d7633b] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5c3be6f]
+---------------------------------------- Current commit hash: [5c3be6f] ----------------------------------------+
Building GCC for commit [5c3be6f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5c3be6f Daily bump.
HEAD is now at 5c3be6f Daily bump.
Note: checking out '5c3be6f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5c3be6f... Daily bump.
Deleted branch temp-test-branch (was 5c3be6f).
Fail to build gcc for commit [5c3be6f], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[1027314a211e7b0e2b05b6bd8f179c12f784517e] pa.md: Disable the peephole2 patterns that generate indexed floating-point stores when...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1027314]
+---------------------------------------- Current commit hash: [1027314] ----------------------------------------+
Building GCC for commit [1027314]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1027314 pa.md: Disable the peephole2 patterns that generate indexed floating-point stores when...
HEAD is now at 1027314 pa.md: Disable the peephole2 patterns that generate indexed floating-point stores when...
Note: checking out '1027314'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1027314... pa.md: Disable the peephole2 patterns that generate indexed floating-point stores when...
Deleted branch temp-test-branch (was 1027314).
Fail to build gcc for commit [1027314], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[3a906f0433a126420f5e98a1b9b9b53e60f361ef] be.po, [...]: Update.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a906f0]
+---------------------------------------- Current commit hash: [3a906f0] ----------------------------------------+
Building GCC for commit [3a906f0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a906f0 be.po, [...]: Update.
HEAD is now at 3a906f0 be.po, [...]: Update.
Note: checking out '3a906f0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a906f0... be.po, [...]: Update.
Deleted branch temp-test-branch (was 3a906f0).
Fail to build gcc for commit [3a906f0], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[017f7506b5ca31a00431ec0855f209d60586ce8e] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [017f750]
+---------------------------------------- Current commit hash: [017f750] ----------------------------------------+
Building GCC for commit [017f750]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 017f750 Daily bump.
HEAD is now at 017f750 Daily bump.
Note: checking out '017f750'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 017f750... Daily bump.
Deleted branch temp-test-branch (was 017f750).
Fail to build gcc for commit [017f750], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[2e5a151084e83d504acb5056d57f67cde737335b] * gcc.dg/builtins-config.h: Handle FreeBSD.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2e5a151]
+---------------------------------------- Current commit hash: [2e5a151] ----------------------------------------+
Building GCC for commit [2e5a151]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2e5a151 * gcc.dg/builtins-config.h: Handle FreeBSD.
HEAD is now at 2e5a151 * gcc.dg/builtins-config.h: Handle FreeBSD.
Note: checking out '2e5a151'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2e5a151... * gcc.dg/builtins-config.h: Handle FreeBSD.
Deleted branch temp-test-branch (was 2e5a151).
Fail to build gcc for commit [2e5a151], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[225d221a9d82172d403aa068217dc67ca0a3f249] re PR target/14018 (m68k backend: -malign-loops/-malign-jumps broken)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [225d221]
+---------------------------------------- Current commit hash: [225d221] ----------------------------------------+
Building GCC for commit [225d221]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 225d221 re PR target/14018 (m68k backend: -malign-loops/-malign-jumps broken)
HEAD is now at 225d221 re PR target/14018 (m68k backend: -malign-loops/-malign-jumps broken)
Note: checking out '225d221'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 225d221... re PR target/14018 (m68k backend: -malign-loops/-malign-jumps broken)
Deleted branch temp-test-branch (was 225d221).
Fail to build gcc for commit [225d221], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[f82ddcaedbfcb7d25208987be6a945bf9a422759] rs6000.md (ctrsi_internal3): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f82ddca]
+---------------------------------------- Current commit hash: [f82ddca] ----------------------------------------+
Building GCC for commit [f82ddca]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f82ddca rs6000.md (ctrsi_internal3): Delete.
HEAD is now at f82ddca rs6000.md (ctrsi_internal3): Delete.
Note: checking out 'f82ddca'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f82ddca... rs6000.md (ctrsi_internal3): Delete.
Deleted branch temp-test-branch (was f82ddca).
Fail to build gcc for commit [f82ddca], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[3facc4b61545614e75b4fb852a72bbc80554705b] re PR tree-optimization/14736 ([tree-ssa] code quality regression)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3facc4b]
+---------------------------------------- Current commit hash: [3facc4b] ----------------------------------------+
Building GCC for commit [3facc4b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3facc4b re PR tree-optimization/14736 ([tree-ssa] code quality regression)
HEAD is now at 3facc4b re PR tree-optimization/14736 ([tree-ssa] code quality regression)
Note: checking out '3facc4b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3facc4b... re PR tree-optimization/14736 ([tree-ssa] code quality regression)
Deleted branch temp-test-branch (was 3facc4b).
Fail to build gcc for commit [3facc4b], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[cc52902d97894d218cf6acfd2aa1b904cb4c62e8] tree-ssa-phiopt.c (abs_replacement): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cc52902]
+---------------------------------------- Current commit hash: [cc52902] ----------------------------------------+
Building GCC for commit [cc52902]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cc52902 tree-ssa-phiopt.c (abs_replacement): New function.
HEAD is now at cc52902 tree-ssa-phiopt.c (abs_replacement): New function.
Note: checking out 'cc52902'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cc52902... tree-ssa-phiopt.c (abs_replacement): New function.
Deleted branch temp-test-branch (was cc52902).
Fail to build gcc for commit [cc52902], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[8695f61e407e56fd8fc052ff1afe84afef2b6e7e] k6.md: Rewrite using the DFA model.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8695f61]
+---------------------------------------- Current commit hash: [8695f61] ----------------------------------------+
Building GCC for commit [8695f61]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8695f61 k6.md: Rewrite using the DFA model.
HEAD is now at 8695f61 k6.md: Rewrite using the DFA model.
Note: checking out '8695f61'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8695f61... k6.md: Rewrite using the DFA model.
Deleted branch temp-test-branch (was 8695f61).
Fail to build gcc for commit [8695f61], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[a763177b7ba8e9fc96b5821499f464bc5c30267b] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a763177]
+---------------------------------------- Current commit hash: [a763177] ----------------------------------------+
Building GCC for commit [a763177]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a763177 Daily bump.
HEAD is now at a763177 Daily bump.
Note: checking out 'a763177'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a763177... Daily bump.
Deleted branch temp-test-branch (was a763177).
Fail to build gcc for commit [a763177], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[c0d594f1da6b13e79a81d72f71f55ec8b9fa2b60] darwin.c (machopic_indirect_data_reference): Copy the SYMBOL_REF_DECL from the original RTX for the new non-lazy pointer RTX.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c0d594f]
+---------------------------------------- Current commit hash: [c0d594f] ----------------------------------------+
Building GCC for commit [c0d594f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c0d594f darwin.c (machopic_indirect_data_reference): Copy the SYMBOL_REF_DECL from the original RTX for the new non-lazy pointer RTX.
HEAD is now at c0d594f darwin.c (machopic_indirect_data_reference): Copy the SYMBOL_REF_DECL from the original RTX for the new non-lazy pointer RTX.
Note: checking out 'c0d594f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c0d594f... darwin.c (machopic_indirect_data_reference): Copy the SYMBOL_REF_DECL from the original RTX for the new non-lazy pointer RTX.
Deleted branch temp-test-branch (was c0d594f).
Fail to build gcc for commit [c0d594f], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[609754920ff466cb720aa317f96b1b7eceb30ad4] Makefile.tpl: Whenever a recursive target is defined...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6097549]
+---------------------------------------- Current commit hash: [6097549] ----------------------------------------+
Building GCC for commit [6097549]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6097549 Makefile.tpl: Whenever a recursive target is defined...
HEAD is now at 6097549 Makefile.tpl: Whenever a recursive target is defined...
Note: checking out '6097549'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6097549... Makefile.tpl: Whenever a recursive target is defined...
Deleted branch temp-test-branch (was 6097549).
Fail to build gcc for commit [6097549], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[a19db17df418ef1a3e9b57631d08b4aa222a017a] New testcases
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a19db17]
+---------------------------------------- Current commit hash: [a19db17] ----------------------------------------+
Building GCC for commit [a19db17]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a19db17 New testcases
HEAD is now at a19db17 New testcases
Note: checking out 'a19db17'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a19db17... New testcases
Deleted branch temp-test-branch (was a19db17).
Fail to build gcc for commit [a19db17], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[ab3d88bed12beabdc31b9f8808da9dab0a3dae64] re PR libstdc++/16020 (cannot copy __gnu_debug::bitset)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ab3d88b]
+---------------------------------------- Current commit hash: [ab3d88b] ----------------------------------------+
Building GCC for commit [ab3d88b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ab3d88b re PR libstdc++/16020 (cannot copy __gnu_debug::bitset)
HEAD is now at ab3d88b re PR libstdc++/16020 (cannot copy __gnu_debug::bitset)
Note: checking out 'ab3d88b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ab3d88b... re PR libstdc++/16020 (cannot copy __gnu_debug::bitset)
Deleted branch temp-test-branch (was ab3d88b).
Fail to build gcc for commit [ab3d88b], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[908d0773f08485a63523e21520b948fe91998279] fold-const.c (fold_convert): Treat OFFSET_TYPE like POINTER_TYPE and INTEGER_TYPE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [908d077]
+---------------------------------------- Current commit hash: [908d077] ----------------------------------------+
Building GCC for commit [908d077]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 908d077 fold-const.c (fold_convert): Treat OFFSET_TYPE like POINTER_TYPE and INTEGER_TYPE.
HEAD is now at 908d077 fold-const.c (fold_convert): Treat OFFSET_TYPE like POINTER_TYPE and INTEGER_TYPE.
Note: checking out '908d077'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 908d077... fold-const.c (fold_convert): Treat OFFSET_TYPE like POINTER_TYPE and INTEGER_TYPE.
Deleted branch temp-test-branch (was 908d077).
Fail to build gcc for commit [908d077], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[26c691a88b8a403e7a92ce049368cc7efe3567ce] re PR libstdc++/12854 (libstdc++ vs. -Weffc++)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [26c691a]
+---------------------------------------- Current commit hash: [26c691a] ----------------------------------------+
Building GCC for commit [26c691a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 26c691a re PR libstdc++/12854 (libstdc++ vs. -Weffc++)
HEAD is now at 26c691a re PR libstdc++/12854 (libstdc++ vs. -Weffc++)
Note: checking out '26c691a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 26c691a... re PR libstdc++/12854 (libstdc++ vs. -Weffc++)
Deleted branch temp-test-branch (was 26c691a).
Fail to build gcc for commit [26c691a], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[a921159ad4fd1de20154b9d71e015471505b5155] re PR java/15769 (ICE: infinite recursion through gimplify_expr)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a921159]
+---------------------------------------- Current commit hash: [a921159] ----------------------------------------+
Building GCC for commit [a921159]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a921159 re PR java/15769 (ICE: infinite recursion through gimplify_expr)
HEAD is now at a921159 re PR java/15769 (ICE: infinite recursion through gimplify_expr)
Note: checking out 'a921159'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a921159... re PR java/15769 (ICE: infinite recursion through gimplify_expr)
Deleted branch temp-test-branch (was a921159).
Fail to build gcc for commit [a921159], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[ca072a31b75eacb8292cfa91fb779020ee5f6118] tree-ssa-pre.c: Update comments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ca072a3]
+---------------------------------------- Current commit hash: [ca072a3] ----------------------------------------+
Building GCC for commit [ca072a3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ca072a3 tree-ssa-pre.c: Update comments.
HEAD is now at ca072a3 tree-ssa-pre.c: Update comments.
Note: checking out 'ca072a3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ca072a3... tree-ssa-pre.c: Update comments.
Deleted branch temp-test-branch (was ca072a3).
Fail to build gcc for commit [ca072a3], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[5e2f3f396b47642ddd234d8d443648289b8a8772] Makefile.am (LIBINTL): Declare
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5e2f3f3]
+---------------------------------------- Current commit hash: [5e2f3f3] ----------------------------------------+
Building GCC for commit [5e2f3f3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5e2f3f3 Makefile.am (LIBINTL): Declare
HEAD is now at 5e2f3f3 Makefile.am (LIBINTL): Declare
Note: checking out '5e2f3f3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5e2f3f3... Makefile.am (LIBINTL): Declare
Deleted branch temp-test-branch (was 5e2f3f3).
Fail to build gcc for commit [5e2f3f3], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[894ca2c9ff6321673af96c42b1028db992b98943] re PR c++/16012 (trouble with scope in for statements in templates)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [894ca2c]
+---------------------------------------- Current commit hash: [894ca2c] ----------------------------------------+
Building GCC for commit [894ca2c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 894ca2c re PR c++/16012 (trouble with scope in for statements in templates)
HEAD is now at 894ca2c re PR c++/16012 (trouble with scope in for statements in templates)
Note: checking out '894ca2c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 894ca2c... re PR c++/16012 (trouble with scope in for statements in templates)
Deleted branch temp-test-branch (was 894ca2c).
Fail to build gcc for commit [894ca2c], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[0b395e1959dcdea573bd9eb19866a522005b0494] re PR middle-end/15666 ([unit-at-a-time] Gcc abort on valid code)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b395e1]
+---------------------------------------- Current commit hash: [0b395e1] ----------------------------------------+
Building GCC for commit [0b395e1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b395e1 re PR middle-end/15666 ([unit-at-a-time] Gcc abort on valid code)
HEAD is now at 0b395e1 re PR middle-end/15666 ([unit-at-a-time] Gcc abort on valid code)
Note: checking out '0b395e1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b395e1... re PR middle-end/15666 ([unit-at-a-time] Gcc abort on valid code)
Deleted branch temp-test-branch (was 0b395e1).
Fail to build gcc for commit [0b395e1], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[a2f29587957bf9f1853b9eeba2b05492c9b7150a] re PR fortran/13912 (Does not accept consecutive arithmetic operators (*-))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a2f2958]
+---------------------------------------- Current commit hash: [a2f2958] ----------------------------------------+
Building GCC for commit [a2f2958]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a2f2958 re PR fortran/13912 (Does not accept consecutive arithmetic operators (*-))
HEAD is now at a2f2958 re PR fortran/13912 (Does not accept consecutive arithmetic operators (*-))
Note: checking out 'a2f2958'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a2f2958... re PR fortran/13912 (Does not accept consecutive arithmetic operators (*-))
Deleted branch temp-test-branch (was a2f2958).
Fail to build gcc for commit [a2f2958], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[15d0650c9ea92711fc51116a57d6516fccf88815] Correct previous ChangeLog entry.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [15d0650]
+---------------------------------------- Current commit hash: [15d0650] ----------------------------------------+
Building GCC for commit [15d0650]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 15d0650 Correct previous ChangeLog entry.
HEAD is now at 15d0650 Correct previous ChangeLog entry.
Note: checking out '15d0650'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 15d0650... Correct previous ChangeLog entry.
Deleted branch temp-test-branch (was 15d0650).
Fail to build gcc for commit [15d0650], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[dce1438a65f25cceffec22d53d41ea35ee422673] combine.c (gen_binary): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dce1438]
+---------------------------------------- Current commit hash: [dce1438] ----------------------------------------+
Building GCC for commit [dce1438]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dce1438 combine.c (gen_binary): Remove.
HEAD is now at dce1438 combine.c (gen_binary): Remove.
Note: checking out 'dce1438'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dce1438... combine.c (gen_binary): Remove.
Deleted branch temp-test-branch (was dce1438).
Fail to build gcc for commit [dce1438], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[5f2dcbe1ffa17b74c21b0fbc901793e2bae55e22] tree-pretty-print.c (dump_function_declaration): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5f2dcbe]
+---------------------------------------- Current commit hash: [5f2dcbe] ----------------------------------------+
Building GCC for commit [5f2dcbe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5f2dcbe tree-pretty-print.c (dump_function_declaration): New.
HEAD is now at 5f2dcbe tree-pretty-print.c (dump_function_declaration): New.
Note: checking out '5f2dcbe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5f2dcbe... tree-pretty-print.c (dump_function_declaration): New.
Deleted branch temp-test-branch (was 5f2dcbe).
Fail to build gcc for commit [5f2dcbe], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[6fb25ec080f0151af5d61ece4f4f2ca3af2d051c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6fb25ec]
+---------------------------------------- Current commit hash: [6fb25ec] ----------------------------------------+
Building GCC for commit [6fb25ec]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6fb25ec Daily bump.
HEAD is now at 6fb25ec Daily bump.
Note: checking out '6fb25ec'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6fb25ec... Daily bump.
Deleted branch temp-test-branch (was 6fb25ec).
Fail to build gcc for commit [6fb25ec], skip this commit. Return 125.
Bisecting: 624 revisions left to test after this (roughly 9 steps)
[8dcd4256ba01b602dc1200633064a32082cd3208] * gfortran.fortran-torture/execute/specfics.f90: Use correct typing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8dcd425]
+---------------------------------------- Current commit hash: [8dcd425] ----------------------------------------+
GCC for commit [8dcd425] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-8dcd425/bin/gcc with -O1:
0
Output of /tmp/gcc-8dcd425/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 8dcd425... * gfortran.fortran-torture/execute/specfics.f90: Use correct typing.
[32m[     info][0m Current commit [8dcd425] is bad. Return value: 1

Bisecting: 606 revisions left to test after this (roughly 9 steps)
[0eef99c1781d3230490d6a6f3c67dc662304f9d5] linux.h (TARGET_C99_FUNCTIONS): Set.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0eef99c]
+---------------------------------------- Current commit hash: [0eef99c] ----------------------------------------+
Building GCC for commit [0eef99c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0eef99c linux.h (TARGET_C99_FUNCTIONS): Set.
HEAD is now at 0eef99c linux.h (TARGET_C99_FUNCTIONS): Set.
Note: checking out '0eef99c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0eef99c... linux.h (TARGET_C99_FUNCTIONS): Set.
Deleted branch temp-test-branch (was 0eef99c).
Fail to build gcc for commit [0eef99c], skip this commit. Return 125.
Bisecting: 606 revisions left to test after this (roughly 9 steps)
[da727eab528a4d34b1c94a100c9efa70119cd805] linking.m (_objcInit): New empty function for Darwin only.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [da727ea]
+---------------------------------------- Current commit hash: [da727ea] ----------------------------------------+
Building GCC for commit [da727ea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: da727ea linking.m (_objcInit): New empty function for Darwin only.
HEAD is now at da727ea linking.m (_objcInit): New empty function for Darwin only.
Note: checking out 'da727ea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at da727ea... linking.m (_objcInit): New empty function for Darwin only.
Deleted branch temp-test-branch (was da727ea).
Fail to build gcc for commit [da727ea], skip this commit. Return 125.
Bisecting: 606 revisions left to test after this (roughly 9 steps)
[0c196bf9d84c1d3b638bb4cd5f9e088b861afa08] gcse.c (eliminate_partially_redundant_loads): Instead of returning early, goto a cleanup label.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0c196bf]
+---------------------------------------- Current commit hash: [0c196bf] ----------------------------------------+
GCC for commit [0c196bf] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-0c196bf/bin/gcc with -O1:
1
Output of /tmp/gcc-0c196bf/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 0c196bf... gcse.c (eliminate_partially_redundant_loads): Instead of returning early, goto a cleanup label.
[32m[     info][0m Current commit [0c196bf] is good. Return value: 0

Bisecting: 584 revisions left to test after this (roughly 9 steps)
[1f7a8dccd4056be197e8f79fe7bbf2b8bd89c53b] re PR c++/15069 (a bit test on a variable of enum type is miscompiled)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1f7a8dc]
+---------------------------------------- Current commit hash: [1f7a8dc] ----------------------------------------+
Building GCC for commit [1f7a8dc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1f7a8dc re PR c++/15069 (a bit test on a variable of enum type is miscompiled)
HEAD is now at 1f7a8dc re PR c++/15069 (a bit test on a variable of enum type is miscompiled)
Note: checking out '1f7a8dc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1f7a8dc... re PR c++/15069 (a bit test on a variable of enum type is miscompiled)
Deleted branch temp-test-branch (was 1f7a8dc).
Fail to build gcc for commit [1f7a8dc], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[629ceb937ac50b7ef41f48fdfba3e1f5a55c6068] * options.c (gfc_handle_module_path_options): Fix buffer overrun.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [629ceb9]
+---------------------------------------- Current commit hash: [629ceb9] ----------------------------------------+
Building GCC for commit [629ceb9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 629ceb9 * options.c (gfc_handle_module_path_options): Fix buffer overrun.
HEAD is now at 629ceb9 * options.c (gfc_handle_module_path_options): Fix buffer overrun.
Note: checking out '629ceb9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 629ceb9... * options.c (gfc_handle_module_path_options): Fix buffer overrun.
Deleted branch temp-test-branch (was 629ceb9).
Fail to build gcc for commit [629ceb9], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[ab71fa3f9a3d4a3744638e52faab75df63ff9b60] Add missing ChangeLog entries
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ab71fa3]
+---------------------------------------- Current commit hash: [ab71fa3] ----------------------------------------+
Building GCC for commit [ab71fa3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ab71fa3 Add missing ChangeLog entries
HEAD is now at ab71fa3 Add missing ChangeLog entries
Note: checking out 'ab71fa3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ab71fa3... Add missing ChangeLog entries
Deleted branch temp-test-branch (was ab71fa3).
Fail to build gcc for commit [ab71fa3], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[89b4f108d444fbb752592e7814fa0eef161056a1] pr15551.C: New testcase.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [89b4f10]
+---------------------------------------- Current commit hash: [89b4f10] ----------------------------------------+
Building GCC for commit [89b4f10]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 89b4f10 pr15551.C: New testcase.
HEAD is now at 89b4f10 pr15551.C: New testcase.
Note: checking out '89b4f10'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 89b4f10... pr15551.C: New testcase.
Deleted branch temp-test-branch (was 89b4f10).
Fail to build gcc for commit [89b4f10], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[d1251b1af6003e7dd43cc586b6fd767d2f5208eb] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1251b1]
+---------------------------------------- Current commit hash: [d1251b1] ----------------------------------------+
Building GCC for commit [d1251b1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1251b1 Daily bump.
HEAD is now at d1251b1 Daily bump.
Note: checking out 'd1251b1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1251b1... Daily bump.
Deleted branch temp-test-branch (was d1251b1).
Fail to build gcc for commit [d1251b1], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[d7981fd95fde4396a5d774be8db49708ef68b86d] * class.c (build_base_path): Tidy a bit.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d7981fd]
+---------------------------------------- Current commit hash: [d7981fd] ----------------------------------------+
Building GCC for commit [d7981fd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d7981fd * class.c (build_base_path): Tidy a bit.
HEAD is now at d7981fd * class.c (build_base_path): Tidy a bit.
Note: checking out 'd7981fd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d7981fd... * class.c (build_base_path): Tidy a bit.
Deleted branch temp-test-branch (was d7981fd).
Fail to build gcc for commit [d7981fd], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[109e00403a6044810028032054543fc8dcfeed3a] re PR c++/15227 (Trouble with invalid function definition)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [109e004]
+---------------------------------------- Current commit hash: [109e004] ----------------------------------------+
Building GCC for commit [109e004]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 109e004 re PR c++/15227 (Trouble with invalid function definition)
HEAD is now at 109e004 re PR c++/15227 (Trouble with invalid function definition)
Note: checking out '109e004'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 109e004... re PR c++/15227 (Trouble with invalid function definition)
Deleted branch temp-test-branch (was 109e004).
Fail to build gcc for commit [109e004], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[0fa13661a9b9ba37df8bcdec4fa30ea91d19c878] Makefile.am (awt_java_source_files): Remove javax.rmi and gnu.javax.rmi code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0fa1366]
+---------------------------------------- Current commit hash: [0fa1366] ----------------------------------------+
Building GCC for commit [0fa1366]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0fa1366 Makefile.am (awt_java_source_files): Remove javax.rmi and gnu.javax.rmi code.
HEAD is now at 0fa1366 Makefile.am (awt_java_source_files): Remove javax.rmi and gnu.javax.rmi code.
Note: checking out '0fa1366'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0fa1366... Makefile.am (awt_java_source_files): Remove javax.rmi and gnu.javax.rmi code.
Deleted branch temp-test-branch (was 0fa1366).
Fail to build gcc for commit [0fa1366], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[b53dcf3e5c67b345b6dea948cd3a9f4b31ec39a8] * include/std/std_complex.h (log): Tidy.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b53dcf3]
+---------------------------------------- Current commit hash: [b53dcf3] ----------------------------------------+
Building GCC for commit [b53dcf3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b53dcf3 * include/std/std_complex.h (log): Tidy.
HEAD is now at b53dcf3 * include/std/std_complex.h (log): Tidy.
Note: checking out 'b53dcf3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b53dcf3... * include/std/std_complex.h (log): Tidy.
Deleted branch temp-test-branch (was b53dcf3).
Fail to build gcc for commit [b53dcf3], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[3adf6cadbbfe23b96f8e53780ae5f1bc28f01077] istream.tcc (operator>>(basic_istream<>&, basic_string<>&)): Use a temporary buffer, thus avoiding reallocation for common case.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3adf6ca]
+---------------------------------------- Current commit hash: [3adf6ca] ----------------------------------------+
Building GCC for commit [3adf6ca]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3adf6ca istream.tcc (operator>>(basic_istream<>&, basic_string<>&)): Use a temporary buffer, thus avoiding reallocation for common case.
HEAD is now at 3adf6ca istream.tcc (operator>>(basic_istream<>&, basic_string<>&)): Use a temporary buffer, thus avoiding reallocation for common case.
Note: checking out '3adf6ca'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3adf6ca... istream.tcc (operator>>(basic_istream<>&, basic_string<>&)): Use a temporary buffer, thus avoiding reallocation for common case.
Deleted branch temp-test-branch (was 3adf6ca).
Fail to build gcc for commit [3adf6ca], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[7c87eac60d08f0818800e48d999a005ef6a34ece] trans.c (gfc_finish_block, [...]): Build statement lists instead of compound expr chains.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c87eac]
+---------------------------------------- Current commit hash: [7c87eac] ----------------------------------------+
Building GCC for commit [7c87eac]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c87eac trans.c (gfc_finish_block, [...]): Build statement lists instead of compound expr chains.
HEAD is now at 7c87eac trans.c (gfc_finish_block, [...]): Build statement lists instead of compound expr chains.
Note: checking out '7c87eac'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c87eac... trans.c (gfc_finish_block, [...]): Build statement lists instead of compound expr chains.
Deleted branch temp-test-branch (was 7c87eac).
Fail to build gcc for commit [7c87eac], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[242229bbdc6beacddb4ed263c759d3ca52dae927] CFG transparent RTL expansion:
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [242229b]
+---------------------------------------- Current commit hash: [242229b] ----------------------------------------+
Building GCC for commit [242229b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 242229b CFG transparent RTL expansion:
HEAD is now at 242229b CFG transparent RTL expansion:
Note: checking out '242229b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 242229b... CFG transparent RTL expansion:
Deleted branch temp-test-branch (was 242229b).
Fail to build gcc for commit [242229b], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[1b6be71988fb76de4935ceb76ffb8812b8e56650] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1b6be71]
+---------------------------------------- Current commit hash: [1b6be71] ----------------------------------------+
Building GCC for commit [1b6be71]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1b6be71 Daily bump.
HEAD is now at 1b6be71 Daily bump.
Note: checking out '1b6be71'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1b6be71... Daily bump.
Deleted branch temp-test-branch (was 1b6be71).
Fail to build gcc for commit [1b6be71], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[bd760894e689fc55e044860f3252602d86a74292] prims.cc (_Jv_CreateJavaVM): Install SEGV and FPE handlers...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bd76089]
+---------------------------------------- Current commit hash: [bd76089] ----------------------------------------+
Building GCC for commit [bd76089]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bd76089 prims.cc (_Jv_CreateJavaVM): Install SEGV and FPE handlers...
HEAD is now at bd76089 prims.cc (_Jv_CreateJavaVM): Install SEGV and FPE handlers...
Note: checking out 'bd76089'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bd76089... prims.cc (_Jv_CreateJavaVM): Install SEGV and FPE handlers...
Deleted branch temp-test-branch (was bd76089).
Fail to build gcc for commit [bd76089], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[57ffad2ba318428043732884441476b83d010c2b] filter.sed: Rename _GLIBCXX_STD to std.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [57ffad2]
+---------------------------------------- Current commit hash: [57ffad2] ----------------------------------------+
Building GCC for commit [57ffad2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 57ffad2 filter.sed: Rename _GLIBCXX_STD to std.
HEAD is now at 57ffad2 filter.sed: Rename _GLIBCXX_STD to std.
Note: checking out '57ffad2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 57ffad2... filter.sed: Rename _GLIBCXX_STD to std.
Deleted branch temp-test-branch (was 57ffad2).
Fail to build gcc for commit [57ffad2], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[2692eb7d0ea1757cbf2508f001be9ee9f2f87ed3] re PR c++/16015 (xfailed g++.dg/ext/stmtexpr1.C)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2692eb7]
+---------------------------------------- Current commit hash: [2692eb7] ----------------------------------------+
Building GCC for commit [2692eb7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2692eb7 re PR c++/16015 (xfailed g++.dg/ext/stmtexpr1.C)
HEAD is now at 2692eb7 re PR c++/16015 (xfailed g++.dg/ext/stmtexpr1.C)
Note: checking out '2692eb7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2692eb7... re PR c++/16015 (xfailed g++.dg/ext/stmtexpr1.C)
Deleted branch temp-test-branch (was 2692eb7).
Fail to build gcc for commit [2692eb7], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[5f1a5ede6c70418894b4bfe396299583b711fe84] pool_allocator.h: Convert to a global free-list, as per the original SGI/HP design...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5f1a5ed]
+---------------------------------------- Current commit hash: [5f1a5ed] ----------------------------------------+
Building GCC for commit [5f1a5ed]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5f1a5ed pool_allocator.h: Convert to a global free-list, as per the original SGI/HP design...
HEAD is now at 5f1a5ed pool_allocator.h: Convert to a global free-list, as per the original SGI/HP design...
Note: checking out '5f1a5ed'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5f1a5ed... pool_allocator.h: Convert to a global free-list, as per the original SGI/HP design...
Deleted branch temp-test-branch (was 5f1a5ed).
Fail to build gcc for commit [5f1a5ed], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[5d880bd24bc667dc41a1f31d5713c8dbd90d86c2] s390-modes.def (CCL3mode): New machine mode.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5d880bd]
+---------------------------------------- Current commit hash: [5d880bd] ----------------------------------------+
Building GCC for commit [5d880bd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5d880bd s390-modes.def (CCL3mode): New machine mode.
HEAD is now at 5d880bd s390-modes.def (CCL3mode): New machine mode.
Note: checking out '5d880bd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5d880bd... s390-modes.def (CCL3mode): New machine mode.
Deleted branch temp-test-branch (was 5d880bd).
Fail to build gcc for commit [5d880bd], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[7187798577a9a9035d1d492d1686217ff5ca30d7] gimple-low.c (struct lower_data): Replace the_return_label and one_return_stmt with return_statements.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7187798]
+---------------------------------------- Current commit hash: [7187798] ----------------------------------------+
Building GCC for commit [7187798]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7187798 gimple-low.c (struct lower_data): Replace the_return_label and one_return_stmt with return_statements.
HEAD is now at 7187798 gimple-low.c (struct lower_data): Replace the_return_label and one_return_stmt with return_statements.
Note: checking out '7187798'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7187798... gimple-low.c (struct lower_data): Replace the_return_label and one_return_stmt with return_statements.
Deleted branch temp-test-branch (was 7187798).
Fail to build gcc for commit [7187798], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[e751adc3b1b146663267485a2dcf1ebe239a5c3d] rope (rope(_CharT, const allocator_type&)): Fix to use _Data_allocate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e751adc]
+---------------------------------------- Current commit hash: [e751adc] ----------------------------------------+
Building GCC for commit [e751adc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e751adc rope (rope(_CharT, const allocator_type&)): Fix to use _Data_allocate.
HEAD is now at e751adc rope (rope(_CharT, const allocator_type&)): Fix to use _Data_allocate.
Note: checking out 'e751adc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e751adc... rope (rope(_CharT, const allocator_type&)): Fix to use _Data_allocate.
Deleted branch temp-test-branch (was e751adc).
Fail to build gcc for commit [e751adc], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[590a6d54128afad3a5fbc8eeb8d37c2bfe2c9c58] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [590a6d5]
+---------------------------------------- Current commit hash: [590a6d5] ----------------------------------------+
Building GCC for commit [590a6d5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 590a6d5 Daily bump.
HEAD is now at 590a6d5 Daily bump.
Note: checking out '590a6d5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 590a6d5... Daily bump.
Deleted branch temp-test-branch (was 590a6d5).
Fail to build gcc for commit [590a6d5], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[aaab7bb6d7660df0773a444bd6a4a20f586f1a98] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aaab7bb]
+---------------------------------------- Current commit hash: [aaab7bb] ----------------------------------------+
Building GCC for commit [aaab7bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aaab7bb Daily bump.
HEAD is now at aaab7bb Daily bump.
Note: checking out 'aaab7bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aaab7bb... Daily bump.
Deleted branch temp-test-branch (was aaab7bb).
Fail to build gcc for commit [aaab7bb], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[2af5538b14e4149ad9e09c3ef1a0ee4735cafb80] config.in: Regenerate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2af5538]
+---------------------------------------- Current commit hash: [2af5538] ----------------------------------------+
Building GCC for commit [2af5538]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2af5538 config.in: Regenerate.
HEAD is now at 2af5538 config.in: Regenerate.
Note: checking out '2af5538'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2af5538... config.in: Regenerate.
Deleted branch temp-test-branch (was 2af5538).
Fail to build gcc for commit [2af5538], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[5a4f18181b64187fdfa0f0c21d6a2ca476a2469e] gcc_update (libmudflap/configure): Depend on libmudflap/configure.ac instead of libmudflap/configure.in
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a4f181]
+---------------------------------------- Current commit hash: [5a4f181] ----------------------------------------+
Building GCC for commit [5a4f181]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a4f181 gcc_update (libmudflap/configure): Depend on libmudflap/configure.ac instead of libmudflap/configure.in
HEAD is now at 5a4f181 gcc_update (libmudflap/configure): Depend on libmudflap/configure.ac instead of libmudflap/configure.in
Note: checking out '5a4f181'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a4f181... gcc_update (libmudflap/configure): Depend on libmudflap/configure.ac instead of libmudflap/configure.in
Deleted branch temp-test-branch (was 5a4f181).
Fail to build gcc for commit [5a4f181], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[f5a76aea0ddbb87fe8b4f64a283951d7e687b84c] gimple-low.c (struct lower_data): Add the_return_label and one_return_stmt.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f5a76ae]
+---------------------------------------- Current commit hash: [f5a76ae] ----------------------------------------+
Building GCC for commit [f5a76ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f5a76ae gimple-low.c (struct lower_data): Add the_return_label and one_return_stmt.
HEAD is now at f5a76ae gimple-low.c (struct lower_data): Add the_return_label and one_return_stmt.
Note: checking out 'f5a76ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f5a76ae... gimple-low.c (struct lower_data): Add the_return_label and one_return_stmt.
Deleted branch temp-test-branch (was f5a76ae).
Fail to build gcc for commit [f5a76ae], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[d1a7edafe6a978e8f380a74f1f6d386d871bf417] re PR rtl-optimization/15649 (ICE with __builtin_isgreater and -ffast-math)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1a7eda]
+---------------------------------------- Current commit hash: [d1a7eda] ----------------------------------------+
Building GCC for commit [d1a7eda]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1a7eda re PR rtl-optimization/15649 (ICE with __builtin_isgreater and -ffast-math)
HEAD is now at d1a7eda re PR rtl-optimization/15649 (ICE with __builtin_isgreater and -ffast-math)
Note: checking out 'd1a7eda'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1a7eda... re PR rtl-optimization/15649 (ICE with __builtin_isgreater and -ffast-math)
Deleted branch temp-test-branch (was d1a7eda).
Fail to build gcc for commit [d1a7eda], skip this commit. Return 125.
Bisecting: 584 revisions left to test after this (roughly 9 steps)
[5eaad4813d632efa8213ad4f262a44f824fb0f6a] Replace several arrays with a struct of arrays.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5eaad48]
+---------------------------------------- Current commit hash: [5eaad48] ----------------------------------------+
GCC for commit [5eaad48] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-5eaad48/bin/gcc with -O1:
1
Output of /tmp/gcc-5eaad48/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 5eaad48... Replace several arrays with a struct of arrays.
[32m[     info][0m Current commit [5eaad48] is good. Return value: 0

Bisecting: 573 revisions left to test after this (roughly 9 steps)
[85bbb21f8f810152bf51558180f7c6520aca6571] re PR target/15783 (ICE with union assignment in 64-bit mode)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [85bbb21]
+---------------------------------------- Current commit hash: [85bbb21] ----------------------------------------+
Building GCC for commit [85bbb21]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 85bbb21 re PR target/15783 (ICE with union assignment in 64-bit mode)
HEAD is now at 85bbb21 re PR target/15783 (ICE with union assignment in 64-bit mode)
Note: checking out '85bbb21'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 85bbb21... re PR target/15783 (ICE with union assignment in 64-bit mode)
Deleted branch temp-test-branch (was 85bbb21).
Fail to build gcc for commit [85bbb21], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1e2e9f544cc5a52838b868514b42f8c1016efac0] re PR c++/15507 (hang laying out union)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1e2e9f5]
+---------------------------------------- Current commit hash: [1e2e9f5] ----------------------------------------+
Building GCC for commit [1e2e9f5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1e2e9f5 re PR c++/15507 (hang laying out union)
HEAD is now at 1e2e9f5 re PR c++/15507 (hang laying out union)
Note: checking out '1e2e9f5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1e2e9f5... re PR c++/15507 (hang laying out union)
Deleted branch temp-test-branch (was 1e2e9f5).
Fail to build gcc for commit [1e2e9f5], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[f4d8a9ae4ecd3c8b5fdbfa9cef9ff5dc94f2ce02] gcc.c (MFLIB_SPEC): Remove library references...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f4d8a9a]
+---------------------------------------- Current commit hash: [f4d8a9a] ----------------------------------------+
Building GCC for commit [f4d8a9a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f4d8a9a gcc.c (MFLIB_SPEC): Remove library references...
HEAD is now at f4d8a9a gcc.c (MFLIB_SPEC): Remove library references...
Note: checking out 'f4d8a9a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f4d8a9a... gcc.c (MFLIB_SPEC): Remove library references...
Deleted branch temp-test-branch (was f4d8a9a).
Fail to build gcc for commit [f4d8a9a], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[9ce1594a3e521c3b0f6bd8b8eba1cc3a14e5ced7] re PR c++/15025 (accepts redeclaration of template as non-template)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9ce1594]
+---------------------------------------- Current commit hash: [9ce1594] ----------------------------------------+
Building GCC for commit [9ce1594]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9ce1594 re PR c++/15025 (accepts redeclaration of template as non-template)
HEAD is now at 9ce1594 re PR c++/15025 (accepts redeclaration of template as non-template)
Note: checking out '9ce1594'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9ce1594... re PR c++/15025 (accepts redeclaration of template as non-template)
Deleted branch temp-test-branch (was 9ce1594).
Fail to build gcc for commit [9ce1594], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[655948a348f819803aeda65b0ae445ba86712a64] re PR fortran/13249 (Error when using COMMON)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [655948a]
+---------------------------------------- Current commit hash: [655948a] ----------------------------------------+
Building GCC for commit [655948a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 655948a re PR fortran/13249 (Error when using COMMON)
HEAD is now at 655948a re PR fortran/13249 (Error when using COMMON)
Note: checking out '655948a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 655948a... re PR fortran/13249 (Error when using COMMON)
Deleted branch temp-test-branch (was 655948a).
Fail to build gcc for commit [655948a], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[401844effd2c08b85d0cc583b3b49663150d4b63] libtool-version: New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [401844e]
+---------------------------------------- Current commit hash: [401844e] ----------------------------------------+
Building GCC for commit [401844e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 401844e libtool-version: New.
HEAD is now at 401844e libtool-version: New.
Note: checking out '401844e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 401844e... libtool-version: New.
Deleted branch temp-test-branch (was 401844e).
Fail to build gcc for commit [401844e], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[74ee16427180c49e1e2dfa01991770d2e3e7ab7e] * configure.ac:  New --enable-mapped-location sets USE_MAPPED_LOCATION.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [74ee164]
+---------------------------------------- Current commit hash: [74ee164] ----------------------------------------+
Building GCC for commit [74ee164]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 74ee164 * configure.ac:  New --enable-mapped-location sets USE_MAPPED_LOCATION.
HEAD is now at 74ee164 * configure.ac:  New --enable-mapped-location sets USE_MAPPED_LOCATION.
Note: checking out '74ee164'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 74ee164... * configure.ac:  New --enable-mapped-location sets USE_MAPPED_LOCATION.
Deleted branch temp-test-branch (was 74ee164).
Fail to build gcc for commit [74ee164], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15] tree-alias-ander.h: Add standard top-of-file comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d96f6b5]
+---------------------------------------- Current commit hash: [d96f6b5] ----------------------------------------+
Building GCC for commit [d96f6b5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d96f6b5 tree-alias-ander.h: Add standard top-of-file comment.
HEAD is now at d96f6b5 tree-alias-ander.h: Add standard top-of-file comment.
Note: checking out 'd96f6b5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d96f6b5... tree-alias-ander.h: Add standard top-of-file comment.
Deleted branch temp-test-branch (was d96f6b5).
Fail to build gcc for commit [d96f6b5], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[e4638a72d8b900cc9557bdeaf719a3e3987cd4c6] hooks.c (hook_int_void_1): New generic hook.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e4638a7]
+---------------------------------------- Current commit hash: [e4638a7] ----------------------------------------+
Building GCC for commit [e4638a7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e4638a7 hooks.c (hook_int_void_1): New generic hook.
HEAD is now at e4638a7 hooks.c (hook_int_void_1): New generic hook.
Note: checking out 'e4638a7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e4638a7... hooks.c (hook_int_void_1): New generic hook.
Deleted branch temp-test-branch (was e4638a7).
Fail to build gcc for commit [e4638a7], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[4eeaf81e5b0b9345c90cedecc0abf0f0d370ebb9] io.c (format_asterisk): Silence compiler warnings by correcting the number of elements of a "locus"...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4eeaf81]
+---------------------------------------- Current commit hash: [4eeaf81] ----------------------------------------+
Building GCC for commit [4eeaf81]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4eeaf81 io.c (format_asterisk): Silence compiler warnings by correcting the number of elements of a "locus"...
HEAD is now at 4eeaf81 io.c (format_asterisk): Silence compiler warnings by correcting the number of elements of a "locus"...
Note: checking out '4eeaf81'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4eeaf81... io.c (format_asterisk): Silence compiler warnings by correcting the number of elements of a "locus"...
Deleted branch temp-test-branch (was 4eeaf81).
Fail to build gcc for commit [4eeaf81], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[de101ad2f75511c715a846770e3cd446e49f882c] re PR target/15598 (Gcc 3.4 ICE on valid code)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de101ad]
+---------------------------------------- Current commit hash: [de101ad] ----------------------------------------+
Building GCC for commit [de101ad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de101ad re PR target/15598 (Gcc 3.4 ICE on valid code)
HEAD is now at de101ad re PR target/15598 (Gcc 3.4 ICE on valid code)
Note: checking out 'de101ad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de101ad... re PR target/15598 (Gcc 3.4 ICE on valid code)
Deleted branch temp-test-branch (was de101ad).
Fail to build gcc for commit [de101ad], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[431b736152fcb2f15eaf8e6f2b3010b2aafd5188] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [431b736]
+---------------------------------------- Current commit hash: [431b736] ----------------------------------------+
Building GCC for commit [431b736]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 431b736 Daily bump.
HEAD is now at 431b736 Daily bump.
Note: checking out '431b736'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 431b736... Daily bump.
Deleted branch temp-test-branch (was 431b736).
Fail to build gcc for commit [431b736], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[2435e0362dff9653f596180879db2c26a73c2786] altivec-1.C: XFAIL powerpc-ibm-aix*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2435e03]
+---------------------------------------- Current commit hash: [2435e03] ----------------------------------------+
Building GCC for commit [2435e03]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2435e03 altivec-1.C: XFAIL powerpc-ibm-aix*.
HEAD is now at 2435e03 altivec-1.C: XFAIL powerpc-ibm-aix*.
Note: checking out '2435e03'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2435e03... altivec-1.C: XFAIL powerpc-ibm-aix*.
Deleted branch temp-test-branch (was 2435e03).
Fail to build gcc for commit [2435e03], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[0dce8934d708eecd282dfd14480f3557cc127a95] install.texi: Yet another update for autoconf and automake versions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0dce893]
+---------------------------------------- Current commit hash: [0dce893] ----------------------------------------+
Building GCC for commit [0dce893]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0dce893 install.texi: Yet another update for autoconf and automake versions.
HEAD is now at 0dce893 install.texi: Yet another update for autoconf and automake versions.
Note: checking out '0dce893'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0dce893... install.texi: Yet another update for autoconf and automake versions.
Deleted branch temp-test-branch (was 0dce893).
Fail to build gcc for commit [0dce893], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[61995575da257d7062c0d72dd1b9233d0867e7f1] update_web_docs: Also remove old .gz files from subdirectories on the 15th of the month.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6199557]
+---------------------------------------- Current commit hash: [6199557] ----------------------------------------+
Building GCC for commit [6199557]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6199557 update_web_docs: Also remove old .gz files from subdirectories on the 15th of the month.
HEAD is now at 6199557 update_web_docs: Also remove old .gz files from subdirectories on the 15th of the month.
Note: checking out '6199557'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6199557... update_web_docs: Also remove old .gz files from subdirectories on the 15th of the month.
Deleted branch temp-test-branch (was 6199557).
Fail to build gcc for commit [6199557], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[5182fafe486b98e95bd51d2d665a2a18f397fbe4] * stor-layout.c (place_field): Revert erroneous commit.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5182faf]
+---------------------------------------- Current commit hash: [5182faf] ----------------------------------------+
Building GCC for commit [5182faf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5182faf * stor-layout.c (place_field): Revert erroneous commit.
HEAD is now at 5182faf * stor-layout.c (place_field): Revert erroneous commit.
Note: checking out '5182faf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5182faf... * stor-layout.c (place_field): Revert erroneous commit.
Deleted branch temp-test-branch (was 5182faf).
Fail to build gcc for commit [5182faf], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[2b64895754cd707df368fd198c4275fa607e853b] bb-reoder.c (connect_traces): Free cold_traces at the end.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2b64895]
+---------------------------------------- Current commit hash: [2b64895] ----------------------------------------+
Building GCC for commit [2b64895]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2b64895 bb-reoder.c (connect_traces): Free cold_traces at the end.
HEAD is now at 2b64895 bb-reoder.c (connect_traces): Free cold_traces at the end.
Note: checking out '2b64895'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2b64895... bb-reoder.c (connect_traces): Free cold_traces at the end.
Deleted branch temp-test-branch (was 2b64895).
Fail to build gcc for commit [2b64895], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[2373de3a834c39ee799a0a7f6b099f0338ec82df] Makefile.in: Regenerate with automake 1.8.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2373de3]
+---------------------------------------- Current commit hash: [2373de3] ----------------------------------------+
Building GCC for commit [2373de3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2373de3 Makefile.in: Regenerate with automake 1.8.5.
HEAD is now at 2373de3 Makefile.in: Regenerate with automake 1.8.5.
Note: checking out '2373de3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2373de3... Makefile.in: Regenerate with automake 1.8.5.
Deleted branch temp-test-branch (was 2373de3).
Fail to build gcc for commit [2373de3], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[ce8fc97bdf64cb3abbe042de3d9030b0c22b74dc] re PR fortran/14568 (should not warn about unused variables in common blocks)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce8fc97]
+---------------------------------------- Current commit hash: [ce8fc97] ----------------------------------------+
Building GCC for commit [ce8fc97]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce8fc97 re PR fortran/14568 (should not warn about unused variables in common blocks)
HEAD is now at ce8fc97 re PR fortran/14568 (should not warn about unused variables in common blocks)
Note: checking out 'ce8fc97'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce8fc97... re PR fortran/14568 (should not warn about unused variables in common blocks)
Deleted branch temp-test-branch (was ce8fc97).
Fail to build gcc for commit [ce8fc97], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1c2cdd56e2a682dfe2040daaf0b8862470ab7991] config.gcc: Remove sparc64-*-aout*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1c2cdd5]
+---------------------------------------- Current commit hash: [1c2cdd5] ----------------------------------------+
Building GCC for commit [1c2cdd5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1c2cdd5 config.gcc: Remove sparc64-*-aout*.
HEAD is now at 1c2cdd5 config.gcc: Remove sparc64-*-aout*.
Note: checking out '1c2cdd5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1c2cdd5... config.gcc: Remove sparc64-*-aout*.
Deleted branch temp-test-branch (was 1c2cdd5).
Fail to build gcc for commit [1c2cdd5], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[b1b51268b8e9729ddb2195f223ea9120569f184c] * gcc.pot: Regenerate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b1b5126]
+---------------------------------------- Current commit hash: [b1b5126] ----------------------------------------+
Building GCC for commit [b1b5126]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b1b5126 * gcc.pot: Regenerate.
HEAD is now at b1b5126 * gcc.pot: Regenerate.
Note: checking out 'b1b5126'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b1b5126... * gcc.pot: Regenerate.
Deleted branch temp-test-branch (was b1b5126).
Fail to build gcc for commit [b1b5126], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a9e7b9d395c19da3ee99fae73d4d0f3e3a3121f5] Makefile.am (gfor_helper_src): Add runtime/normalize.f90.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a9e7b9d]
+---------------------------------------- Current commit hash: [a9e7b9d] ----------------------------------------+
Building GCC for commit [a9e7b9d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a9e7b9d Makefile.am (gfor_helper_src): Add runtime/normalize.f90.
HEAD is now at a9e7b9d Makefile.am (gfor_helper_src): Add runtime/normalize.f90.
Note: checking out 'a9e7b9d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a9e7b9d... Makefile.am (gfor_helper_src): Add runtime/normalize.f90.
Deleted branch temp-test-branch (was a9e7b9d).
Fail to build gcc for commit [a9e7b9d], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[940db2c87c3406a8d1a86890f3e2958ab503b880] tree-ssa-dom.c (real_avail_expr_hash): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [940db2c]
+---------------------------------------- Current commit hash: [940db2c] ----------------------------------------+
Building GCC for commit [940db2c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 940db2c tree-ssa-dom.c (real_avail_expr_hash): New.
HEAD is now at 940db2c tree-ssa-dom.c (real_avail_expr_hash): New.
Note: checking out '940db2c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 940db2c... tree-ssa-dom.c (real_avail_expr_hash): New.
Deleted branch temp-test-branch (was 940db2c).
Fail to build gcc for commit [940db2c], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[3e7ea383e6b1d713a707ed525bec188324025e1c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3e7ea38]
+---------------------------------------- Current commit hash: [3e7ea38] ----------------------------------------+
Building GCC for commit [3e7ea38]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3e7ea38 Daily bump.
HEAD is now at 3e7ea38 Daily bump.
Note: checking out '3e7ea38'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3e7ea38... Daily bump.
Deleted branch temp-test-branch (was 3e7ea38).
Fail to build gcc for commit [3e7ea38], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[67a459f37c25a9efb80026e8a85cb875ff07350a] * arith.c (gfc_range_check): Fix logic error.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67a459f]
+---------------------------------------- Current commit hash: [67a459f] ----------------------------------------+
Building GCC for commit [67a459f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67a459f * arith.c (gfc_range_check): Fix logic error.
HEAD is now at 67a459f * arith.c (gfc_range_check): Fix logic error.
Note: checking out '67a459f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67a459f... * arith.c (gfc_range_check): Fix logic error.
Deleted branch temp-test-branch (was 67a459f).
Fail to build gcc for commit [67a459f], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[4aef80f8e0b9f3a18e2afb6d10dcdcc26683d34d] args.c: Implement GETARG and IARGC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4aef80f]
+---------------------------------------- Current commit hash: [4aef80f] ----------------------------------------+
Building GCC for commit [4aef80f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4aef80f args.c: Implement GETARG and IARGC.
HEAD is now at 4aef80f args.c: Implement GETARG and IARGC.
Note: checking out '4aef80f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4aef80f... args.c: Implement GETARG and IARGC.
Deleted branch temp-test-branch (was 4aef80f).
Fail to build gcc for commit [4aef80f], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[7c243eef3984dbd43b380a6cde2a1a03f381d50b] convert.c (strip_float_extension): Skip both NOP_EXPR and CONVERT_EXPR floating point extensions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c243ee]
+---------------------------------------- Current commit hash: [7c243ee] ----------------------------------------+
Building GCC for commit [7c243ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c243ee convert.c (strip_float_extension): Skip both NOP_EXPR and CONVERT_EXPR floating point extensions.
HEAD is now at 7c243ee convert.c (strip_float_extension): Skip both NOP_EXPR and CONVERT_EXPR floating point extensions.
Note: checking out '7c243ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c243ee... convert.c (strip_float_extension): Skip both NOP_EXPR and CONVERT_EXPR floating point extensions.
Deleted branch temp-test-branch (was 7c243ee).
Fail to build gcc for commit [7c243ee], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[e2ddd6caaeaa5da8fb766f348718504db3986650] pa.c (pa_hpux_init_libfunc): Add support for unord_optab.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e2ddd6c]
+---------------------------------------- Current commit hash: [e2ddd6c] ----------------------------------------+
Building GCC for commit [e2ddd6c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e2ddd6c pa.c (pa_hpux_init_libfunc): Add support for unord_optab.
HEAD is now at e2ddd6c pa.c (pa_hpux_init_libfunc): Add support for unord_optab.
Note: checking out 'e2ddd6c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e2ddd6c... pa.c (pa_hpux_init_libfunc): Add support for unord_optab.
Deleted branch temp-test-branch (was e2ddd6c).
Fail to build gcc for commit [e2ddd6c], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[0f59171d711aaa9623e2ebc708324299662e55bd] tree.def (VTABLE_REF): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0f59171]
+---------------------------------------- Current commit hash: [0f59171] ----------------------------------------+
Building GCC for commit [0f59171]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0f59171 tree.def (VTABLE_REF): Remove.
HEAD is now at 0f59171 tree.def (VTABLE_REF): Remove.
Note: checking out '0f59171'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0f59171... tree.def (VTABLE_REF): Remove.
Deleted branch temp-test-branch (was 0f59171).
Fail to build gcc for commit [0f59171], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[e6ff425c0064f00c28315bdfa2624f556af17a2e] * sh.h (ALLOCATE_INITIAL_VALUE): Use return_address_pointer_rtx.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e6ff425]
+---------------------------------------- Current commit hash: [e6ff425] ----------------------------------------+
Building GCC for commit [e6ff425]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e6ff425 * sh.h (ALLOCATE_INITIAL_VALUE): Use return_address_pointer_rtx.
HEAD is now at e6ff425 * sh.h (ALLOCATE_INITIAL_VALUE): Use return_address_pointer_rtx.
Note: checking out 'e6ff425'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e6ff425... * sh.h (ALLOCATE_INITIAL_VALUE): Use return_address_pointer_rtx.
Deleted branch temp-test-branch (was e6ff425).
Fail to build gcc for commit [e6ff425], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[00bfee6f84b5fa61c1d1fa6981559e9ef9bbe899] tree-cfg.c (pass_warn_function_return): It needs CFG, not SSA.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [00bfee6]
+---------------------------------------- Current commit hash: [00bfee6] ----------------------------------------+
Building GCC for commit [00bfee6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 00bfee6 tree-cfg.c (pass_warn_function_return): It needs CFG, not SSA.
HEAD is now at 00bfee6 tree-cfg.c (pass_warn_function_return): It needs CFG, not SSA.
Note: checking out '00bfee6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 00bfee6... tree-cfg.c (pass_warn_function_return): It needs CFG, not SSA.
Deleted branch temp-test-branch (was 00bfee6).
Fail to build gcc for commit [00bfee6], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[d2d87e6d9ed5644287247ae5dff315d0a0b57de7] cp-tree.h: Include cgraph.h
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d2d87e6]
+---------------------------------------- Current commit hash: [d2d87e6] ----------------------------------------+
Building GCC for commit [d2d87e6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d2d87e6 cp-tree.h: Include cgraph.h
HEAD is now at d2d87e6 cp-tree.h: Include cgraph.h
Note: checking out 'd2d87e6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d2d87e6... cp-tree.h: Include cgraph.h
Deleted branch temp-test-branch (was d2d87e6).
Fail to build gcc for commit [d2d87e6], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[8e2cd6dda72cb630c1efe9036706f92bb3466740] re PR target/15551 (-mtune=pentium4  -O2 with sjlj EH breaks stack probe worker on windows32  targets)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8e2cd6d]
+---------------------------------------- Current commit hash: [8e2cd6d] ----------------------------------------+
Building GCC for commit [8e2cd6d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8e2cd6d re PR target/15551 (-mtune=pentium4  -O2 with sjlj EH breaks stack probe worker on windows32  targets)
HEAD is now at 8e2cd6d re PR target/15551 (-mtune=pentium4  -O2 with sjlj EH breaks stack probe worker on windows32  targets)
Note: checking out '8e2cd6d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8e2cd6d... re PR target/15551 (-mtune=pentium4  -O2 with sjlj EH breaks stack probe worker on windows32  targets)
Deleted branch temp-test-branch (was 8e2cd6d).
Fail to build gcc for commit [8e2cd6d], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[5607edfd0812ffe8cd63d1ba6f18df8474fa7b75] configure.in: Fix --enable-bootstrap breakage introduced in trees without gcc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5607edf]
+---------------------------------------- Current commit hash: [5607edf] ----------------------------------------+
Building GCC for commit [5607edf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5607edf configure.in: Fix --enable-bootstrap breakage introduced in trees without gcc.
HEAD is now at 5607edf configure.in: Fix --enable-bootstrap breakage introduced in trees without gcc.
Note: checking out '5607edf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5607edf... configure.in: Fix --enable-bootstrap breakage introduced in trees without gcc.
Deleted branch temp-test-branch (was 5607edf).
Fail to build gcc for commit [5607edf], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[992d907d5caac2269f88788826824df7914fc3ef] * g++.dg/opt/placeholder1.C: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [992d907]
+---------------------------------------- Current commit hash: [992d907] ----------------------------------------+
Building GCC for commit [992d907]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 992d907 * g++.dg/opt/placeholder1.C: New test.
HEAD is now at 992d907 * g++.dg/opt/placeholder1.C: New test.
Note: checking out '992d907'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 992d907... * g++.dg/opt/placeholder1.C: New test.
Deleted branch temp-test-branch (was 992d907).
Fail to build gcc for commit [992d907], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[618df7453e19213478c14873470d6efa760fcc7d] * interpret.cc (run): Handle wide fload.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [618df74]
+---------------------------------------- Current commit hash: [618df74] ----------------------------------------+
Building GCC for commit [618df74]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 618df74 * interpret.cc (run): Handle wide fload.
HEAD is now at 618df74 * interpret.cc (run): Handle wide fload.
Note: checking out '618df74'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 618df74... * interpret.cc (run): Handle wide fload.
Deleted branch temp-test-branch (was 618df74).
Fail to build gcc for commit [618df74], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[c4b3484922543d3fe24d83d561ec9198e669d4c7] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c4b3484]
+---------------------------------------- Current commit hash: [c4b3484] ----------------------------------------+
Building GCC for commit [c4b3484]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c4b3484 Daily bump.
HEAD is now at c4b3484 Daily bump.
Note: checking out 'c4b3484'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c4b3484... Daily bump.
Deleted branch temp-test-branch (was c4b3484).
Fail to build gcc for commit [c4b3484], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[313679b0b954e72f851877fb2d4d23afb149b47a] Move SSA_NAME annotations into tree_ssa_name.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [313679b]
+---------------------------------------- Current commit hash: [313679b] ----------------------------------------+
Building GCC for commit [313679b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 313679b Move SSA_NAME annotations into tree_ssa_name.
HEAD is now at 313679b Move SSA_NAME annotations into tree_ssa_name.
Note: checking out '313679b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 313679b... Move SSA_NAME annotations into tree_ssa_name.
Deleted branch temp-test-branch (was 313679b).
Fail to build gcc for commit [313679b], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[42159b8af9ef931388b91a15933f69d977d791b5] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42159b8]
+---------------------------------------- Current commit hash: [42159b8] ----------------------------------------+
Building GCC for commit [42159b8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42159b8 Daily bump.
HEAD is now at 42159b8 Daily bump.
Note: checking out '42159b8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42159b8... Daily bump.
Deleted branch temp-test-branch (was 42159b8).
Fail to build gcc for commit [42159b8], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[0fa96cea26f4977bab21d76acbcee97a08f6853c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0fa96ce]
+---------------------------------------- Current commit hash: [0fa96ce] ----------------------------------------+
Building GCC for commit [0fa96ce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0fa96ce Daily bump.
HEAD is now at 0fa96ce Daily bump.
Note: checking out '0fa96ce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0fa96ce... Daily bump.
Deleted branch temp-test-branch (was 0fa96ce).
Fail to build gcc for commit [0fa96ce], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[76391e5a045593f4cdc97535246ffafe2a5ecd72] gcc.c (struct prefix_list): Add forward declaration.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [76391e5]
+---------------------------------------- Current commit hash: [76391e5] ----------------------------------------+
Building GCC for commit [76391e5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 76391e5 gcc.c (struct prefix_list): Add forward declaration.
HEAD is now at 76391e5 gcc.c (struct prefix_list): Add forward declaration.
Note: checking out '76391e5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 76391e5... gcc.c (struct prefix_list): Add forward declaration.
Deleted branch temp-test-branch (was 76391e5).
Fail to build gcc for commit [76391e5], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[b40742a53183a904e4902b1fcad54b7b2c6cf57d] re PR rtl-optimization/15521 (sched1 extends life of hard registers on SMALL_REGISTER_CLASSES targets when exceptions are enabled)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b40742a]
+---------------------------------------- Current commit hash: [b40742a] ----------------------------------------+
Building GCC for commit [b40742a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b40742a re PR rtl-optimization/15521 (sched1 extends life of hard registers on SMALL_REGISTER_CLASSES targets when exceptions are enabled)
HEAD is now at b40742a re PR rtl-optimization/15521 (sched1 extends life of hard registers on SMALL_REGISTER_CLASSES targets when exceptions are enabled)
Note: checking out 'b40742a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b40742a... re PR rtl-optimization/15521 (sched1 extends life of hard registers on SMALL_REGISTER_CLASSES targets when exceptions are enabled)
Deleted branch temp-test-branch (was b40742a).
Fail to build gcc for commit [b40742a], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[2f93eea8612d4ced2eeee52db5ce66bd75303455] Makefile.in (OBJS): Add rtlhooks.o.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f93eea]
+---------------------------------------- Current commit hash: [2f93eea] ----------------------------------------+
Building GCC for commit [2f93eea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f93eea Makefile.in (OBJS): Add rtlhooks.o.
HEAD is now at 2f93eea Makefile.in (OBJS): Add rtlhooks.o.
Note: checking out '2f93eea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f93eea... Makefile.in (OBJS): Add rtlhooks.o.
Deleted branch temp-test-branch (was 2f93eea).
Fail to build gcc for commit [2f93eea], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[ff24b82044cde0c0ff5dd68f45bc9f2bfbcfb3cf] re PR target/14457 (ICE with simple c++ source)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ff24b82]
+---------------------------------------- Current commit hash: [ff24b82] ----------------------------------------+
Building GCC for commit [ff24b82]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ff24b82 re PR target/14457 (ICE with simple c++ source)
HEAD is now at ff24b82 re PR target/14457 (ICE with simple c++ source)
Note: checking out 'ff24b82'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ff24b82... re PR target/14457 (ICE with simple c++ source)
Deleted branch temp-test-branch (was ff24b82).
Fail to build gcc for commit [ff24b82], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[7d34a5a986580c5fa23a165c800eb60ad5348450] configure.ac (includedir): Rename to ...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7d34a5a]
+---------------------------------------- Current commit hash: [7d34a5a] ----------------------------------------+
Building GCC for commit [7d34a5a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7d34a5a configure.ac (includedir): Rename to ...
HEAD is now at 7d34a5a configure.ac (includedir): Rename to ...
Note: checking out '7d34a5a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7d34a5a... configure.ac (includedir): Rename to ...
Deleted branch temp-test-branch (was 7d34a5a).
Fail to build gcc for commit [7d34a5a], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[73d10efa86de15b218ab2030a9d02d4e396afe2c] toplev.c (floor_log2_wide): Replace loop with faster bit operations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [73d10ef]
+---------------------------------------- Current commit hash: [73d10ef] ----------------------------------------+
Building GCC for commit [73d10ef]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 73d10ef toplev.c (floor_log2_wide): Replace loop with faster bit operations.
HEAD is now at 73d10ef toplev.c (floor_log2_wide): Replace loop with faster bit operations.
Note: checking out '73d10ef'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 73d10ef... toplev.c (floor_log2_wide): Replace loop with faster bit operations.
Deleted branch temp-test-branch (was 73d10ef).
Fail to build gcc for commit [73d10ef], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[f11e087ed68f35e0f3dc65937283226a3a323f3c] re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f11e087]
+---------------------------------------- Current commit hash: [f11e087] ----------------------------------------+
Building GCC for commit [f11e087]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f11e087 re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
HEAD is now at f11e087 re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
Note: checking out 'f11e087'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f11e087... re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
Deleted branch temp-test-branch (was f11e087).
Fail to build gcc for commit [f11e087], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[bf730f15c50fab842ac222b8e60d62737d5f0d9a] re PR c/14649 (atan(1.0) should not be a constant expression)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bf730f1]
+---------------------------------------- Current commit hash: [bf730f1] ----------------------------------------+
Building GCC for commit [bf730f1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bf730f1 re PR c/14649 (atan(1.0) should not be a constant expression)
HEAD is now at bf730f1 re PR c/14649 (atan(1.0) should not be a constant expression)
Note: checking out 'bf730f1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bf730f1... re PR c/14649 (atan(1.0) should not be a constant expression)
Deleted branch temp-test-branch (was bf730f1).
Fail to build gcc for commit [bf730f1], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[6ef4215401ab8001886973790886dfd75446c037] re PR fortran/15962 (constant expression not recognized as such)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ef4215]
+---------------------------------------- Current commit hash: [6ef4215] ----------------------------------------+
Building GCC for commit [6ef4215]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ef4215 re PR fortran/15962 (constant expression not recognized as such)
HEAD is now at 6ef4215 re PR fortran/15962 (constant expression not recognized as such)
Note: checking out '6ef4215'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ef4215... re PR fortran/15962 (constant expression not recognized as such)
Deleted branch temp-test-branch (was 6ef4215).
Fail to build gcc for commit [6ef4215], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[345b912f506bad61fcd703b6aa405a3a94f01024] 2004-06-07  Dhruv Matani  <dhruvbird@gmx.net> 	    Paolo Carlini  <pcarlini@suse.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [345b912]
+---------------------------------------- Current commit hash: [345b912] ----------------------------------------+
Building GCC for commit [345b912]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 345b912 2004-06-07  Dhruv Matani  <dhruvbird@gmx.net> 	    Paolo Carlini  <pcarlini@suse.de>
HEAD is now at 345b912 2004-06-07  Dhruv Matani  <dhruvbird@gmx.net>
Note: checking out '345b912'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 345b912... 2004-06-07  Dhruv Matani  <dhruvbird@gmx.net> 	    Paolo Carlini  <pcarlini@suse.de>
Deleted branch temp-test-branch (was 345b912).
Fail to build gcc for commit [345b912], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[096f22f42494fad3990d6a2d74a9844dd6af977b] function.h (struct function): Remove cannot_inline field.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [096f22f]
+---------------------------------------- Current commit hash: [096f22f] ----------------------------------------+
Building GCC for commit [096f22f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 096f22f function.h (struct function): Remove cannot_inline field.
HEAD is now at 096f22f function.h (struct function): Remove cannot_inline field.
Note: checking out '096f22f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 096f22f... function.h (struct function): Remove cannot_inline field.
Deleted branch temp-test-branch (was 096f22f).
Fail to build gcc for commit [096f22f], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[d1f9044b7b63d950125cc095730e186eb04e5e3f] tree-ssa-alias.c (delete_alias_info): XFREE bitmaps allocated with BITMAP_XMALLOC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1f9044]
+---------------------------------------- Current commit hash: [d1f9044] ----------------------------------------+
Building GCC for commit [d1f9044]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1f9044 tree-ssa-alias.c (delete_alias_info): XFREE bitmaps allocated with BITMAP_XMALLOC.
HEAD is now at d1f9044 tree-ssa-alias.c (delete_alias_info): XFREE bitmaps allocated with BITMAP_XMALLOC.
Note: checking out 'd1f9044'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1f9044... tree-ssa-alias.c (delete_alias_info): XFREE bitmaps allocated with BITMAP_XMALLOC.
Deleted branch temp-test-branch (was d1f9044).
Fail to build gcc for commit [d1f9044], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[138c4fd48455093a2c8ffa962dcb420c3006fb01] jcf-write.c (generate_bytecode_conditional): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [138c4fd]
+---------------------------------------- Current commit hash: [138c4fd] ----------------------------------------+
Building GCC for commit [138c4fd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 138c4fd jcf-write.c (generate_bytecode_conditional): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
HEAD is now at 138c4fd jcf-write.c (generate_bytecode_conditional): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
Note: checking out '138c4fd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 138c4fd... jcf-write.c (generate_bytecode_conditional): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
Deleted branch temp-test-branch (was 138c4fd).
Fail to build gcc for commit [138c4fd], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[15342341aa4ade477abe31ccba4333d6dfc2956b] tree-ssa-pre.c (execute_pre): Free ephi_use_pool and idfs_cache at the end of the function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1534234]
+---------------------------------------- Current commit hash: [1534234] ----------------------------------------+
Building GCC for commit [1534234]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1534234 tree-ssa-pre.c (execute_pre): Free ephi_use_pool and idfs_cache at the end of the function.
HEAD is now at 1534234 tree-ssa-pre.c (execute_pre): Free ephi_use_pool and idfs_cache at the end of the function.
Note: checking out '1534234'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1534234... tree-ssa-pre.c (execute_pre): Free ephi_use_pool and idfs_cache at the end of the function.
Deleted branch temp-test-branch (was 1534234).
Fail to build gcc for commit [1534234], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[ce738b86f9cb4e73b7e7458c8e9a6c4865aa187b] re PR fortran/15510 (Should not warn about unused variables from used modules)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce738b8]
+---------------------------------------- Current commit hash: [ce738b8] ----------------------------------------+
Building GCC for commit [ce738b8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce738b8 re PR fortran/15510 (Should not warn about unused variables from used modules)
HEAD is now at ce738b8 re PR fortran/15510 (Should not warn about unused variables from used modules)
Note: checking out 'ce738b8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce738b8... re PR fortran/15510 (Should not warn about unused variables from used modules)
Deleted branch temp-test-branch (was ce738b8).
Fail to build gcc for commit [ce738b8], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a2f0e34d9ecd47343f8cdcc78841de15a7e5b2c0] * match.c (gfc_match): Eliminate dead code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a2f0e34]
+---------------------------------------- Current commit hash: [a2f0e34] ----------------------------------------+
Building GCC for commit [a2f0e34]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a2f0e34 * match.c (gfc_match): Eliminate dead code.
HEAD is now at a2f0e34 * match.c (gfc_match): Eliminate dead code.
Note: checking out 'a2f0e34'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a2f0e34... * match.c (gfc_match): Eliminate dead code.
Deleted branch temp-test-branch (was a2f0e34).
Fail to build gcc for commit [a2f0e34], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[623a66fa858ef308693b61e33f2c7ba6686d3151] basic-block.h (could_fall_through): Declare.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [623a66f]
+---------------------------------------- Current commit hash: [623a66f] ----------------------------------------+
Building GCC for commit [623a66f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 623a66f basic-block.h (could_fall_through): Declare.
HEAD is now at 623a66f basic-block.h (could_fall_through): Declare.
Note: checking out '623a66f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 623a66f... basic-block.h (could_fall_through): Declare.
Deleted branch temp-test-branch (was 623a66f).
Fail to build gcc for commit [623a66f], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[827c06b6cfd22d7ca78f56614a5be1b50dadca79] basic-block.h (life_analysis, [...]): Update prototypes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [827c06b]
+---------------------------------------- Current commit hash: [827c06b] ----------------------------------------+
Building GCC for commit [827c06b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 827c06b basic-block.h (life_analysis, [...]): Update prototypes.
HEAD is now at 827c06b basic-block.h (life_analysis, [...]): Update prototypes.
Note: checking out '827c06b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 827c06b... basic-block.h (life_analysis, [...]): Update prototypes.
Deleted branch temp-test-branch (was 827c06b).
Fail to build gcc for commit [827c06b], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1b0f3e79b1b3b9e96be90ec30fc6a142057e84ed] fold-const.c (combine_comparisons, [...]): Use constant_boolean_node where appropriate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1b0f3e7]
+---------------------------------------- Current commit hash: [1b0f3e7] ----------------------------------------+
Building GCC for commit [1b0f3e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1b0f3e7 fold-const.c (combine_comparisons, [...]): Use constant_boolean_node where appropriate.
HEAD is now at 1b0f3e7 fold-const.c (combine_comparisons, [...]): Use constant_boolean_node where appropriate.
Note: checking out '1b0f3e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1b0f3e7... fold-const.c (combine_comparisons, [...]): Use constant_boolean_node where appropriate.
Deleted branch temp-test-branch (was 1b0f3e7).
Fail to build gcc for commit [1b0f3e7], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[7cd9b02827c8e773dc0c484a24dda26cfb2c8f1f] 20040514-1.c: Add '}' that was forgotten.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7cd9b02]
+---------------------------------------- Current commit hash: [7cd9b02] ----------------------------------------+
Building GCC for commit [7cd9b02]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7cd9b02 20040514-1.c: Add '}' that was forgotten.
HEAD is now at 7cd9b02 20040514-1.c: Add '}' that was forgotten.
Note: checking out '7cd9b02'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7cd9b02... 20040514-1.c: Add '}' that was forgotten.
Deleted branch temp-test-branch (was 7cd9b02).
Fail to build gcc for commit [7cd9b02], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[6661a85ff7ed08bc32ee95993e36d7d0219f5d99] parser.c (cp_parser_simple_type_specifier): Explicitly test against NULL_TREE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6661a85]
+---------------------------------------- Current commit hash: [6661a85] ----------------------------------------+
Building GCC for commit [6661a85]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6661a85 parser.c (cp_parser_simple_type_specifier): Explicitly test against NULL_TREE.
HEAD is now at 6661a85 parser.c (cp_parser_simple_type_specifier): Explicitly test against NULL_TREE.
Note: checking out '6661a85'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6661a85... parser.c (cp_parser_simple_type_specifier): Explicitly test against NULL_TREE.
Deleted branch temp-test-branch (was 6661a85).
Fail to build gcc for commit [6661a85], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a7cc468aa3453959c3eccafd5e66eb603f69696c] gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or COMPONENT_REF variable fields unless they're non-constant.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a7cc468]
+---------------------------------------- Current commit hash: [a7cc468] ----------------------------------------+
Building GCC for commit [a7cc468]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a7cc468 gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or COMPONENT_REF variable fields unless they're non-constant.
HEAD is now at a7cc468 gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or COMPONENT_REF variable fields unless they're non-constant.
Note: checking out 'a7cc468'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a7cc468... gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or COMPONENT_REF variable fields unless they're non-constant.
Deleted branch temp-test-branch (was a7cc468).
Fail to build gcc for commit [a7cc468], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[8204210bd612ade3760c5c9eec6d6b1368dee15b] re PR libfortran/12839 (incorrect IO of Inf)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8204210]
+---------------------------------------- Current commit hash: [8204210] ----------------------------------------+
Building GCC for commit [8204210]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8204210 re PR libfortran/12839 (incorrect IO of Inf)
HEAD is now at 8204210 re PR libfortran/12839 (incorrect IO of Inf)
Note: checking out '8204210'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8204210... re PR libfortran/12839 (incorrect IO of Inf)
Deleted branch temp-test-branch (was 8204210).
Fail to build gcc for commit [8204210], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1c020272cec98dfc13206f9247da9adac0ab0ad8] Makefile.tpl (HOST_EXPORTS): Fix pasto.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1c02027]
+---------------------------------------- Current commit hash: [1c02027] ----------------------------------------+
Building GCC for commit [1c02027]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1c02027 Makefile.tpl (HOST_EXPORTS): Fix pasto.
HEAD is now at 1c02027 Makefile.tpl (HOST_EXPORTS): Fix pasto.
Note: checking out '1c02027'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1c02027... Makefile.tpl (HOST_EXPORTS): Fix pasto.
Deleted branch temp-test-branch (was 1c02027).
Fail to build gcc for commit [1c02027], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[07166901ad64e6c3d8c85ee1d54613bd662ff603] re PR c++/14932 (cannot use offsetof to get offsets of array elements in g++ 3.4.0 prerelease)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0716690]
+---------------------------------------- Current commit hash: [0716690] ----------------------------------------+
Building GCC for commit [0716690]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0716690 re PR c++/14932 (cannot use offsetof to get offsets of array elements in g++ 3.4.0 prerelease)
HEAD is now at 0716690 re PR c++/14932 (cannot use offsetof to get offsets of array elements in g++ 3.4.0 prerelease)
Note: checking out '0716690'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0716690... re PR c++/14932 (cannot use offsetof to get offsets of array elements in g++ 3.4.0 prerelease)
Deleted branch temp-test-branch (was 0716690).
Fail to build gcc for commit [0716690], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[987a3c2b9c34e9d7b4a11b13e032754fbecb4d6f] re PR target/15869 (No NOP after LW (with -mips1 -O0))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [987a3c2]
+---------------------------------------- Current commit hash: [987a3c2] ----------------------------------------+
Building GCC for commit [987a3c2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 987a3c2 re PR target/15869 (No NOP after LW (with -mips1 -O0))
HEAD is now at 987a3c2 re PR target/15869 (No NOP after LW (with -mips1 -O0))
Note: checking out '987a3c2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 987a3c2... re PR target/15869 (No NOP after LW (with -mips1 -O0))
Deleted branch temp-test-branch (was 987a3c2).
Fail to build gcc for commit [987a3c2], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a90f9bb112ebc8e243432ea776a374c3adc8b3c7] re PR c++/15142 (Internal compiler error when passing a string where a char* is expecteted in a throw statement)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a90f9bb]
+---------------------------------------- Current commit hash: [a90f9bb] ----------------------------------------+
Building GCC for commit [a90f9bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a90f9bb re PR c++/15142 (Internal compiler error when passing a string where a char* is expecteted in a throw statement)
HEAD is now at a90f9bb re PR c++/15142 (Internal compiler error when passing a string where a char* is expecteted in a throw statement)
Note: checking out 'a90f9bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a90f9bb... re PR c++/15142 (Internal compiler error when passing a string where a char* is expecteted in a throw statement)
Deleted branch temp-test-branch (was a90f9bb).
Fail to build gcc for commit [a90f9bb], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[ccde3f1a6e48abe8a4654ef8225e91466c6d6b8e] MAINTAINERS: Added self to write-after-approval.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ccde3f1]
+---------------------------------------- Current commit hash: [ccde3f1] ----------------------------------------+
Building GCC for commit [ccde3f1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ccde3f1 MAINTAINERS: Added self to write-after-approval.
HEAD is now at ccde3f1 MAINTAINERS: Added self to write-after-approval.
Note: checking out 'ccde3f1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ccde3f1... MAINTAINERS: Added self to write-after-approval.
Deleted branch temp-test-branch (was ccde3f1).
Fail to build gcc for commit [ccde3f1], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a72967cd5d574694af7abb943c237a8960eabbab] sourcebuild.texi (Front End): Add details of more installation documentation required.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a72967c]
+---------------------------------------- Current commit hash: [a72967c] ----------------------------------------+
Building GCC for commit [a72967c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a72967c sourcebuild.texi (Front End): Add details of more installation documentation required.
HEAD is now at a72967c sourcebuild.texi (Front End): Add details of more installation documentation required.
Note: checking out 'a72967c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a72967c... sourcebuild.texi (Front End): Add details of more installation documentation required.
Deleted branch temp-test-branch (was a72967c).
Fail to build gcc for commit [a72967c], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[b16c5d49c4d09ee3b1c61ef1d46d568730f412c0] Typo fix.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b16c5d4]
+---------------------------------------- Current commit hash: [b16c5d4] ----------------------------------------+
Building GCC for commit [b16c5d4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b16c5d4 Typo fix.
HEAD is now at b16c5d4 Typo fix.
Note: checking out 'b16c5d4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b16c5d4... Typo fix.
Deleted branch temp-test-branch (was b16c5d4).
Fail to build gcc for commit [b16c5d4], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[95eec0d671ffda4b666c138d426c503548981ed8] tree-ssa-ccp.c (varying_ssa_edges): New worklist.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [95eec0d]
+---------------------------------------- Current commit hash: [95eec0d] ----------------------------------------+
Building GCC for commit [95eec0d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 95eec0d tree-ssa-ccp.c (varying_ssa_edges): New worklist.
HEAD is now at 95eec0d tree-ssa-ccp.c (varying_ssa_edges): New worklist.
Note: checking out '95eec0d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 95eec0d... tree-ssa-ccp.c (varying_ssa_edges): New worklist.
Deleted branch temp-test-branch (was 95eec0d).
Fail to build gcc for commit [95eec0d], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[160874e4cda4402512a4ccc1c36a723226cabf2a] arith.c (gfc_range_check): correct complex underflow.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [160874e]
+---------------------------------------- Current commit hash: [160874e] ----------------------------------------+
Building GCC for commit [160874e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 160874e arith.c (gfc_range_check): correct complex underflow.
HEAD is now at 160874e arith.c (gfc_range_check): correct complex underflow.
Note: checking out '160874e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 160874e... arith.c (gfc_range_check): correct complex underflow.
Deleted branch temp-test-branch (was 160874e).
Fail to build gcc for commit [160874e], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[3d98fa14024bb2aee26f91fe7a6256fc089594fb] toplev.c (check_global_declarations): Don't ask for DECL_ASSEMBLER_NAME unless the function really is declared static...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3d98fa1]
+---------------------------------------- Current commit hash: [3d98fa1] ----------------------------------------+
Building GCC for commit [3d98fa1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3d98fa1 toplev.c (check_global_declarations): Don't ask for DECL_ASSEMBLER_NAME unless the function really is declared static...
HEAD is now at 3d98fa1 toplev.c (check_global_declarations): Don't ask for DECL_ASSEMBLER_NAME unless the function really is declared static...
Note: checking out '3d98fa1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3d98fa1... toplev.c (check_global_declarations): Don't ask for DECL_ASSEMBLER_NAME unless the function really is declared static...
Deleted branch temp-test-branch (was 3d98fa1).
Fail to build gcc for commit [3d98fa1], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[8426c25e7c2351b1f1f7a48d3ec01a79622f558c] re PR target/15550 ([i386] ICE in extract_insn, at recog.c:2083)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8426c25]
+---------------------------------------- Current commit hash: [8426c25] ----------------------------------------+
Building GCC for commit [8426c25]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8426c25 re PR target/15550 ([i386] ICE in extract_insn, at recog.c:2083)
HEAD is now at 8426c25 re PR target/15550 ([i386] ICE in extract_insn, at recog.c:2083)
Note: checking out '8426c25'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8426c25... re PR target/15550 ([i386] ICE in extract_insn, at recog.c:2083)
Deleted branch temp-test-branch (was 8426c25).
Fail to build gcc for commit [8426c25], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[3a786c6263dbfe0242bab4fb93a35116ee535090] Makefile.in (insn-conditions.o): Back out removal of reload.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a786c6]
+---------------------------------------- Current commit hash: [3a786c6] ----------------------------------------+
Building GCC for commit [3a786c6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a786c6 Makefile.in (insn-conditions.o): Back out removal of reload.h.
HEAD is now at 3a786c6 Makefile.in (insn-conditions.o): Back out removal of reload.h.
Note: checking out '3a786c6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a786c6... Makefile.in (insn-conditions.o): Back out removal of reload.h.
Deleted branch temp-test-branch (was 3a786c6).
Fail to build gcc for commit [3a786c6], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a9042bb454c0dee2b44922f6a0ddf1849c8a7228] darwin.h (HOT_TEXT_SECTION_NAME): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a9042bb]
+---------------------------------------- Current commit hash: [a9042bb] ----------------------------------------+
Building GCC for commit [a9042bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a9042bb darwin.h (HOT_TEXT_SECTION_NAME): Define.
HEAD is now at a9042bb darwin.h (HOT_TEXT_SECTION_NAME): Define.
Note: checking out 'a9042bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a9042bb... darwin.h (HOT_TEXT_SECTION_NAME): Define.
Deleted branch temp-test-branch (was a9042bb).
Fail to build gcc for commit [a9042bb], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[5162e02a26ed0bc8ba29a5caae71f807f50c8875] sparc.h (MOVE_RATIO): New definition.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5162e02]
+---------------------------------------- Current commit hash: [5162e02] ----------------------------------------+
Building GCC for commit [5162e02]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5162e02 sparc.h (MOVE_RATIO): New definition.
HEAD is now at 5162e02 sparc.h (MOVE_RATIO): New definition.
Note: checking out '5162e02'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5162e02... sparc.h (MOVE_RATIO): New definition.
Deleted branch temp-test-branch (was 5162e02).
Fail to build gcc for commit [5162e02], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[687a64249824424a470802efedfcaf3649beb955] re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [687a642]
+---------------------------------------- Current commit hash: [687a642] ----------------------------------------+
Building GCC for commit [687a642]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 687a642 re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
HEAD is now at 687a642 re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
Note: checking out '687a642'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 687a642... re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
Deleted branch temp-test-branch (was 687a642).
Fail to build gcc for commit [687a642], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1ee19633cade4692a592576164f627aa7b48422d] regclass.c (init_reg_sets): Check for missing registers in target initializer macros FIXED_REGISTERS and...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ee1963]
+---------------------------------------- Current commit hash: [1ee1963] ----------------------------------------+
Building GCC for commit [1ee1963]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ee1963 regclass.c (init_reg_sets): Check for missing registers in target initializer macros FIXED_REGISTERS and...
HEAD is now at 1ee1963 regclass.c (init_reg_sets): Check for missing registers in target initializer macros FIXED_REGISTERS and...
Note: checking out '1ee1963'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ee1963... regclass.c (init_reg_sets): Check for missing registers in target initializer macros FIXED_REGISTERS and...
Deleted branch temp-test-branch (was 1ee1963).
Fail to build gcc for commit [1ee1963], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[42eb30b557a129514aa76470115ea8bb1e35f027] expmed.c (expand_mult_const): In sanity check...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42eb30b]
+---------------------------------------- Current commit hash: [42eb30b] ----------------------------------------+
Building GCC for commit [42eb30b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42eb30b expmed.c (expand_mult_const): In sanity check...
HEAD is now at 42eb30b expmed.c (expand_mult_const): In sanity check...
Note: checking out '42eb30b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42eb30b... expmed.c (expand_mult_const): In sanity check...
Deleted branch temp-test-branch (was 42eb30b).
Fail to build gcc for commit [42eb30b], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[144cbad04be7523a756f608fcd3037120057e8e6] toplev.c (floor_log2_wide): Correct casts for 64-bit hosts.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [144cbad]
+---------------------------------------- Current commit hash: [144cbad] ----------------------------------------+
Building GCC for commit [144cbad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 144cbad toplev.c (floor_log2_wide): Correct casts for 64-bit hosts.
HEAD is now at 144cbad toplev.c (floor_log2_wide): Correct casts for 64-bit hosts.
Note: checking out '144cbad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 144cbad... toplev.c (floor_log2_wide): Correct casts for 64-bit hosts.
Deleted branch temp-test-branch (was 144cbad).
Fail to build gcc for commit [144cbad], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[43acb4c458d3aea42fccef8c1e713718d577a4f8] cfgcleanup.c (try_forward_edges): Do not check loop structure when not loop optimizing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [43acb4c]
+---------------------------------------- Current commit hash: [43acb4c] ----------------------------------------+
Building GCC for commit [43acb4c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 43acb4c cfgcleanup.c (try_forward_edges): Do not check loop structure when not loop optimizing.
HEAD is now at 43acb4c cfgcleanup.c (try_forward_edges): Do not check loop structure when not loop optimizing.
Note: checking out '43acb4c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 43acb4c... cfgcleanup.c (try_forward_edges): Do not check loop structure when not loop optimizing.
Deleted branch temp-test-branch (was 43acb4c).
Fail to build gcc for commit [43acb4c], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16] objc.exp (objc_target_compile): Revert the '-framework Foundation' flag fix...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e9c5d1c]
+---------------------------------------- Current commit hash: [e9c5d1c] ----------------------------------------+
Building GCC for commit [e9c5d1c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e9c5d1c objc.exp (objc_target_compile): Revert the '-framework Foundation' flag fix...
HEAD is now at e9c5d1c objc.exp (objc_target_compile): Revert the '-framework Foundation' flag fix...
Note: checking out 'e9c5d1c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e9c5d1c... objc.exp (objc_target_compile): Revert the '-framework Foundation' flag fix...
Deleted branch temp-test-branch (was e9c5d1c).
Fail to build gcc for commit [e9c5d1c], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[58b9accaebab8fc4ee05a52f6698c24e8bfa65e2] Remove conflict marker.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [58b9acc]
+---------------------------------------- Current commit hash: [58b9acc] ----------------------------------------+
Building GCC for commit [58b9acc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 58b9acc Remove conflict marker.
HEAD is now at 58b9acc Remove conflict marker.
Note: checking out '58b9acc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 58b9acc... Remove conflict marker.
Deleted branch temp-test-branch (was 58b9acc).
Fail to build gcc for commit [58b9acc], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[5877771853e65df4ebc5213c5dd098d2e49bf95a] expmed.c (add_cost, [...]): Make arrays indexed by machine mode.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5877771]
+---------------------------------------- Current commit hash: [5877771] ----------------------------------------+
Building GCC for commit [5877771]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5877771 expmed.c (add_cost, [...]): Make arrays indexed by machine mode.
HEAD is now at 5877771 expmed.c (add_cost, [...]): Make arrays indexed by machine mode.
Note: checking out '5877771'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5877771... expmed.c (add_cost, [...]): Make arrays indexed by machine mode.
Deleted branch temp-test-branch (was 5877771).
Fail to build gcc for commit [5877771], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1] mips.md (extendsidi2): Tie the source and destination of the register alternative.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a97a3e7]
+---------------------------------------- Current commit hash: [a97a3e7] ----------------------------------------+
Building GCC for commit [a97a3e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a97a3e7 mips.md (extendsidi2): Tie the source and destination of the register alternative.
HEAD is now at a97a3e7 mips.md (extendsidi2): Tie the source and destination of the register alternative.
Note: checking out 'a97a3e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a97a3e7... mips.md (extendsidi2): Tie the source and destination of the register alternative.
Deleted branch temp-test-branch (was a97a3e7).
Fail to build gcc for commit [a97a3e7], skip this commit. Return 125.
Bisecting: 573 revisions left to test after this (roughly 9 steps)
[1f4f60fc3f9c131d74d60b66d77b23faeed8526c] re PR c/14963 (Unknown types cause ICE in function declarations)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1f4f60f]
+---------------------------------------- Current commit hash: [1f4f60f] ----------------------------------------+
GCC for commit [1f4f60f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-1f4f60f/bin/gcc with -O1:
0
Output of /tmp/gcc-1f4f60f/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 1f4f60f... re PR c/14963 (Unknown types cause ICE in function declarations)
[32m[     info][0m Current commit [1f4f60f] is bad. Return value: 1

Bisecting: 570 revisions left to test after this (roughly 9 steps)
[3af5dcdb45192587bb3a338f299d7cc7e7f96125] re PR target/16144 (Bogus reference to __divdf3 when -O1)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3af5dcd]
+---------------------------------------- Current commit hash: [3af5dcd] ----------------------------------------+
Building GCC for commit [3af5dcd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3af5dcd re PR target/16144 (Bogus reference to __divdf3 when -O1)
HEAD is now at 3af5dcd re PR target/16144 (Bogus reference to __divdf3 when -O1)
Note: checking out '3af5dcd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3af5dcd... re PR target/16144 (Bogus reference to __divdf3 when -O1)
Deleted branch temp-test-branch (was 3af5dcd).
Fail to build gcc for commit [3af5dcd], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ce25943a4de8370b03133113eb9935f92fbc7a75] Fix PR tree-optimization/15979 Fix PR tree-optimization/15981
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce25943]
+---------------------------------------- Current commit hash: [ce25943] ----------------------------------------+
Building GCC for commit [ce25943]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce25943 Fix PR tree-optimization/15979 Fix PR tree-optimization/15981
HEAD is now at ce25943 Fix PR tree-optimization/15979 Fix PR tree-optimization/15981
Note: checking out 'ce25943'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce25943... Fix PR tree-optimization/15979 Fix PR tree-optimization/15981
Deleted branch temp-test-branch (was ce25943).
Fail to build gcc for commit [ce25943], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d4fa05b90d6647ceaf50b5f1b8504fc0e01fae9c] re PR fortran/13702 (When preprocessing Fortran files (.F, .F90 and .F95) cpp should emit line numbers.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d4fa05b]
+---------------------------------------- Current commit hash: [d4fa05b] ----------------------------------------+
Building GCC for commit [d4fa05b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d4fa05b re PR fortran/13702 (When preprocessing Fortran files (.F, .F90 and .F95) cpp should emit line numbers.)
HEAD is now at d4fa05b re PR fortran/13702 (When preprocessing Fortran files (.F, .F90 and .F95) cpp should emit line numbers.)
Note: checking out 'd4fa05b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d4fa05b... re PR fortran/13702 (When preprocessing Fortran files (.F, .F90 and .F95) cpp should emit line numbers.)
Deleted branch temp-test-branch (was d4fa05b).
Fail to build gcc for commit [d4fa05b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9f680e794f0f38dba5088a50025b23ea9b2ad6ab] libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9f680e7]
+---------------------------------------- Current commit hash: [9f680e7] ----------------------------------------+
Building GCC for commit [9f680e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9f680e7 libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
HEAD is now at 9f680e7 libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
Note: checking out '9f680e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9f680e7... libgcc-std.ver: Add __unorddf2 and __unordsf2 with version 3.3.4.
Deleted branch temp-test-branch (was 9f680e7).
Fail to build gcc for commit [9f680e7], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[79a4758dd5744731bad51286b13943b77abed1c3] * doc/cfg.texi (Edges): Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [79a4758]
+---------------------------------------- Current commit hash: [79a4758] ----------------------------------------+
Building GCC for commit [79a4758]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 79a4758 * doc/cfg.texi (Edges): Fix typo.
HEAD is now at 79a4758 * doc/cfg.texi (Edges): Fix typo.
Note: checking out '79a4758'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 79a4758... * doc/cfg.texi (Edges): Fix typo.
Deleted branch temp-test-branch (was 79a4758).
Fail to build gcc for commit [79a4758], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d3157fb66d158c3f7073988cd5135da88a48a2f1] sol2.h (__enable_execute_stack): ANSIfy function definition.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d3157fb]
+---------------------------------------- Current commit hash: [d3157fb] ----------------------------------------+
Building GCC for commit [d3157fb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d3157fb sol2.h (__enable_execute_stack): ANSIfy function definition.
HEAD is now at d3157fb sol2.h (__enable_execute_stack): ANSIfy function definition.
Note: checking out 'd3157fb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d3157fb... sol2.h (__enable_execute_stack): ANSIfy function definition.
Deleted branch temp-test-branch (was d3157fb).
Fail to build gcc for commit [d3157fb], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[66ba7273482a3c56accefba709e0dfe8f8d75824] * check-init.c: Correct minor typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [66ba727]
+---------------------------------------- Current commit hash: [66ba727] ----------------------------------------+
Building GCC for commit [66ba727]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 66ba727 * check-init.c: Correct minor typos.
HEAD is now at 66ba727 * check-init.c: Correct minor typos.
Note: checking out '66ba727'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 66ba727... * check-init.c: Correct minor typos.
Deleted branch temp-test-branch (was 66ba727).
Fail to build gcc for commit [66ba727], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b605eb59fcb15b79f0b9095654b8db76b997736c] reload.c (find_reloads): Force reload for pseudo registers on big endian machines.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b605eb5]
+---------------------------------------- Current commit hash: [b605eb5] ----------------------------------------+
Building GCC for commit [b605eb5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b605eb5 reload.c (find_reloads): Force reload for pseudo registers on big endian machines.
HEAD is now at b605eb5 reload.c (find_reloads): Force reload for pseudo registers on big endian machines.
Note: checking out 'b605eb5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b605eb5... reload.c (find_reloads): Force reload for pseudo registers on big endian machines.
Deleted branch temp-test-branch (was b605eb5).
Fail to build gcc for commit [b605eb5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2f60699380c4bc929efc444b2413d830bad3e9b5] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f60699]
+---------------------------------------- Current commit hash: [2f60699] ----------------------------------------+
Building GCC for commit [2f60699]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f60699 Daily bump.
HEAD is now at 2f60699 Daily bump.
Note: checking out '2f60699'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f60699... Daily bump.
Deleted branch temp-test-branch (was 2f60699).
Fail to build gcc for commit [2f60699], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[684c64bf57175cbeeba5e17267dc86db6547090e] configure.ac: Support --enable-shared=libobjc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [684c64b]
+---------------------------------------- Current commit hash: [684c64b] ----------------------------------------+
Building GCC for commit [684c64b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 684c64b configure.ac: Support --enable-shared=libobjc.
HEAD is now at 684c64b configure.ac: Support --enable-shared=libobjc.
Note: checking out '684c64b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 684c64b... configure.ac: Support --enable-shared=libobjc.
Deleted branch temp-test-branch (was 684c64b).
Fail to build gcc for commit [684c64b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6af8eb5714109ffd15a57023ae7e2679d567e792] Expanders cleanups after tree-ssa merge, part 1.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6af8eb5]
+---------------------------------------- Current commit hash: [6af8eb5] ----------------------------------------+
Building GCC for commit [6af8eb5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6af8eb5 Expanders cleanups after tree-ssa merge, part 1.
HEAD is now at 6af8eb5 Expanders cleanups after tree-ssa merge, part 1.
Note: checking out '6af8eb5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6af8eb5... Expanders cleanups after tree-ssa merge, part 1.
Deleted branch temp-test-branch (was 6af8eb5).
Fail to build gcc for commit [6af8eb5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[95c73b23dc40a6ba5a6f130d3f981aa36a7de1e5] function.c (walk_fixup_memory_subreg): New parameter 'var'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [95c73b2]
+---------------------------------------- Current commit hash: [95c73b2] ----------------------------------------+
Building GCC for commit [95c73b2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 95c73b2 function.c (walk_fixup_memory_subreg): New parameter 'var'.
HEAD is now at 95c73b2 function.c (walk_fixup_memory_subreg): New parameter 'var'.
Note: checking out '95c73b2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 95c73b2... function.c (walk_fixup_memory_subreg): New parameter 'var'.
Deleted branch temp-test-branch (was 95c73b2).
Fail to build gcc for commit [95c73b2], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[63110e4e74f1c2bec7469c131b097b4ab5bedf25] select_1.f90: Rename function to fix type error.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [63110e4]
+---------------------------------------- Current commit hash: [63110e4] ----------------------------------------+
Building GCC for commit [63110e4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 63110e4 select_1.f90: Rename function to fix type error.
HEAD is now at 63110e4 select_1.f90: Rename function to fix type error.
Note: checking out '63110e4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 63110e4... select_1.f90: Rename function to fix type error.
Deleted branch temp-test-branch (was 63110e4).
Fail to build gcc for commit [63110e4], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[12ba3f8f9a0118440b5f6d75a6fe15d05399442d] objc.exp (objc_target_compile): When running tests on Darwin (Mac OS X)...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [12ba3f8]
+---------------------------------------- Current commit hash: [12ba3f8] ----------------------------------------+
Building GCC for commit [12ba3f8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 12ba3f8 objc.exp (objc_target_compile): When running tests on Darwin (Mac OS X)...
HEAD is now at 12ba3f8 objc.exp (objc_target_compile): When running tests on Darwin (Mac OS X)...
Note: checking out '12ba3f8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 12ba3f8... objc.exp (objc_target_compile): When running tests on Darwin (Mac OS X)...
Deleted branch temp-test-branch (was 12ba3f8).
Fail to build gcc for commit [12ba3f8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b40410b9083d960fa5ca34def27dc1c2ee61c077] tree-alias-common.h (struct tree_alias_ops): Change ip and ip_partial to unsigned int.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b40410b]
+---------------------------------------- Current commit hash: [b40410b] ----------------------------------------+
Building GCC for commit [b40410b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b40410b tree-alias-common.h (struct tree_alias_ops): Change ip and ip_partial to unsigned int.
HEAD is now at b40410b tree-alias-common.h (struct tree_alias_ops): Change ip and ip_partial to unsigned int.
Note: checking out 'b40410b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b40410b... tree-alias-common.h (struct tree_alias_ops): Change ip and ip_partial to unsigned int.
Deleted branch temp-test-branch (was b40410b).
Fail to build gcc for commit [b40410b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6ce2bcb71c2f66918a8287090589a9d9ea45ed74] basic-block.c (tail_recursion_label_list): Don't declare.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ce2bcb]
+---------------------------------------- Current commit hash: [6ce2bcb] ----------------------------------------+
Building GCC for commit [6ce2bcb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ce2bcb basic-block.c (tail_recursion_label_list): Don't declare.
HEAD is now at 6ce2bcb basic-block.c (tail_recursion_label_list): Don't declare.
Note: checking out '6ce2bcb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ce2bcb... basic-block.c (tail_recursion_label_list): Don't declare.
Deleted branch temp-test-branch (was 6ce2bcb).
Fail to build gcc for commit [6ce2bcb], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[928da1904dd3dea53fa0ba5dfe554c452013cc04] * fr.po, tr.po: Update.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [928da19]
+---------------------------------------- Current commit hash: [928da19] ----------------------------------------+
Building GCC for commit [928da19]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 928da19 * fr.po, tr.po: Update.
HEAD is now at 928da19 * fr.po, tr.po: Update.
Note: checking out '928da19'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 928da19... * fr.po, tr.po: Update.
Deleted branch temp-test-branch (was 928da19).
Fail to build gcc for commit [928da19], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[041b94781658f0c4fdcff4880a2c1f937514b28f] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [041b947]
+---------------------------------------- Current commit hash: [041b947] ----------------------------------------+
Building GCC for commit [041b947]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 041b947 Daily bump.
HEAD is now at 041b947 Daily bump.
Note: checking out '041b947'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 041b947... Daily bump.
Deleted branch temp-test-branch (was 041b947).
Fail to build gcc for commit [041b947], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[fb0737c2f5ead1e96c0eb3f72305b0d509cb53f4] re PR other/16043 ([3.4 only] gcc version not reported with "enable-version-specific-runtime-libs" to gcc-testresults)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fb0737c]
+---------------------------------------- Current commit hash: [fb0737c] ----------------------------------------+
Building GCC for commit [fb0737c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fb0737c re PR other/16043 ([3.4 only] gcc version not reported with "enable-version-specific-runtime-libs" to gcc-testresults)
HEAD is now at fb0737c re PR other/16043 ([3.4 only] gcc version not reported with "enable-version-specific-runtime-libs" to gcc-testresults)
Note: checking out 'fb0737c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fb0737c... re PR other/16043 ([3.4 only] gcc version not reported with "enable-version-specific-runtime-libs" to gcc-testresults)
Deleted branch temp-test-branch (was fb0737c).
Fail to build gcc for commit [fb0737c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2e2052b19ad876dade65b7977f17708ffb057010] Re-apply hopefully fixed patch:
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2e2052b]
+---------------------------------------- Current commit hash: [2e2052b] ----------------------------------------+
Building GCC for commit [2e2052b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2e2052b Re-apply hopefully fixed patch:
HEAD is now at 2e2052b Re-apply hopefully fixed patch:
Note: checking out '2e2052b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2e2052b... Re-apply hopefully fixed patch:
Deleted branch temp-test-branch (was 2e2052b).
Fail to build gcc for commit [2e2052b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[fd743bc1097ad82cd5bccc9149ac0f63ce36a239] emit-rtl.c (unshare_all_rtl_1): New name of unshare_all_rtl.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fd743bc]
+---------------------------------------- Current commit hash: [fd743bc] ----------------------------------------+
Building GCC for commit [fd743bc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fd743bc emit-rtl.c (unshare_all_rtl_1): New name of unshare_all_rtl.
HEAD is now at fd743bc emit-rtl.c (unshare_all_rtl_1): New name of unshare_all_rtl.
Note: checking out 'fd743bc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fd743bc... emit-rtl.c (unshare_all_rtl_1): New name of unshare_all_rtl.
Deleted branch temp-test-branch (was fd743bc).
Fail to build gcc for commit [fd743bc], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[62f1d4705d0b042e13faad97ea12b665b4f3ad84] re PR fortran/13372 (ICE in trans-types.c (gfc_typenode_for_spec), see #13201)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [62f1d47]
+---------------------------------------- Current commit hash: [62f1d47] ----------------------------------------+
Building GCC for commit [62f1d47]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 62f1d47 re PR fortran/13372 (ICE in trans-types.c (gfc_typenode_for_spec), see #13201)
HEAD is now at 62f1d47 re PR fortran/13372 (ICE in trans-types.c (gfc_typenode_for_spec), see #13201)
Note: checking out '62f1d47'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 62f1d47... re PR fortran/13372 (ICE in trans-types.c (gfc_typenode_for_spec), see #13201)
Deleted branch temp-test-branch (was 62f1d47).
Fail to build gcc for commit [62f1d47], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[801e227002b90184b6880619b00eec78007f4a30] configure.in: Don't build Cygwin native newlib if winsup directory is missing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [801e227]
+---------------------------------------- Current commit hash: [801e227] ----------------------------------------+
Building GCC for commit [801e227]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 801e227 configure.in: Don't build Cygwin native newlib if winsup directory is missing.
HEAD is now at 801e227 configure.in: Don't build Cygwin native newlib if winsup directory is missing.
Note: checking out '801e227'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 801e227... configure.in: Don't build Cygwin native newlib if winsup directory is missing.
Deleted branch temp-test-branch (was 801e227).
Fail to build gcc for commit [801e227], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c6e8380069ff630939beec0b5872a37f5b710189] Makefile.am: Add makedepend.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c6e8380]
+---------------------------------------- Current commit hash: [c6e8380] ----------------------------------------+
Building GCC for commit [c6e8380]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c6e8380 Makefile.am: Add makedepend.
HEAD is now at c6e8380 Makefile.am: Add makedepend.
Note: checking out 'c6e8380'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c6e8380... Makefile.am: Add makedepend.
Deleted branch temp-test-branch (was c6e8380).
Fail to build gcc for commit [c6e8380], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[54b2f3104e7200589cf117686fb10ab5bb33f14e] * Makefile.in: Add .NOEXPORT.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [54b2f31]
+---------------------------------------- Current commit hash: [54b2f31] ----------------------------------------+
Building GCC for commit [54b2f31]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 54b2f31 * Makefile.in: Add .NOEXPORT.
HEAD is now at 54b2f31 * Makefile.in: Add .NOEXPORT.
Note: checking out '54b2f31'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 54b2f31... * Makefile.in: Add .NOEXPORT.
Deleted branch temp-test-branch (was 54b2f31).
Fail to build gcc for commit [54b2f31], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2d4886684f9e9de8a150faca0ae061d1e9ffedad] contrib.texi: Add entries for Stefan Olsson and Ola Ronnerup.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2d48866]
+---------------------------------------- Current commit hash: [2d48866] ----------------------------------------+
Building GCC for commit [2d48866]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2d48866 contrib.texi: Add entries for Stefan Olsson and Ola Ronnerup.
HEAD is now at 2d48866 contrib.texi: Add entries for Stefan Olsson and Ola Ronnerup.
Note: checking out '2d48866'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2d48866... contrib.texi: Add entries for Stefan Olsson and Ola Ronnerup.
Deleted branch temp-test-branch (was 2d48866).
Fail to build gcc for commit [2d48866], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e4efa9715632519e202f57250b3d8954b17ac9c9] * cfgcleanup.c (try_optimize_cfg): Do not merge across jumptables.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e4efa97]
+---------------------------------------- Current commit hash: [e4efa97] ----------------------------------------+
Building GCC for commit [e4efa97]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e4efa97 * cfgcleanup.c (try_optimize_cfg): Do not merge across jumptables.
HEAD is now at e4efa97 * cfgcleanup.c (try_optimize_cfg): Do not merge across jumptables.
Note: checking out 'e4efa97'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e4efa97... * cfgcleanup.c (try_optimize_cfg): Do not merge across jumptables.
Deleted branch temp-test-branch (was e4efa97).
Fail to build gcc for commit [e4efa97], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c1b69e3ca2ede08266a6dd101f2903b08db71eb6] re PR java/15769 (ICE: infinite recursion through gimplify_expr)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c1b69e3]
+---------------------------------------- Current commit hash: [c1b69e3] ----------------------------------------+
Building GCC for commit [c1b69e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c1b69e3 re PR java/15769 (ICE: infinite recursion through gimplify_expr)
HEAD is now at c1b69e3 re PR java/15769 (ICE: infinite recursion through gimplify_expr)
Note: checking out 'c1b69e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c1b69e3... re PR java/15769 (ICE: infinite recursion through gimplify_expr)
Deleted branch temp-test-branch (was c1b69e3).
Fail to build gcc for commit [c1b69e3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[81b4398d1e7f594c956213db39cf1b021561ef29] re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [81b4398]
+---------------------------------------- Current commit hash: [81b4398] ----------------------------------------+
Building GCC for commit [81b4398]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 81b4398 re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
HEAD is now at 81b4398 re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
Note: checking out '81b4398'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 81b4398... re PR c++/12883 (destructor of array object not called if no prior instantiation of the template has happened)
Deleted branch temp-test-branch (was 81b4398).
Fail to build gcc for commit [81b4398], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[67057c537b7f1f895ff87f8616e8a122f886f1bf] real.c (real_copysign): New function to implement libm's copysign.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67057c5]
+---------------------------------------- Current commit hash: [67057c5] ----------------------------------------+
Building GCC for commit [67057c5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67057c5 real.c (real_copysign): New function to implement libm's copysign.
HEAD is now at 67057c5 real.c (real_copysign): New function to implement libm's copysign.
Note: checking out '67057c5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67057c5... real.c (real_copysign): New function to implement libm's copysign.
Deleted branch temp-test-branch (was 67057c5).
Fail to build gcc for commit [67057c5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9fd8f60d1dd31235b31af53659807573b4b53c50] re PR c++/15214 (Warning non-virtual-dtor too strict)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9fd8f60]
+---------------------------------------- Current commit hash: [9fd8f60] ----------------------------------------+
Building GCC for commit [9fd8f60]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9fd8f60 re PR c++/15214 (Warning non-virtual-dtor too strict)
HEAD is now at 9fd8f60 re PR c++/15214 (Warning non-virtual-dtor too strict)
Note: checking out '9fd8f60'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9fd8f60... re PR c++/15214 (Warning non-virtual-dtor too strict)
Deleted branch temp-test-branch (was 9fd8f60).
Fail to build gcc for commit [9fd8f60], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b9c042e86f461de3118dd77c51b4224287435917] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9c042e]
+---------------------------------------- Current commit hash: [b9c042e] ----------------------------------------+
Building GCC for commit [b9c042e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9c042e Daily bump.
HEAD is now at b9c042e Daily bump.
Note: checking out 'b9c042e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9c042e... Daily bump.
Deleted branch temp-test-branch (was b9c042e).
Fail to build gcc for commit [b9c042e], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[5557d6723dd80ceb154d49b22869262ee64b1130] fix typo in last commit....
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5557d67]
+---------------------------------------- Current commit hash: [5557d67] ----------------------------------------+
Building GCC for commit [5557d67]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5557d67 fix typo in last commit....
HEAD is now at 5557d67 fix typo in last commit....
Note: checking out '5557d67'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5557d67... fix typo in last commit....
Deleted branch temp-test-branch (was 5557d67).
Fail to build gcc for commit [5557d67], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[eb3a47ba3a9bf9dafc2bb51144aff8fa1f80a721] uninit-H.c: Test for __PPC__ and __ppc__ for the powerpc case.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb3a47b]
+---------------------------------------- Current commit hash: [eb3a47b] ----------------------------------------+
Building GCC for commit [eb3a47b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb3a47b uninit-H.c: Test for __PPC__ and __ppc__ for the powerpc case.
HEAD is now at eb3a47b uninit-H.c: Test for __PPC__ and __ppc__ for the powerpc case.
Note: checking out 'eb3a47b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb3a47b... uninit-H.c: Test for __PPC__ and __ppc__ for the powerpc case.
Deleted branch temp-test-branch (was eb3a47b).
Fail to build gcc for commit [eb3a47b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e] re PR middle-end/15945 (Incorrect floating point optimization)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6355b2d]
+---------------------------------------- Current commit hash: [6355b2d] ----------------------------------------+
Building GCC for commit [6355b2d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6355b2d re PR middle-end/15945 (Incorrect floating point optimization)
HEAD is now at 6355b2d re PR middle-end/15945 (Incorrect floating point optimization)
Note: checking out '6355b2d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6355b2d... re PR middle-end/15945 (Incorrect floating point optimization)
Deleted branch temp-test-branch (was 6355b2d).
Fail to build gcc for commit [6355b2d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9b089e0545b2b8f6455c91584714e5ab918dfac6] re PR fortran/14066 (Infinite DO loops not recognized.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9b089e0]
+---------------------------------------- Current commit hash: [9b089e0] ----------------------------------------+
Building GCC for commit [9b089e0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9b089e0 re PR fortran/14066 (Infinite DO loops not recognized.)
HEAD is now at 9b089e0 re PR fortran/14066 (Infinite DO loops not recognized.)
Note: checking out '9b089e0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9b089e0... re PR fortran/14066 (Infinite DO loops not recognized.)
Deleted branch temp-test-branch (was 9b089e0).
Fail to build gcc for commit [9b089e0], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d5ad6febfab6a7d9d9e858b48420fb27d33bf65a] * gcc_update: Add libcpp.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d5ad6fe]
+---------------------------------------- Current commit hash: [d5ad6fe] ----------------------------------------+
Building GCC for commit [d5ad6fe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d5ad6fe * gcc_update: Add libcpp.
HEAD is now at d5ad6fe * gcc_update: Add libcpp.
Note: checking out 'd5ad6fe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d5ad6fe... * gcc_update: Add libcpp.
Deleted branch temp-test-branch (was d5ad6fe).
Fail to build gcc for commit [d5ad6fe], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[aa4a53af510109ace50301adba3ee39237056cb6] Update whitespace and comments
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aa4a53a]
+---------------------------------------- Current commit hash: [aa4a53a] ----------------------------------------+
Building GCC for commit [aa4a53a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aa4a53a Update whitespace and comments
HEAD is now at aa4a53a Update whitespace and comments
Note: checking out 'aa4a53a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aa4a53a... Update whitespace and comments
Deleted branch temp-test-branch (was aa4a53a).
Fail to build gcc for commit [aa4a53a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d22b7e1406dbb03a6d50d649030b70b6f42d1021] fold-const.c (fold): Make sure the type is of BOOLEAN_TYPE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d22b7e1]
+---------------------------------------- Current commit hash: [d22b7e1] ----------------------------------------+
Building GCC for commit [d22b7e1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d22b7e1 fold-const.c (fold): Make sure the type is of BOOLEAN_TYPE.
HEAD is now at d22b7e1 fold-const.c (fold): Make sure the type is of BOOLEAN_TYPE.
Note: checking out 'd22b7e1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d22b7e1... fold-const.c (fold): Make sure the type is of BOOLEAN_TYPE.
Deleted branch temp-test-branch (was d22b7e1).
Fail to build gcc for commit [d22b7e1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1de8a83646644d4486ddceea6a6c102133b8f1be] * decl.c (add_init_expr_to_sym): Check for variable size arrays.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1de8a83]
+---------------------------------------- Current commit hash: [1de8a83] ----------------------------------------+
Building GCC for commit [1de8a83]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1de8a83 * decl.c (add_init_expr_to_sym): Check for variable size arrays.
HEAD is now at 1de8a83 * decl.c (add_init_expr_to_sym): Check for variable size arrays.
Note: checking out '1de8a83'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1de8a83... * decl.c (add_init_expr_to_sym): Check for variable size arrays.
Deleted branch temp-test-branch (was 1de8a83).
Fail to build gcc for commit [1de8a83], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1999435c8a37723b3da50cdb9a1bb594d1cc280c] revert: combine.c (gen_binary): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1999435]
+---------------------------------------- Current commit hash: [1999435] ----------------------------------------+
Building GCC for commit [1999435]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1999435 revert: combine.c (gen_binary): Remove.
HEAD is now at 1999435 revert: combine.c (gen_binary): Remove.
Note: checking out '1999435'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1999435... revert: combine.c (gen_binary): Remove.
Deleted branch temp-test-branch (was 1999435).
Fail to build gcc for commit [1999435], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6d3e9d84546050e45a24a63b5bab723f513d75ce] * io/format.c (write_real): Don't include padding in format.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6d3e9d8]
+---------------------------------------- Current commit hash: [6d3e9d8] ----------------------------------------+
Building GCC for commit [6d3e9d8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6d3e9d8 * io/format.c (write_real): Don't include padding in format.
HEAD is now at 6d3e9d8 * io/format.c (write_real): Don't include padding in format.
Note: checking out '6d3e9d8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6d3e9d8... * io/format.c (write_real): Don't include padding in format.
Deleted branch temp-test-branch (was 6d3e9d8).
Fail to build gcc for commit [6d3e9d8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c5dc831c5ec6c740e03cdd4a7349de9964947666] PR fortran/15655Fixup ChangeLog entries from previous commit by Paul Brook
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c5dc831]
+---------------------------------------- Current commit hash: [c5dc831] ----------------------------------------+
Building GCC for commit [c5dc831]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c5dc831 PR fortran/15655Fixup ChangeLog entries from previous commit by Paul Brook
HEAD is now at c5dc831 PR fortran/15655Fixup ChangeLog entries from previous commit by Paul Brook
Note: checking out 'c5dc831'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c5dc831... PR fortran/15655Fixup ChangeLog entries from previous commit by Paul Brook
Deleted branch temp-test-branch (was c5dc831).
Fail to build gcc for commit [c5dc831], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b2342b5484b0e968f4a10f58025935df13b23941] boost_concept_check.h: Fix old attribute syntax.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b2342b5]
+---------------------------------------- Current commit hash: [b2342b5] ----------------------------------------+
Building GCC for commit [b2342b5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b2342b5 boost_concept_check.h: Fix old attribute syntax.
HEAD is now at b2342b5 boost_concept_check.h: Fix old attribute syntax.
Note: checking out 'b2342b5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b2342b5... boost_concept_check.h: Fix old attribute syntax.
Deleted branch temp-test-branch (was b2342b5).
Fail to build gcc for commit [b2342b5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ef2c2c48492148136da005ca1cd82b3a04a32ec9] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ef2c2c4]
+---------------------------------------- Current commit hash: [ef2c2c4] ----------------------------------------+
Building GCC for commit [ef2c2c4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ef2c2c4 Daily bump.
HEAD is now at ef2c2c4 Daily bump.
Note: checking out 'ef2c2c4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ef2c2c4... Daily bump.
Deleted branch temp-test-branch (was ef2c2c4).
Fail to build gcc for commit [ef2c2c4], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[81f4be3ce1fd9f08d811cf61413e374e0dc43166] re PR libfortran/15235 (libgfortran doesn't build on Solaris 10)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [81f4be3]
+---------------------------------------- Current commit hash: [81f4be3] ----------------------------------------+
Building GCC for commit [81f4be3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 81f4be3 re PR libfortran/15235 (libgfortran doesn't build on Solaris 10)
HEAD is now at 81f4be3 re PR libfortran/15235 (libgfortran doesn't build on Solaris 10)
Note: checking out '81f4be3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 81f4be3... re PR libfortran/15235 (libgfortran doesn't build on Solaris 10)
Deleted branch temp-test-branch (was 81f4be3).
Fail to build gcc for commit [81f4be3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ba18e4dbfc7e018c9b313cfc3fea93592880bc41] re PR c++/15862 ('enum yn' fails)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ba18e4d]
+---------------------------------------- Current commit hash: [ba18e4d] ----------------------------------------+
Building GCC for commit [ba18e4d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ba18e4d re PR c++/15862 ('enum yn' fails)
HEAD is now at ba18e4d re PR c++/15862 ('enum yn' fails)
Note: checking out 'ba18e4d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ba18e4d... re PR c++/15862 ('enum yn' fails)
Deleted branch temp-test-branch (was ba18e4d).
Fail to build gcc for commit [ba18e4d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[f6144c34c82da903797566d44901dad231a7e4a9] * tree-ssa.c (ssa_redirect_edge): Correct leading comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f6144c3]
+---------------------------------------- Current commit hash: [f6144c3] ----------------------------------------+
Building GCC for commit [f6144c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f6144c3 * tree-ssa.c (ssa_redirect_edge): Correct leading comment.
HEAD is now at f6144c3 * tree-ssa.c (ssa_redirect_edge): Correct leading comment.
Note: checking out 'f6144c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f6144c3... * tree-ssa.c (ssa_redirect_edge): Correct leading comment.
Deleted branch temp-test-branch (was f6144c3).
Fail to build gcc for commit [f6144c3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[3100d647250b4209a601763e7887936d25899f3f] fold-const.c (fold_inf_compare): Avoid creating non-gimple code when we are in gimple form.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3100d64]
+---------------------------------------- Current commit hash: [3100d64] ----------------------------------------+
Building GCC for commit [3100d64]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3100d64 fold-const.c (fold_inf_compare): Avoid creating non-gimple code when we are in gimple form.
HEAD is now at 3100d64 fold-const.c (fold_inf_compare): Avoid creating non-gimple code when we are in gimple form.
Note: checking out '3100d64'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3100d64... fold-const.c (fold_inf_compare): Avoid creating non-gimple code when we are in gimple form.
Deleted branch temp-test-branch (was 3100d64).
Fail to build gcc for commit [3100d64], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[8bc527afe92d96fd31972cfa4362cc1023e523e9] i386.c: Include insn-codes.h
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8bc527a]
+---------------------------------------- Current commit hash: [8bc527a] ----------------------------------------+
Building GCC for commit [8bc527a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8bc527a i386.c: Include insn-codes.h
HEAD is now at 8bc527a i386.c: Include insn-codes.h
Note: checking out '8bc527a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8bc527a... i386.c: Include insn-codes.h
Deleted branch temp-test-branch (was 8bc527a).
Fail to build gcc for commit [8bc527a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b9696fd41dee5e9eb711b989648f38432f6e90b0] cp-tree.h: Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9696fd]
+---------------------------------------- Current commit hash: [b9696fd] ----------------------------------------+
Building GCC for commit [b9696fd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9696fd cp-tree.h: Fix typo.
HEAD is now at b9696fd cp-tree.h: Fix typo.
Note: checking out 'b9696fd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9696fd... cp-tree.h: Fix typo.
Deleted branch temp-test-branch (was b9696fd).
Fail to build gcc for commit [b9696fd], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[722962a6553fdcb5349130a047c70c7d4070b46d] gcc_release (build_sources): Generate the NEWS file in toplevel.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [722962a]
+---------------------------------------- Current commit hash: [722962a] ----------------------------------------+
Building GCC for commit [722962a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 722962a gcc_release (build_sources): Generate the NEWS file in toplevel.
HEAD is now at 722962a gcc_release (build_sources): Generate the NEWS file in toplevel.
Note: checking out '722962a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 722962a... gcc_release (build_sources): Generate the NEWS file in toplevel.
Deleted branch temp-test-branch (was 722962a).
Fail to build gcc for commit [722962a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[dbb4e0c6aa853502b33f6f2fc82f908c382fee98] Oops.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dbb4e0c]
+---------------------------------------- Current commit hash: [dbb4e0c] ----------------------------------------+
Building GCC for commit [dbb4e0c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dbb4e0c Oops.
HEAD is now at dbb4e0c Oops.
Note: checking out 'dbb4e0c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dbb4e0c... Oops.
Deleted branch temp-test-branch (was dbb4e0c).
Fail to build gcc for commit [dbb4e0c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0bc0f41de71d12f9209664eb35dfba0048d4998c] fix-header.c (read_scan_file): Update for add_path change.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0bc0f41]
+---------------------------------------- Current commit hash: [0bc0f41] ----------------------------------------+
Building GCC for commit [0bc0f41]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0bc0f41 fix-header.c (read_scan_file): Update for add_path change.
HEAD is now at 0bc0f41 fix-header.c (read_scan_file): Update for add_path change.
Note: checking out '0bc0f41'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0bc0f41... fix-header.c (read_scan_file): Update for add_path change.
Deleted branch temp-test-branch (was 0bc0f41).
Fail to build gcc for commit [0bc0f41], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e66e7856e8c88873ba3a5b37f8afcd003e0f8df9] re PR middle-end/15228 (useless copies of floating point operands)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e66e785]
+---------------------------------------- Current commit hash: [e66e785] ----------------------------------------+
Building GCC for commit [e66e785]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e66e785 re PR middle-end/15228 (useless copies of floating point operands)
HEAD is now at e66e785 re PR middle-end/15228 (useless copies of floating point operands)
Note: checking out 'e66e785'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e66e785... re PR middle-end/15228 (useless copies of floating point operands)
Deleted branch temp-test-branch (was e66e785).
Fail to build gcc for commit [e66e785], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7] re PR c++/15285 (instantiate_type ICE when forming pointer to template function)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0deb916]
+---------------------------------------- Current commit hash: [0deb916] ----------------------------------------+
Building GCC for commit [0deb916]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0deb916 re PR c++/15285 (instantiate_type ICE when forming pointer to template function)
HEAD is now at 0deb916 re PR c++/15285 (instantiate_type ICE when forming pointer to template function)
Note: checking out '0deb916'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0deb916... re PR c++/15285 (instantiate_type ICE when forming pointer to template function)
Deleted branch temp-test-branch (was 0deb916).
Fail to build gcc for commit [0deb916], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[14bbffa1d211ad505bc165f762027596b87511f1] re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [14bbffa]
+---------------------------------------- Current commit hash: [14bbffa] ----------------------------------------+
Building GCC for commit [14bbffa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 14bbffa re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
HEAD is now at 14bbffa re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
Note: checking out '14bbffa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 14bbffa... re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
Deleted branch temp-test-branch (was 14bbffa).
Fail to build gcc for commit [14bbffa], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[8eeea0c1c72e64f95114c53e9a41dabc98c8978b] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8eeea0c]
+---------------------------------------- Current commit hash: [8eeea0c] ----------------------------------------+
Building GCC for commit [8eeea0c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8eeea0c Daily bump.
HEAD is now at 8eeea0c Daily bump.
Note: checking out '8eeea0c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8eeea0c... Daily bump.
Deleted branch temp-test-branch (was 8eeea0c).
Fail to build gcc for commit [8eeea0c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[bda4d0639b5f9ccc4beda89b3bb82415688ac3ac] re PR fortran/15478 (gfortran manual problems)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bda4d06]
+---------------------------------------- Current commit hash: [bda4d06] ----------------------------------------+
Building GCC for commit [bda4d06]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bda4d06 re PR fortran/15478 (gfortran manual problems)
HEAD is now at bda4d06 re PR fortran/15478 (gfortran manual problems)
Note: checking out 'bda4d06'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bda4d06... re PR fortran/15478 (gfortran manual problems)
Deleted branch temp-test-branch (was bda4d06).
Fail to build gcc for commit [bda4d06], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d7621d3c741403a604eab08b66658d71f3452e8d] re PR tree-optimization/15991 (phi nodes with identical arguments still remain at t50.tailc)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d7621d3]
+---------------------------------------- Current commit hash: [d7621d3] ----------------------------------------+
Building GCC for commit [d7621d3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d7621d3 re PR tree-optimization/15991 (phi nodes with identical arguments still remain at t50.tailc)
HEAD is now at d7621d3 re PR tree-optimization/15991 (phi nodes with identical arguments still remain at t50.tailc)
Note: checking out 'd7621d3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d7621d3... re PR tree-optimization/15991 (phi nodes with identical arguments still remain at t50.tailc)
Deleted branch temp-test-branch (was d7621d3).
Fail to build gcc for commit [d7621d3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ad94c84603832382465e4e1ed0e10b5595a30a66] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ad94c84]
+---------------------------------------- Current commit hash: [ad94c84] ----------------------------------------+
Building GCC for commit [ad94c84]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ad94c84 Daily bump.
HEAD is now at ad94c84 Daily bump.
Note: checking out 'ad94c84'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ad94c84... Daily bump.
Deleted branch temp-test-branch (was ad94c84).
Fail to build gcc for commit [ad94c84], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b31ad637454889b80006372a4074cd0c2077f884] arm.c (thumb_exit, [...]): Remove pointless #ifdef.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b31ad63]
+---------------------------------------- Current commit hash: [b31ad63] ----------------------------------------+
Building GCC for commit [b31ad63]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b31ad63 arm.c (thumb_exit, [...]): Remove pointless #ifdef.
HEAD is now at b31ad63 arm.c (thumb_exit, [...]): Remove pointless #ifdef.
Note: checking out 'b31ad63'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b31ad63... arm.c (thumb_exit, [...]): Remove pointless #ifdef.
Deleted branch temp-test-branch (was b31ad63).
Fail to build gcc for commit [b31ad63], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[03defda9a0bc5a891415a6d52c7ccfc7b15eff6c] altivec-1.c: XFAIL powerpc-ibm-aix*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [03defda9]
+---------------------------------------- Current commit hash: [03defda9] ----------------------------------------+
Building GCC for commit [03defda9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 03defda9 altivec-1.c: XFAIL powerpc-ibm-aix*.
HEAD is now at 03defda9 altivec-1.c: XFAIL powerpc-ibm-aix*.
Note: checking out '03defda9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 03defda9... altivec-1.c: XFAIL powerpc-ibm-aix*.
Deleted branch temp-test-branch (was 03defda9).
Fail to build gcc for commit [03defda9], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[61bea3b0e5f5f7172015d54056e25c88255c4a3a] rs6000.c (spe_expand_stv_builtin): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [61bea3b]
+---------------------------------------- Current commit hash: [61bea3b] ----------------------------------------+
Building GCC for commit [61bea3b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 61bea3b rs6000.c (spe_expand_stv_builtin): New.
HEAD is now at 61bea3b rs6000.c (spe_expand_stv_builtin): New.
Note: checking out '61bea3b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 61bea3b... rs6000.c (spe_expand_stv_builtin): New.
Deleted branch temp-test-branch (was 61bea3b).
Fail to build gcc for commit [61bea3b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d5a10cf069a2f84e5b24a22e1eecc91918ea8875] re PR c++/15337 (sizeof on incomplete type diagnostic)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d5a10cf]
+---------------------------------------- Current commit hash: [d5a10cf] ----------------------------------------+
Building GCC for commit [d5a10cf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d5a10cf re PR c++/15337 (sizeof on incomplete type diagnostic)
HEAD is now at d5a10cf re PR c++/15337 (sizeof on incomplete type diagnostic)
Note: checking out 'd5a10cf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d5a10cf... re PR c++/15337 (sizeof on incomplete type diagnostic)
Deleted branch temp-test-branch (was d5a10cf).
Fail to build gcc for commit [d5a10cf], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b9f065bedac5d0493ca2e8a24d081a6e594cb497] SimpleTimeZone.java: Reverting my last change until I can fix it properly.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9f065b]
+---------------------------------------- Current commit hash: [b9f065b] ----------------------------------------+
Building GCC for commit [b9f065b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9f065b SimpleTimeZone.java: Reverting my last change until I can fix it properly.
HEAD is now at b9f065b SimpleTimeZone.java: Reverting my last change until I can fix it properly.
Note: checking out 'b9f065b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9f065b... SimpleTimeZone.java: Reverting my last change until I can fix it properly.
Deleted branch temp-test-branch (was b9f065b).
Fail to build gcc for commit [b9f065b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[014251eae30e30a6cc960f41c939d24ffed00066] update_web_docs: Fix generation of Ada docs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [014251e]
+---------------------------------------- Current commit hash: [014251e] ----------------------------------------+
Building GCC for commit [014251e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 014251e update_web_docs: Fix generation of Ada docs.
HEAD is now at 014251e update_web_docs: Fix generation of Ada docs.
Note: checking out '014251e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 014251e... update_web_docs: Fix generation of Ada docs.
Deleted branch temp-test-branch (was 014251e).
Fail to build gcc for commit [014251e], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[09b01df889135a0ba5a2dadfae952c8daaaeef8a] gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [09b01df]
+---------------------------------------- Current commit hash: [09b01df] ----------------------------------------+
Building GCC for commit [09b01df]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 09b01df gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
HEAD is now at 09b01df gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
Note: checking out '09b01df'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 09b01df... gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
Deleted branch temp-test-branch (was 09b01df).
Fail to build gcc for commit [09b01df], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04] Andrew Vaught <andyv@firstinter.net>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0ff0dfb]
+---------------------------------------- Current commit hash: [0ff0dfb] ----------------------------------------+
Building GCC for commit [0ff0dfb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0ff0dfb Andrew Vaught <andyv@firstinter.net>
HEAD is now at 0ff0dfb Andrew Vaught <andyv@firstinter.net>
Note: checking out '0ff0dfb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0ff0dfb... Andrew Vaught <andyv@firstinter.net>
Deleted branch temp-test-branch (was 0ff0dfb).
Fail to build gcc for commit [0ff0dfb], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c1cca8d4eb0613a59efae32be160a5d907a9f757] re PR c++/15083 (spurious "statement has no effect" warning)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c1cca8d]
+---------------------------------------- Current commit hash: [c1cca8d] ----------------------------------------+
Building GCC for commit [c1cca8d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c1cca8d re PR c++/15083 (spurious "statement has no effect" warning)
HEAD is now at c1cca8d re PR c++/15083 (spurious "statement has no effect" warning)
Note: checking out 'c1cca8d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c1cca8d... re PR c++/15083 (spurious "statement has no effect" warning)
Deleted branch temp-test-branch (was c1cca8d).
Fail to build gcc for commit [c1cca8d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[919fb66ee1fe24d15725ee6bc780be8267730b60] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [919fb66]
+---------------------------------------- Current commit hash: [919fb66] ----------------------------------------+
Building GCC for commit [919fb66]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 919fb66 Daily bump.
HEAD is now at 919fb66 Daily bump.
Note: checking out '919fb66'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 919fb66... Daily bump.
Deleted branch temp-test-branch (was 919fb66).
Fail to build gcc for commit [919fb66], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e73c80ae862805f76cb4c45de0b1109f5d3e14d5] * simplify.c (gfc_simplify_log): Remove useless line of code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e73c80ae]
+---------------------------------------- Current commit hash: [e73c80ae] ----------------------------------------+
Building GCC for commit [e73c80ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e73c80ae * simplify.c (gfc_simplify_log): Remove useless line of code.
HEAD is now at e73c80ae * simplify.c (gfc_simplify_log): Remove useless line of code.
Note: checking out 'e73c80ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e73c80ae... * simplify.c (gfc_simplify_log): Remove useless line of code.
Deleted branch temp-test-branch (was e73c80ae).
Fail to build gcc for commit [e73c80ae], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6e539e23964d08d584a9c16050949424d44a3601] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6e539e2]
+---------------------------------------- Current commit hash: [6e539e2] ----------------------------------------+
Building GCC for commit [6e539e2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6e539e2 [multiple changes]
HEAD is now at 6e539e2 [multiple changes]
Note: checking out '6e539e2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6e539e2... [multiple changes]
Deleted branch temp-test-branch (was 6e539e2).
Fail to build gcc for commit [6e539e2], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[5f251c2603135f0565ac08898410d795dff8e8d0] iresolve.c (gfc_resolve_random_number): Clean up conditional.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5f251c2]
+---------------------------------------- Current commit hash: [5f251c2] ----------------------------------------+
Building GCC for commit [5f251c2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5f251c2 iresolve.c (gfc_resolve_random_number): Clean up conditional.
HEAD is now at 5f251c2 iresolve.c (gfc_resolve_random_number): Clean up conditional.
Note: checking out '5f251c2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5f251c2... iresolve.c (gfc_resolve_random_number): Clean up conditional.
Deleted branch temp-test-branch (was 5f251c2).
Fail to build gcc for commit [5f251c2], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[506e2710352a43151c4d5df8673606a9bf395885] c-decl.c (c_in_iteration_stmt, [...]): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [506e271]
+---------------------------------------- Current commit hash: [506e271] ----------------------------------------+
Building GCC for commit [506e271]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 506e271 c-decl.c (c_in_iteration_stmt, [...]): Remove.
HEAD is now at 506e271 c-decl.c (c_in_iteration_stmt, [...]): Remove.
Note: checking out '506e271'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 506e271... c-decl.c (c_in_iteration_stmt, [...]): Remove.
Deleted branch temp-test-branch (was 506e271).
Fail to build gcc for commit [506e271], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d29647a46cd2396c11366309a3e3c19b85f3d499] decl.c (grokdeclarator): Do not depend on C99's _Bool's behavior.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d29647a]
+---------------------------------------- Current commit hash: [d29647a] ----------------------------------------+
Building GCC for commit [d29647a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d29647a decl.c (grokdeclarator): Do not depend on C99's _Bool's behavior.
HEAD is now at d29647a decl.c (grokdeclarator): Do not depend on C99's _Bool's behavior.
Note: checking out 'd29647a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d29647a... decl.c (grokdeclarator): Do not depend on C99's _Bool's behavior.
Deleted branch temp-test-branch (was d29647a).
Fail to build gcc for commit [d29647a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[061cae1fa91e579ab981213f4c46de15dd3cdcbb] reformat, remove '^M's
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [061cae1]
+---------------------------------------- Current commit hash: [061cae1] ----------------------------------------+
Building GCC for commit [061cae1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 061cae1 reformat, remove '^M's
HEAD is now at 061cae1 reformat, remove '^M's
Note: checking out '061cae1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 061cae1... reformat, remove '^M's
Deleted branch temp-test-branch (was 061cae1).
Fail to build gcc for commit [061cae1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b3b65c9af5c93c319f48be084a538f5a374e12e7] Fix changelog typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b3b65c9]
+---------------------------------------- Current commit hash: [b3b65c9] ----------------------------------------+
Building GCC for commit [b3b65c9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b3b65c9 Fix changelog typo.
HEAD is now at b3b65c9 Fix changelog typo.
Note: checking out 'b3b65c9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b3b65c9... Fix changelog typo.
Deleted branch temp-test-branch (was b3b65c9).
Fail to build gcc for commit [b3b65c9], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b5e792e209cfee6fe3437eef9470e7765acda53f] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b5e792e]
+---------------------------------------- Current commit hash: [b5e792e] ----------------------------------------+
Building GCC for commit [b5e792e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b5e792e [multiple changes]
HEAD is now at b5e792e [multiple changes]
Note: checking out 'b5e792e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b5e792e... [multiple changes]
Deleted branch temp-test-branch (was b5e792e).
Fail to build gcc for commit [b5e792e], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[133f7a77c26701d555ecbd6ae7a894f8429c7cc1] gengtype-lex.l: Catch stray GTY markers in the files gengtype looks at.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [133f7a7]
+---------------------------------------- Current commit hash: [133f7a7] ----------------------------------------+
Building GCC for commit [133f7a7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 133f7a7 gengtype-lex.l: Catch stray GTY markers in the files gengtype looks at.
HEAD is now at 133f7a7 gengtype-lex.l: Catch stray GTY markers in the files gengtype looks at.
Note: checking out '133f7a7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 133f7a7... gengtype-lex.l: Catch stray GTY markers in the files gengtype looks at.
Deleted branch temp-test-branch (was 133f7a7).
Fail to build gcc for commit [133f7a7], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[dd7473111a63cdeb442d1b74535405739bf7e866] toplev.h (flag_delete_null_pointer_checks): Move from here to...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dd74731]
+---------------------------------------- Current commit hash: [dd74731] ----------------------------------------+
Building GCC for commit [dd74731]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dd74731 toplev.h (flag_delete_null_pointer_checks): Move from here to...
HEAD is now at dd74731 toplev.h (flag_delete_null_pointer_checks): Move from here to...
Note: checking out 'dd74731'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dd74731... toplev.h (flag_delete_null_pointer_checks): Move from here to...
Deleted branch temp-test-branch (was dd74731).
Fail to build gcc for commit [dd74731], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[76f824a4a0a6427b8c29ce6253b2b79c4ad3e519] config.h.in: Regenerated.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [76f824a]
+---------------------------------------- Current commit hash: [76f824a] ----------------------------------------+
Building GCC for commit [76f824a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 76f824a config.h.in: Regenerated.
HEAD is now at 76f824a config.h.in: Regenerated.
Note: checking out '76f824a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 76f824a... config.h.in: Regenerated.
Deleted branch temp-test-branch (was 76f824a).
Fail to build gcc for commit [76f824a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[56c5197bc8b2b3d331dea67fc8d7d313d1730ee6] re PR java/16113 (ICE: Segmentation fault when compiling bytecode with debugging info and try/catch)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [56c5197]
+---------------------------------------- Current commit hash: [56c5197] ----------------------------------------+
Building GCC for commit [56c5197]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 56c5197 re PR java/16113 (ICE: Segmentation fault when compiling bytecode with debugging info and try/catch)
HEAD is now at 56c5197 re PR java/16113 (ICE: Segmentation fault when compiling bytecode with debugging info and try/catch)
Note: checking out '56c5197'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 56c5197... re PR java/16113 (ICE: Segmentation fault when compiling bytecode with debugging info and try/catch)
Deleted branch temp-test-branch (was 56c5197).
Fail to build gcc for commit [56c5197], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2cf224515418db35a329eeb793b48d1a9a917d8c] ChangeLog: Merge text from include/ChangeLog.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2cf2245]
+---------------------------------------- Current commit hash: [2cf2245] ----------------------------------------+
Building GCC for commit [2cf2245]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2cf2245 ChangeLog: Merge text from include/ChangeLog.
HEAD is now at 2cf2245 ChangeLog: Merge text from include/ChangeLog.
Note: checking out '2cf2245'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2cf2245... ChangeLog: Merge text from include/ChangeLog.
Deleted branch temp-test-branch (was 2cf2245).
Fail to build gcc for commit [2cf2245], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[88c499cce7487e1d4b40e8c7d568db22ba59d90e] linker-map.gnu: Use wildcards for __basic_file::sys_open(FILE*, _Ios_Openmode).
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [88c499c]
+---------------------------------------- Current commit hash: [88c499c] ----------------------------------------+
Building GCC for commit [88c499c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 88c499c linker-map.gnu: Use wildcards for __basic_file::sys_open(FILE*, _Ios_Openmode).
HEAD is now at 88c499c linker-map.gnu: Use wildcards for __basic_file::sys_open(FILE*, _Ios_Openmode).
Note: checking out '88c499c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 88c499c... linker-map.gnu: Use wildcards for __basic_file::sys_open(FILE*, _Ios_Openmode).
Deleted branch temp-test-branch (was 88c499c).
Fail to build gcc for commit [88c499c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2fa548415aa2a47d71a01155e6c1cd9dac1f5b36] re PR fortran/15557 (Not Implemented: Substring reference in DATA statement)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2fa5484]
+---------------------------------------- Current commit hash: [2fa5484] ----------------------------------------+
Building GCC for commit [2fa5484]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2fa5484 re PR fortran/15557 (Not Implemented: Substring reference in DATA statement)
HEAD is now at 2fa5484 re PR fortran/15557 (Not Implemented: Substring reference in DATA statement)
Note: checking out '2fa5484'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2fa5484... re PR fortran/15557 (Not Implemented: Substring reference in DATA statement)
Deleted branch temp-test-branch (was 2fa5484).
Fail to build gcc for commit [2fa5484], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[66fda8b2e69be9d25c621a0ca802434dd3f1f9c2] re PR libstdc++/15123 (libstdc++-doc: Allocators.3 manpage is empty)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [66fda8b]
+---------------------------------------- Current commit hash: [66fda8b] ----------------------------------------+
Building GCC for commit [66fda8b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 66fda8b re PR libstdc++/15123 (libstdc++-doc: Allocators.3 manpage is empty)
HEAD is now at 66fda8b re PR libstdc++/15123 (libstdc++-doc: Allocators.3 manpage is empty)
Note: checking out '66fda8b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 66fda8b... re PR libstdc++/15123 (libstdc++-doc: Allocators.3 manpage is empty)
Deleted branch temp-test-branch (was 66fda8b).
Fail to build gcc for commit [66fda8b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[23a60a0436f48f1de4e5bf124f29f0e4a32e7d4e] target.h (struct gcc_target): Change gimplify_va_arg_expr hook signature.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [23a60a0]
+---------------------------------------- Current commit hash: [23a60a0] ----------------------------------------+
Building GCC for commit [23a60a0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 23a60a0 target.h (struct gcc_target): Change gimplify_va_arg_expr hook signature.
HEAD is now at 23a60a0 target.h (struct gcc_target): Change gimplify_va_arg_expr hook signature.
Note: checking out '23a60a0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 23a60a0... target.h (struct gcc_target): Change gimplify_va_arg_expr hook signature.
Deleted branch temp-test-branch (was 23a60a0).
Fail to build gcc for commit [23a60a0], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[32da620821cb3008eab38080a9292599f1ee3d58] istream.tcc (ignore): Remove redundant line.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [32da620]
+---------------------------------------- Current commit hash: [32da620] ----------------------------------------+
Building GCC for commit [32da620]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 32da620 istream.tcc (ignore): Remove redundant line.
HEAD is now at 32da620 istream.tcc (ignore): Remove redundant line.
Note: checking out '32da620'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 32da620... istream.tcc (ignore): Remove redundant line.
Deleted branch temp-test-branch (was 32da620).
Fail to build gcc for commit [32da620], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1341376000609bcecf58fd137367f615471311d1] * trans-array.c: Fix spelling in comments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1341376]
+---------------------------------------- Current commit hash: [1341376] ----------------------------------------+
Building GCC for commit [1341376]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1341376 * trans-array.c: Fix spelling in comments.
HEAD is now at 1341376 * trans-array.c: Fix spelling in comments.
Note: checking out '1341376'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1341376... * trans-array.c: Fix spelling in comments.
Deleted branch temp-test-branch (was 1341376).
Fail to build gcc for commit [1341376], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[bb60c95face9e13d4d62dc028bd20e073b4babcf] crash3.C: Use __SIZE_TYPE__ instead of setting the type of size_t by hand.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bb60c95]
+---------------------------------------- Current commit hash: [bb60c95] ----------------------------------------+
Building GCC for commit [bb60c95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bb60c95 crash3.C: Use __SIZE_TYPE__ instead of setting the type of size_t by hand.
HEAD is now at bb60c95 crash3.C: Use __SIZE_TYPE__ instead of setting the type of size_t by hand.
Note: checking out 'bb60c95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bb60c95... crash3.C: Use __SIZE_TYPE__ instead of setting the type of size_t by hand.
Deleted branch temp-test-branch (was bb60c95).
Fail to build gcc for commit [bb60c95], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c759d454325f974380284ac54d342705e95e70d2] mips.c (struct irix_section_align_entry): Fix GTY marker.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c759d45]
+---------------------------------------- Current commit hash: [c759d45] ----------------------------------------+
Building GCC for commit [c759d45]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c759d45 mips.c (struct irix_section_align_entry): Fix GTY marker.
HEAD is now at c759d45 mips.c (struct irix_section_align_entry): Fix GTY marker.
Note: checking out 'c759d45'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c759d45... mips.c (struct irix_section_align_entry): Fix GTY marker.
Deleted branch temp-test-branch (was c759d45).
Fail to build gcc for commit [c759d45], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[3b1cce6ac1ed8fe740b0b1730bb6bbb63304f1e3] * config/xtensa/xtensa.c 	(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define. 	* xtensa.md: Replace the old pipeline description with a DFA model.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3b1cce6]
+---------------------------------------- Current commit hash: [3b1cce6] ----------------------------------------+
Building GCC for commit [3b1cce6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3b1cce6 * config/xtensa/xtensa.c 	(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define. 	* xtensa.md: Replace the old pipeline description with a DFA model.
HEAD is now at 3b1cce6 * config/xtensa/xtensa.c
Note: checking out '3b1cce6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3b1cce6... * config/xtensa/xtensa.c 	(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define. 	* xtensa.md: Replace the old pipeline description with a DFA model.
Deleted branch temp-test-branch (was 3b1cce6).
Fail to build gcc for commit [3b1cce6], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[28af2467e40311bbddd132788d0dcd7fe02f72d4] re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [28af246]
+---------------------------------------- Current commit hash: [28af246] ----------------------------------------+
Building GCC for commit [28af246]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 28af246 re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
HEAD is now at 28af246 re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
Note: checking out '28af246'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 28af246... re PR target/15822 (Several alpha testsuite regressions: gcc.c-torture/execute/ieee/fp-cmp-[458].c)
Deleted branch temp-test-branch (was 28af246).
Fail to build gcc for commit [28af246], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[4f4e53dd8517c0b2cbe36f0cf866f9f5ebe294e9] Makefile.def (host_modules): add libcpp.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4f4e53dd]
+---------------------------------------- Current commit hash: [4f4e53dd] ----------------------------------------+
Building GCC for commit [4f4e53dd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4f4e53dd Makefile.def (host_modules): add libcpp.
HEAD is now at 4f4e53dd Makefile.def (host_modules): add libcpp.
Note: checking out '4f4e53dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4f4e53dd... Makefile.def (host_modules): add libcpp.
Deleted branch temp-test-branch (was 4f4e53dd).
Fail to build gcc for commit [4f4e53dd], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0ca8e815a54c100982398145f32843b490f74589] gcc_release (build_sources): Move the libcpp gmo files to the source directory.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0ca8e81]
+---------------------------------------- Current commit hash: [0ca8e81] ----------------------------------------+
Building GCC for commit [0ca8e81]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0ca8e81 gcc_release (build_sources): Move the libcpp gmo files to the source directory.
HEAD is now at 0ca8e81 gcc_release (build_sources): Move the libcpp gmo files to the source directory.
Note: checking out '0ca8e81'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0ca8e81... gcc_release (build_sources): Move the libcpp gmo files to the source directory.
Deleted branch temp-test-branch (was 0ca8e81).
Fail to build gcc for commit [0ca8e81], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d397e8c6729cde9044c1ee42d28f2d1e98204cfc] New files for implementing sms in gcc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d397e8c]
+---------------------------------------- Current commit hash: [d397e8c] ----------------------------------------+
Building GCC for commit [d397e8c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d397e8c New files for implementing sms in gcc.
HEAD is now at d397e8c New files for implementing sms in gcc.
Note: checking out 'd397e8c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d397e8c... New files for implementing sms in gcc.
Deleted branch temp-test-branch (was d397e8c).
Fail to build gcc for commit [d397e8c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2ddbba8007ac79d2f61fb8c02dd1a04d3c14d098] cgraphunit.c (cgraph_decide_inlining): Adjust dump lines in always_inline pass.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2ddbba8]
+---------------------------------------- Current commit hash: [2ddbba8] ----------------------------------------+
Building GCC for commit [2ddbba8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2ddbba8 cgraphunit.c (cgraph_decide_inlining): Adjust dump lines in always_inline pass.
HEAD is now at 2ddbba8 cgraphunit.c (cgraph_decide_inlining): Adjust dump lines in always_inline pass.
Note: checking out '2ddbba8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2ddbba8... cgraphunit.c (cgraph_decide_inlining): Adjust dump lines in always_inline pass.
Deleted branch temp-test-branch (was 2ddbba8).
Fail to build gcc for commit [2ddbba8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[a7d840c7b53f775fda89ded048a2d8a7423dfcfa] re PR target/13292 (-msoft-float seems to corrupt builtin defines)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a7d840c]
+---------------------------------------- Current commit hash: [a7d840c] ----------------------------------------+
Building GCC for commit [a7d840c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a7d840c re PR target/13292 (-msoft-float seems to corrupt builtin defines)
HEAD is now at a7d840c re PR target/13292 (-msoft-float seems to corrupt builtin defines)
Note: checking out 'a7d840c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a7d840c... re PR target/13292 (-msoft-float seems to corrupt builtin defines)
Deleted branch temp-test-branch (was a7d840c).
Fail to build gcc for commit [a7d840c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[320c065932898a7a465997fca87ba8e33d228099] altivec-1.C: Correct dg syntax.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [320c065]
+---------------------------------------- Current commit hash: [320c065] ----------------------------------------+
Building GCC for commit [320c065]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 320c065 altivec-1.C: Correct dg syntax.
HEAD is now at 320c065 altivec-1.C: Correct dg syntax.
Note: checking out '320c065'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 320c065... altivec-1.C: Correct dg syntax.
Deleted branch temp-test-branch (was 320c065).
Fail to build gcc for commit [320c065], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6bbba4c73c8a9540ac77a1ffffd618ce2be3ccf0] toplev.h (rest_of_compilation): Adjust prototype.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6bbba4c]
+---------------------------------------- Current commit hash: [6bbba4c] ----------------------------------------+
Building GCC for commit [6bbba4c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6bbba4c toplev.h (rest_of_compilation): Adjust prototype.
HEAD is now at 6bbba4c toplev.h (rest_of_compilation): Adjust prototype.
Note: checking out '6bbba4c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6bbba4c... toplev.h (rest_of_compilation): Adjust prototype.
Deleted branch temp-test-branch (was 6bbba4c).
Fail to build gcc for commit [6bbba4c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9221325f10a58e13a35dfac007c6b5c906760679] re PR c++/7841 (gcc accepts illegal member function syntax for template classes)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9221325]
+---------------------------------------- Current commit hash: [9221325] ----------------------------------------+
Building GCC for commit [9221325]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9221325 re PR c++/7841 (gcc accepts illegal member function syntax for template classes)
HEAD is now at 9221325 re PR c++/7841 (gcc accepts illegal member function syntax for template classes)
Note: checking out '9221325'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9221325... re PR c++/7841 (gcc accepts illegal member function syntax for template classes)
Deleted branch temp-test-branch (was 9221325).
Fail to build gcc for commit [9221325], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[cc2121787f1242ef008ec037e2da0ec04cda42e9] t-linux (SHLIB_MAPFILES): Use sh specific libgcc-std.ver.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cc21217]
+---------------------------------------- Current commit hash: [cc21217] ----------------------------------------+
Building GCC for commit [cc21217]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cc21217 t-linux (SHLIB_MAPFILES): Use sh specific libgcc-std.ver.
HEAD is now at cc21217 t-linux (SHLIB_MAPFILES): Use sh specific libgcc-std.ver.
Note: checking out 'cc21217'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cc21217... t-linux (SHLIB_MAPFILES): Use sh specific libgcc-std.ver.
Deleted branch temp-test-branch (was cc21217).
Fail to build gcc for commit [cc21217], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[eb18fd8d19256c81df749f67010abad0af1615d3] gcc.c (default_compilers): Fill out initializers for new Fortran entries.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb18fd8]
+---------------------------------------- Current commit hash: [eb18fd8] ----------------------------------------+
Building GCC for commit [eb18fd8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb18fd8 gcc.c (default_compilers): Fill out initializers for new Fortran entries.
HEAD is now at eb18fd8 gcc.c (default_compilers): Fill out initializers for new Fortran entries.
Note: checking out 'eb18fd8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb18fd8... gcc.c (default_compilers): Fill out initializers for new Fortran entries.
Deleted branch temp-test-branch (was eb18fd8).
Fail to build gcc for commit [eb18fd8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7b14411a870638fb16f4a6052fcd64917ed1505d] m32r.h (RETURN_ADDR_RTX): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7b14411]
+---------------------------------------- Current commit hash: [7b14411] ----------------------------------------+
Building GCC for commit [7b14411]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7b14411 m32r.h (RETURN_ADDR_RTX): Define.
HEAD is now at 7b14411 m32r.h (RETURN_ADDR_RTX): Define.
Note: checking out '7b14411'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7b14411... m32r.h (RETURN_ADDR_RTX): Define.
Deleted branch temp-test-branch (was 7b14411).
Fail to build gcc for commit [7b14411], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c520979797bed1c58f0873f11b8ec1105341fec6] ifcvt.c (seq_contains_jump): Delete function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c520979]
+---------------------------------------- Current commit hash: [c520979] ----------------------------------------+
Building GCC for commit [c520979]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c520979 ifcvt.c (seq_contains_jump): Delete function.
HEAD is now at c520979 ifcvt.c (seq_contains_jump): Delete function.
Note: checking out 'c520979'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c520979... ifcvt.c (seq_contains_jump): Delete function.
Deleted branch temp-test-branch (was c520979).
Fail to build gcc for commit [c520979], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[36598e94de6161e92dfaba7518a8ba7313bc9925] * real.c: Fix bit count in head comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [36598e9]
+---------------------------------------- Current commit hash: [36598e9] ----------------------------------------+
Building GCC for commit [36598e9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 36598e9 * real.c: Fix bit count in head comment.
HEAD is now at 36598e9 * real.c: Fix bit count in head comment.
Note: checking out '36598e9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 36598e9... * real.c: Fix bit count in head comment.
Deleted branch temp-test-branch (was 36598e9).
Fail to build gcc for commit [36598e9], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[abdef81151d23ac629bbd9e98fdf31fd478912f3] re PR libfortran/15149 (problem computing Pi)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [abdef81]
+---------------------------------------- Current commit hash: [abdef81] ----------------------------------------+
Building GCC for commit [abdef81]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: abdef81 re PR libfortran/15149 (problem computing Pi)
HEAD is now at abdef81 re PR libfortran/15149 (problem computing Pi)
Note: checking out 'abdef81'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at abdef81... re PR libfortran/15149 (problem computing Pi)
Deleted branch temp-test-branch (was abdef81).
Fail to build gcc for commit [abdef81], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[f3207b37d34107210fda3f7b3bc999ac7537d7c0] re PR fortran/14928 (minloc intrinsic does not understand mask)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f3207b3]
+---------------------------------------- Current commit hash: [f3207b3] ----------------------------------------+
Building GCC for commit [f3207b3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f3207b3 re PR fortran/14928 (minloc intrinsic does not understand mask)
HEAD is now at f3207b3 re PR fortran/14928 (minloc intrinsic does not understand mask)
Note: checking out 'f3207b3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f3207b3... re PR fortran/14928 (minloc intrinsic does not understand mask)
Deleted branch temp-test-branch (was f3207b3).
Fail to build gcc for commit [f3207b3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6f0aa5e195d89a7e494e0362596df853762b4dac] encoding.h: Wrap the functions with extern "C" for C++ mode.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6f0aa5e]
+---------------------------------------- Current commit hash: [6f0aa5e] ----------------------------------------+
Building GCC for commit [6f0aa5e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6f0aa5e encoding.h: Wrap the functions with extern "C" for C++ mode.
HEAD is now at 6f0aa5e encoding.h: Wrap the functions with extern "C" for C++ mode.
Note: checking out '6f0aa5e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6f0aa5e... encoding.h: Wrap the functions with extern "C" for C++ mode.
Deleted branch temp-test-branch (was 6f0aa5e).
Fail to build gcc for commit [6f0aa5e], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[933592af7905835bbb668598ec3cab92eef32163] 2004-05-30  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [933592a]
+---------------------------------------- Current commit hash: [933592a] ----------------------------------------+
Building GCC for commit [933592a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 933592a 2004-05-30  Michael Koch  <konqueror@gmx.de>
HEAD is now at 933592a 2004-05-30  Michael Koch  <konqueror@gmx.de>
Note: checking out '933592a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 933592a... 2004-05-30  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 933592a).
Fail to build gcc for commit [933592a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d663434b6cd9ae8cbaac50a8c1dcff317594184d] re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d663434]
+---------------------------------------- Current commit hash: [d663434] ----------------------------------------+
Building GCC for commit [d663434]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d663434 re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
HEAD is now at d663434 re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
Note: checking out 'd663434'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d663434... re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
Deleted branch temp-test-branch (was d663434).
Fail to build gcc for commit [d663434], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b3dd9f3535b30fb5ec664f16aa527bffddf58c6c] re PR tree-optimization/14819 ([tree-ssa] strchr is not folded at tree-level)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b3dd9f3]
+---------------------------------------- Current commit hash: [b3dd9f3] ----------------------------------------+
Building GCC for commit [b3dd9f3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b3dd9f3 re PR tree-optimization/14819 ([tree-ssa] strchr is not folded at tree-level)
HEAD is now at b3dd9f3 re PR tree-optimization/14819 ([tree-ssa] strchr is not folded at tree-level)
Note: checking out 'b3dd9f3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b3dd9f3... re PR tree-optimization/14819 ([tree-ssa] strchr is not folded at tree-level)
Deleted branch temp-test-branch (was b3dd9f3).
Fail to build gcc for commit [b3dd9f3], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b713a445f2bfa00419e7efdb5ffc0cf89e335227] re PR middle-end/15988 (ICE in fold_convert with pointer-to-member-function)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b713a44]
+---------------------------------------- Current commit hash: [b713a44] ----------------------------------------+
Building GCC for commit [b713a44]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b713a44 re PR middle-end/15988 (ICE in fold_convert with pointer-to-member-function)
HEAD is now at b713a44 re PR middle-end/15988 (ICE in fold_convert with pointer-to-member-function)
Note: checking out 'b713a44'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b713a44... re PR middle-end/15988 (ICE in fold_convert with pointer-to-member-function)
Deleted branch temp-test-branch (was b713a44).
Fail to build gcc for commit [b713a44], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1c052514f657db4f56b876814fee2ffd564fae59] tree-ssa-dom.c (record_equivalences_from_incoming_edge): Only look at case labels if the immediate dominator is also the only predecessor.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1c05251]
+---------------------------------------- Current commit hash: [1c05251] ----------------------------------------+
Building GCC for commit [1c05251]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1c05251 tree-ssa-dom.c (record_equivalences_from_incoming_edge): Only look at case labels if the immediate dominator is also the only predecessor.
HEAD is now at 1c05251 tree-ssa-dom.c (record_equivalences_from_incoming_edge): Only look at case labels if the immediate dominator is also the only predecessor.
Note: checking out '1c05251'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1c05251... tree-ssa-dom.c (record_equivalences_from_incoming_edge): Only look at case labels if the immediate dominator is also the only predecessor.
Deleted branch temp-test-branch (was 1c05251).
Fail to build gcc for commit [1c05251], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[fe7080d2c8aab8425f987c9b168f4ed42ad680cd] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fe7080d]
+---------------------------------------- Current commit hash: [fe7080d] ----------------------------------------+
Building GCC for commit [fe7080d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fe7080d [multiple changes]
HEAD is now at fe7080d [multiple changes]
Note: checking out 'fe7080d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fe7080d... [multiple changes]
Deleted branch temp-test-branch (was fe7080d).
Fail to build gcc for commit [fe7080d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c8b2e872a83dd3869ffc4443201a1f3096bc3a6c] re PR c++/15742 ('noreturn' attribute ignored in method of template functions.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c8b2e87]
+---------------------------------------- Current commit hash: [c8b2e87] ----------------------------------------+
Building GCC for commit [c8b2e87]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c8b2e87 re PR c++/15742 ('noreturn' attribute ignored in method of template functions.)
HEAD is now at c8b2e87 re PR c++/15742 ('noreturn' attribute ignored in method of template functions.)
Note: checking out 'c8b2e87'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c8b2e87... re PR c++/15742 ('noreturn' attribute ignored in method of template functions.)
Deleted branch temp-test-branch (was c8b2e87).
Fail to build gcc for commit [c8b2e87], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d52635f82eea28ee0a18ea283de77ac79bee3e05] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d52635f]
+---------------------------------------- Current commit hash: [d52635f] ----------------------------------------+
Building GCC for commit [d52635f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d52635f Daily bump.
HEAD is now at d52635f Daily bump.
Note: checking out 'd52635f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d52635f... Daily bump.
Deleted branch temp-test-branch (was d52635f).
Fail to build gcc for commit [d52635f], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0ab6a7ba9c98756505d14e7e6e1ad88a3a87fd99] Merge in xfails from PR14107.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0ab6a7b]
+---------------------------------------- Current commit hash: [0ab6a7b] ----------------------------------------+
Building GCC for commit [0ab6a7b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0ab6a7b Merge in xfails from PR14107.
HEAD is now at 0ab6a7b Merge in xfails from PR14107.
Note: checking out '0ab6a7b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0ab6a7b... Merge in xfails from PR14107.
Deleted branch temp-test-branch (was 0ab6a7b).
Fail to build gcc for commit [0ab6a7b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c6618c0336a1c272391cf097b99e1bca019ed847] re PR libstdc++/11691 (stdio_filebuf leaks FILE buffer when "no close" is requested)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c6618c0]
+---------------------------------------- Current commit hash: [c6618c0] ----------------------------------------+
Building GCC for commit [c6618c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c6618c0 re PR libstdc++/11691 (stdio_filebuf leaks FILE buffer when "no close" is requested)
HEAD is now at c6618c0 re PR libstdc++/11691 (stdio_filebuf leaks FILE buffer when "no close" is requested)
Note: checking out 'c6618c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c6618c0... re PR libstdc++/11691 (stdio_filebuf leaks FILE buffer when "no close" is requested)
Deleted branch temp-test-branch (was c6618c0).
Fail to build gcc for commit [c6618c0], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7a3ea2011be31e937186df05335f665a8a983028] c-parse.in (OFFSETOF, [...]): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7a3ea20]
+---------------------------------------- Current commit hash: [7a3ea20] ----------------------------------------+
Building GCC for commit [7a3ea20]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7a3ea20 c-parse.in (OFFSETOF, [...]): New.
HEAD is now at 7a3ea20 c-parse.in (OFFSETOF, [...]): New.
Note: checking out '7a3ea20'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7a3ea20... c-parse.in (OFFSETOF, [...]): New.
Deleted branch temp-test-branch (was 7a3ea20).
Fail to build gcc for commit [7a3ea20], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[a43b9dbe90927631557e12f3fdb7babf51bf5116] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a43b9db]
+---------------------------------------- Current commit hash: [a43b9db] ----------------------------------------+
Building GCC for commit [a43b9db]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a43b9db Daily bump.
HEAD is now at a43b9db Daily bump.
Note: checking out 'a43b9db'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a43b9db... Daily bump.
Deleted branch temp-test-branch (was a43b9db).
Fail to build gcc for commit [a43b9db], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[a32b97a20d6638f3cee28919f4e6bd7b1d9b39e8] tree-ssa.texi: Remove references to VDEF and add descriptions of V_MAY_DEF and V_MUST_DEF.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a32b97a]
+---------------------------------------- Current commit hash: [a32b97a] ----------------------------------------+
Building GCC for commit [a32b97a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a32b97a tree-ssa.texi: Remove references to VDEF and add descriptions of V_MAY_DEF and V_MUST_DEF.
HEAD is now at a32b97a tree-ssa.texi: Remove references to VDEF and add descriptions of V_MAY_DEF and V_MUST_DEF.
Note: checking out 'a32b97a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a32b97a... tree-ssa.texi: Remove references to VDEF and add descriptions of V_MAY_DEF and V_MUST_DEF.
Deleted branch temp-test-branch (was a32b97a).
Fail to build gcc for commit [a32b97a], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[3a5b9284da6acc309118a04dcba3a1cbca2ecdd4] c-common.c (verify_sequence_points): Export.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a5b928]
+---------------------------------------- Current commit hash: [3a5b928] ----------------------------------------+
Building GCC for commit [3a5b928]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a5b928 c-common.c (verify_sequence_points): Export.
HEAD is now at 3a5b928 c-common.c (verify_sequence_points): Export.
Note: checking out '3a5b928'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a5b928... c-common.c (verify_sequence_points): Export.
Deleted branch temp-test-branch (was 3a5b928).
Fail to build gcc for commit [3a5b928], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[87fd6c1cc3c455fe3b9c363deb44f6c5a6564466] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [87fd6c1]
+---------------------------------------- Current commit hash: [87fd6c1] ----------------------------------------+
Building GCC for commit [87fd6c1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 87fd6c1 Daily bump.
HEAD is now at 87fd6c1 Daily bump.
Note: checking out '87fd6c1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 87fd6c1... Daily bump.
Deleted branch temp-test-branch (was 87fd6c1).
Fail to build gcc for commit [87fd6c1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[500e12641f0f7fb4fde1221f7f8052ef351de5f7] Makefile.am: Add rule for .S files to fix bootstrap on solaris and alpha.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [500e126]
+---------------------------------------- Current commit hash: [500e126] ----------------------------------------+
Building GCC for commit [500e126]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 500e126 Makefile.am: Add rule for .S files to fix bootstrap on solaris and alpha.
HEAD is now at 500e126 Makefile.am: Add rule for .S files to fix bootstrap on solaris and alpha.
Note: checking out '500e126'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 500e126... Makefile.am: Add rule for .S files to fix bootstrap on solaris and alpha.
Deleted branch temp-test-branch (was 500e126).
Fail to build gcc for commit [500e126], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[dbfa8d15358235cfda20583a3c0c557bf50138c6] * gcc_update: Add libgfortran.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dbfa8d1]
+---------------------------------------- Current commit hash: [dbfa8d1] ----------------------------------------+
Building GCC for commit [dbfa8d1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dbfa8d1 * gcc_update: Add libgfortran.
HEAD is now at dbfa8d1 * gcc_update: Add libgfortran.
Note: checking out 'dbfa8d1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dbfa8d1... * gcc_update: Add libgfortran.
Deleted branch temp-test-branch (was dbfa8d1).
Fail to build gcc for commit [dbfa8d1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ee8db92b391a602cb93f4ba227b152bcf81cb054] fold-const.c (fold): Add constant folding for unordered comparison tree nodes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ee8db92]
+---------------------------------------- Current commit hash: [ee8db92] ----------------------------------------+
Building GCC for commit [ee8db92]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ee8db92 fold-const.c (fold): Add constant folding for unordered comparison tree nodes.
HEAD is now at ee8db92 fold-const.c (fold): Add constant folding for unordered comparison tree nodes.
Note: checking out 'ee8db92'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ee8db92... fold-const.c (fold): Add constant folding for unordered comparison tree nodes.
Deleted branch temp-test-branch (was ee8db92).
Fail to build gcc for commit [ee8db92], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7338fc64dde8ab8315095e226c1b9e2469a4e369] re PR libstdc++/15775 (Allocator::pointer consistently ignored)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7338fc6]
+---------------------------------------- Current commit hash: [7338fc6] ----------------------------------------+
Building GCC for commit [7338fc6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7338fc6 re PR libstdc++/15775 (Allocator::pointer consistently ignored)
HEAD is now at 7338fc6 re PR libstdc++/15775 (Allocator::pointer consistently ignored)
Note: checking out '7338fc6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7338fc6... re PR libstdc++/15775 (Allocator::pointer consistently ignored)
Deleted branch temp-test-branch (was 7338fc6).
Fail to build gcc for commit [7338fc6], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d627e19f0e7b1b09ef36233199499fc651403f96] t-linux64: New file.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d627e19]
+---------------------------------------- Current commit hash: [d627e19] ----------------------------------------+
Building GCC for commit [d627e19]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d627e19 t-linux64: New file.
HEAD is now at d627e19 t-linux64: New file.
Note: checking out 'd627e19'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d627e19... t-linux64: New file.
Deleted branch temp-test-branch (was d627e19).
Fail to build gcc for commit [d627e19], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7954e85c0016deceecd4dafc8622292ad1363967] Portability improvements, e.g., libmudflap/15293.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7954e85]
+---------------------------------------- Current commit hash: [7954e85] ----------------------------------------+
Building GCC for commit [7954e85]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7954e85 Portability improvements, e.g., libmudflap/15293.
HEAD is now at 7954e85 Portability improvements, e.g., libmudflap/15293.
Note: checking out '7954e85'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7954e85... Portability improvements, e.g., libmudflap/15293.
Deleted branch temp-test-branch (was 7954e85).
Fail to build gcc for commit [7954e85], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c86dd7db77896014952396f60db88ce551b5a431] system.h: dgettext takes two parameters.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c86dd7d]
+---------------------------------------- Current commit hash: [c86dd7d] ----------------------------------------+
Building GCC for commit [c86dd7d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c86dd7d system.h: dgettext takes two parameters.
HEAD is now at c86dd7d system.h: dgettext takes two parameters.
Note: checking out 'c86dd7d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c86dd7d... system.h: dgettext takes two parameters.
Deleted branch temp-test-branch (was c86dd7d).
Fail to build gcc for commit [c86dd7d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9fc3ed51d05dc76edb1f7f0ac7a52df24c9738ef] 2004-06-05  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9fc3ed5]
+---------------------------------------- Current commit hash: [9fc3ed5] ----------------------------------------+
Building GCC for commit [9fc3ed5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9fc3ed5 2004-06-05  Michael Koch  <konqueror@gmx.de>
HEAD is now at 9fc3ed5 2004-06-05  Michael Koch  <konqueror@gmx.de>
Note: checking out '9fc3ed5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9fc3ed5... 2004-06-05  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 9fc3ed5).
Fail to build gcc for commit [9fc3ed5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[104a401041fd76a07d6da9a1f28bdbf37d10f74d] re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [104a401]
+---------------------------------------- Current commit hash: [104a401] ----------------------------------------+
Building GCC for commit [104a401]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 104a401 re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
HEAD is now at 104a401 re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
Note: checking out '104a401'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 104a401... re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
Deleted branch temp-test-branch (was 104a401).
Fail to build gcc for commit [104a401], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[10bc1b1bec937131ad05fa18184b985078b99702] re PR c/13519 (typeof(nonconst+const) is const)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [10bc1b1]
+---------------------------------------- Current commit hash: [10bc1b1] ----------------------------------------+
Building GCC for commit [10bc1b1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 10bc1b1 re PR c/13519 (typeof(nonconst+const) is const)
HEAD is now at 10bc1b1 re PR c/13519 (typeof(nonconst+const) is const)
Note: checking out '10bc1b1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 10bc1b1... re PR c/13519 (typeof(nonconst+const) is const)
Deleted branch temp-test-branch (was 10bc1b1).
Fail to build gcc for commit [10bc1b1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[f00d196d208240cea418ee3bfa86f453d7f4fe5c] * except.c (can_throw_internal):  Notice RESX instructions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f00d196]
+---------------------------------------- Current commit hash: [f00d196] ----------------------------------------+
Building GCC for commit [f00d196]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f00d196 * except.c (can_throw_internal):  Notice RESX instructions.
HEAD is now at f00d196 * except.c (can_throw_internal):  Notice RESX instructions.
Note: checking out 'f00d196'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f00d196... * except.c (can_throw_internal):  Notice RESX instructions.
Deleted branch temp-test-branch (was f00d196).
Fail to build gcc for commit [f00d196], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7853504d63ff5c13c0f64e09d4515ea0ce67ffb8] tree-cfg.c (tree_verify_flow_info): Make sure that labels in SWITCH_LABELS are always sorted.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7853504]
+---------------------------------------- Current commit hash: [7853504] ----------------------------------------+
Building GCC for commit [7853504]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7853504 tree-cfg.c (tree_verify_flow_info): Make sure that labels in SWITCH_LABELS are always sorted.
HEAD is now at 7853504 tree-cfg.c (tree_verify_flow_info): Make sure that labels in SWITCH_LABELS are always sorted.
Note: checking out '7853504'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7853504... tree-cfg.c (tree_verify_flow_info): Make sure that labels in SWITCH_LABELS are always sorted.
Deleted branch temp-test-branch (was 7853504).
Fail to build gcc for commit [7853504], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[baf8706c69b80fbf100bdb854d96d1d19bb1ad52] * cfgbuild.c (control_flow_insn_p):  Notice noreturn call
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [baf8706]
+---------------------------------------- Current commit hash: [baf8706] ----------------------------------------+
Building GCC for commit [baf8706]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: baf8706 * cfgbuild.c (control_flow_insn_p):  Notice noreturn call
HEAD is now at baf8706 * cfgbuild.c (control_flow_insn_p):  Notice noreturn call
Note: checking out 'baf8706'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at baf8706... * cfgbuild.c (control_flow_insn_p):  Notice noreturn call
Deleted branch temp-test-branch (was baf8706).
Fail to build gcc for commit [baf8706], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[90c3ba6e0d0740dd5f794c669ddc0c449d845d7d] * update_version (ADD_BRANCHES): Remove tree-ssa-20020619-branch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [90c3ba6]
+---------------------------------------- Current commit hash: [90c3ba6] ----------------------------------------+
Building GCC for commit [90c3ba6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 90c3ba6 * update_version (ADD_BRANCHES): Remove tree-ssa-20020619-branch.
HEAD is now at 90c3ba6 * update_version (ADD_BRANCHES): Remove tree-ssa-20020619-branch.
Note: checking out '90c3ba6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 90c3ba6... * update_version (ADD_BRANCHES): Remove tree-ssa-20020619-branch.
Deleted branch temp-test-branch (was 90c3ba6).
Fail to build gcc for commit [90c3ba6], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6c2511d34e54923dd7c2195dff882ffcffaa9631] rtl.h (skip_consecutive_labels): Declare.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6c2511d]
+---------------------------------------- Current commit hash: [6c2511d] ----------------------------------------+
Building GCC for commit [6c2511d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6c2511d rtl.h (skip_consecutive_labels): Declare.
HEAD is now at 6c2511d rtl.h (skip_consecutive_labels): Declare.
Note: checking out '6c2511d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6c2511d... rtl.h (skip_consecutive_labels): Declare.
Deleted branch temp-test-branch (was 6c2511d).
Fail to build gcc for commit [6c2511d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e83d8d43fe73ecb1d07b359ab7575dce9e94587c] re PR preprocessor/15933 (Caching of include files breaks compilation)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e83d8d4]
+---------------------------------------- Current commit hash: [e83d8d4] ----------------------------------------+
Building GCC for commit [e83d8d4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e83d8d4 re PR preprocessor/15933 (Caching of include files breaks compilation)
HEAD is now at e83d8d4 re PR preprocessor/15933 (Caching of include files breaks compilation)
Note: checking out 'e83d8d4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e83d8d4... re PR preprocessor/15933 (Caching of include files breaks compilation)
Deleted branch temp-test-branch (was e83d8d4).
Fail to build gcc for commit [e83d8d4], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9e6f2e7dcaf419d7db9e0ae7342a1f7bfb98ba26] decl.c (cp_make_fname_decl): Free return value from fname_as_string.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9e6f2e7]
+---------------------------------------- Current commit hash: [9e6f2e7] ----------------------------------------+
Building GCC for commit [9e6f2e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9e6f2e7 decl.c (cp_make_fname_decl): Free return value from fname_as_string.
HEAD is now at 9e6f2e7 decl.c (cp_make_fname_decl): Free return value from fname_as_string.
Note: checking out '9e6f2e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9e6f2e7... decl.c (cp_make_fname_decl): Free return value from fname_as_string.
Deleted branch temp-test-branch (was 9e6f2e7).
Fail to build gcc for commit [9e6f2e7], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[c39373da4911f9246dec9b50011ed2aa9247c2c1] re PR fortran/15314 (ICE caused by array initializer in derived type definition)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c39373d]
+---------------------------------------- Current commit hash: [c39373d] ----------------------------------------+
Building GCC for commit [c39373d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c39373d re PR fortran/15314 (ICE caused by array initializer in derived type definition)
HEAD is now at c39373d re PR fortran/15314 (ICE caused by array initializer in derived type definition)
Note: checking out 'c39373d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c39373d... re PR fortran/15314 (ICE caused by array initializer in derived type definition)
Deleted branch temp-test-branch (was c39373d).
Fail to build gcc for commit [c39373d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[f51d8522f761fab8df285b2fa3aa8c6a931509c3] Fix ChangeLog, fix parentheses from previous patch to trans-intrinsic.c
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f51d852]
+---------------------------------------- Current commit hash: [f51d852] ----------------------------------------+
Building GCC for commit [f51d852]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f51d852 Fix ChangeLog, fix parentheses from previous patch to trans-intrinsic.c
HEAD is now at f51d852 Fix ChangeLog, fix parentheses from previous patch to trans-intrinsic.c
Note: checking out 'f51d852'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f51d852... Fix ChangeLog, fix parentheses from previous patch to trans-intrinsic.c
Deleted branch temp-test-branch (was f51d852).
Fail to build gcc for commit [f51d852], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2] stl_algobase.h (fill, fill_n): Tighten the dispatch: use iterator_traits<>::value_type, not _Tp.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1a277d9]
+---------------------------------------- Current commit hash: [1a277d9] ----------------------------------------+
Building GCC for commit [1a277d9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1a277d9 stl_algobase.h (fill, fill_n): Tighten the dispatch: use iterator_traits<>::value_type, not _Tp.
HEAD is now at 1a277d9 stl_algobase.h (fill, fill_n): Tighten the dispatch: use iterator_traits<>::value_type, not _Tp.
Note: checking out '1a277d9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1a277d9... stl_algobase.h (fill, fill_n): Tighten the dispatch: use iterator_traits<>::value_type, not _Tp.
Deleted branch temp-test-branch (was 1a277d9).
Fail to build gcc for commit [1a277d9], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[50796c52d96b4a024ac637ed528d1947d1a228a1] configure.in: Rename to ...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [50796c5]
+---------------------------------------- Current commit hash: [50796c5] ----------------------------------------+
Building GCC for commit [50796c5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 50796c5 configure.in: Rename to ...
HEAD is now at 50796c5 configure.in: Rename to ...
Note: checking out '50796c5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 50796c5... configure.in: Rename to ...
Deleted branch temp-test-branch (was 50796c5).
Fail to build gcc for commit [50796c5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e3d26d7b1f2c26f419362606f484c87f4bc2cd13] * gennews: Update for GCC 3.4.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e3d26d7]
+---------------------------------------- Current commit hash: [e3d26d7] ----------------------------------------+
Building GCC for commit [e3d26d7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e3d26d7 * gennews: Update for GCC 3.4.
HEAD is now at e3d26d7 * gennews: Update for GCC 3.4.
Note: checking out 'e3d26d7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e3d26d7... * gennews: Update for GCC 3.4.
Deleted branch temp-test-branch (was e3d26d7).
Fail to build gcc for commit [e3d26d7], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[1b2545bcf251668d695e8cbf9b9acfd4507eef61] 2004-05-30  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1b2545b]
+---------------------------------------- Current commit hash: [1b2545b] ----------------------------------------+
Building GCC for commit [1b2545b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1b2545b 2004-05-30  Michael Koch  <konqueror@gmx.de>
HEAD is now at 1b2545b 2004-05-30  Michael Koch  <konqueror@gmx.de>
Note: checking out '1b2545b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1b2545b... 2004-05-30  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 1b2545b).
Fail to build gcc for commit [1b2545b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d2d8936f3faf747a3305f39bc4d12a37fbe3e8cb] tree-ssa-dom.c (record_dominating_conditions): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d2d8936]
+---------------------------------------- Current commit hash: [d2d8936] ----------------------------------------+
Building GCC for commit [d2d8936]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d2d8936 tree-ssa-dom.c (record_dominating_conditions): New function.
HEAD is now at d2d8936 tree-ssa-dom.c (record_dominating_conditions): New function.
Note: checking out 'd2d8936'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d2d8936... tree-ssa-dom.c (record_dominating_conditions): New function.
Deleted branch temp-test-branch (was d2d8936).
Fail to build gcc for commit [d2d8936], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[29d64660c735aa0c52a29452342b631a09c1266e] c-tree.texi (Expressions): Document FLOOR_DIV_EXPR...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [29d6466]
+---------------------------------------- Current commit hash: [29d6466] ----------------------------------------+
Building GCC for commit [29d6466]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 29d6466 c-tree.texi (Expressions): Document FLOOR_DIV_EXPR...
HEAD is now at 29d6466 c-tree.texi (Expressions): Document FLOOR_DIV_EXPR...
Note: checking out '29d6466'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 29d6466... c-tree.texi (Expressions): Document FLOOR_DIV_EXPR...
Deleted branch temp-test-branch (was 29d6466).
Fail to build gcc for commit [29d6466], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[6590e19ab7ed5c709611a1d3746d0ae9aefb9221] s390-protos.h (s390_emit_compare): Add prototype.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6590e19]
+---------------------------------------- Current commit hash: [6590e19] ----------------------------------------+
Building GCC for commit [6590e19]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6590e19 s390-protos.h (s390_emit_compare): Add prototype.
HEAD is now at 6590e19 s390-protos.h (s390_emit_compare): Add prototype.
Note: checking out '6590e19'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6590e19... s390-protos.h (s390_emit_compare): Add prototype.
Deleted branch temp-test-branch (was 6590e19).
Fail to build gcc for commit [6590e19], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[b47785f4ab321d38c5a25eb2c469c940f73801f8] * pex-win32.c (fix_argv): Expand comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b47785f]
+---------------------------------------- Current commit hash: [b47785f] ----------------------------------------+
Building GCC for commit [b47785f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b47785f * pex-win32.c (fix_argv): Expand comment.
HEAD is now at b47785f * pex-win32.c (fix_argv): Expand comment.
Note: checking out 'b47785f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b47785f... * pex-win32.c (fix_argv): Expand comment.
Deleted branch temp-test-branch (was b47785f).
Fail to build gcc for commit [b47785f], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[2f70118592b876b093e8c6baf72d57ae8e244a14] gcc_release (build_sources): Change CRCs from brik to md5sum.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f70118]
+---------------------------------------- Current commit hash: [2f70118] ----------------------------------------+
Building GCC for commit [2f70118]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f70118 gcc_release (build_sources): Change CRCs from brik to md5sum.
HEAD is now at 2f70118 gcc_release (build_sources): Change CRCs from brik to md5sum.
Note: checking out '2f70118'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f70118... gcc_release (build_sources): Change CRCs from brik to md5sum.
Deleted branch temp-test-branch (was 2f70118).
Fail to build gcc for commit [2f70118], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[019c8e808737da10aefd430d55d4a96695a8859e] c-typeck.c (default_function_array_conversion): Use build_pointer_type not TYPE_POINTER_TO.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [019c8e8]
+---------------------------------------- Current commit hash: [019c8e8] ----------------------------------------+
Building GCC for commit [019c8e8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 019c8e8 c-typeck.c (default_function_array_conversion): Use build_pointer_type not TYPE_POINTER_TO.
HEAD is now at 019c8e8 c-typeck.c (default_function_array_conversion): Use build_pointer_type not TYPE_POINTER_TO.
Note: checking out '019c8e8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 019c8e8... c-typeck.c (default_function_array_conversion): Use build_pointer_type not TYPE_POINTER_TO.
Deleted branch temp-test-branch (was 019c8e8).
Fail to build gcc for commit [019c8e8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[28c6dc635956b00d497d8d12cd95b61c47ebb2b8] re PR c++/16112 (ICE with statement expression in return statement)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [28c6dc6]
+---------------------------------------- Current commit hash: [28c6dc6] ----------------------------------------+
Building GCC for commit [28c6dc6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 28c6dc6 re PR c++/16112 (ICE with statement expression in return statement)
HEAD is now at 28c6dc6 re PR c++/16112 (ICE with statement expression in return statement)
Note: checking out '28c6dc6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 28c6dc6... re PR c++/16112 (ICE with statement expression in return statement)
Deleted branch temp-test-branch (was 28c6dc6).
Fail to build gcc for commit [28c6dc6], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[f516a7dacf06f446b8e5d321c404a0d47702237b] Makefile.tpl (all.normal): Rename to all.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f516a7d]
+---------------------------------------- Current commit hash: [f516a7d] ----------------------------------------+
Building GCC for commit [f516a7d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f516a7d Makefile.tpl (all.normal): Rename to all.
HEAD is now at f516a7d Makefile.tpl (all.normal): Rename to all.
Note: checking out 'f516a7d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f516a7d... Makefile.tpl (all.normal): Rename to all.
Deleted branch temp-test-branch (was f516a7d).
Fail to build gcc for commit [f516a7d], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[31a52b868a209f0c8f3ade10a91148664526dc9b] tm.texi (TARGET_RTX_COSTS): Document that instruction costs should be based on code size when...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [31a52b8]
+---------------------------------------- Current commit hash: [31a52b8] ----------------------------------------+
Building GCC for commit [31a52b8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 31a52b8 tm.texi (TARGET_RTX_COSTS): Document that instruction costs should be based on code size when...
HEAD is now at 31a52b8 tm.texi (TARGET_RTX_COSTS): Document that instruction costs should be based on code size when...
Note: checking out '31a52b8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 31a52b8... tm.texi (TARGET_RTX_COSTS): Document that instruction costs should be based on code size when...
Deleted branch temp-test-branch (was 31a52b8).
Fail to build gcc for commit [31a52b8], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d1ee83813d3719902016705cfb1898b1bb005027] jni.cc (_Jv_JNI_GetAnyMethodID): Add name and signature to NoSuchMethodError.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1ee838]
+---------------------------------------- Current commit hash: [d1ee838] ----------------------------------------+
Building GCC for commit [d1ee838]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1ee838 jni.cc (_Jv_JNI_GetAnyMethodID): Add name and signature to NoSuchMethodError.
HEAD is now at d1ee838 jni.cc (_Jv_JNI_GetAnyMethodID): Add name and signature to NoSuchMethodError.
Note: checking out 'd1ee838'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1ee838... jni.cc (_Jv_JNI_GetAnyMethodID): Add name and signature to NoSuchMethodError.
Deleted branch temp-test-branch (was d1ee838).
Fail to build gcc for commit [d1ee838], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[692603556b895a3a337b5a82e0012f69e8707896] arm.md (ite_ne_zeroextractsi, [...]): Ensure we don't earlyclobber operands used in the second insn.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6926035]
+---------------------------------------- Current commit hash: [6926035] ----------------------------------------+
Building GCC for commit [6926035]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6926035 arm.md (ite_ne_zeroextractsi, [...]): Ensure we don't earlyclobber operands used in the second insn.
HEAD is now at 6926035 arm.md (ite_ne_zeroextractsi, [...]): Ensure we don't earlyclobber operands used in the second insn.
Note: checking out '6926035'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6926035... arm.md (ite_ne_zeroextractsi, [...]): Ensure we don't earlyclobber operands used in the second insn.
Deleted branch temp-test-branch (was 6926035).
Fail to build gcc for commit [6926035], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[322afd16ae583cc9c71d4177ce8318307a7a568a] re PR web/15263 (configure.html: end tag for element "H4" which is not open...)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [322afd1]
+---------------------------------------- Current commit hash: [322afd1] ----------------------------------------+
Building GCC for commit [322afd1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 322afd1 re PR web/15263 (configure.html: end tag for element "H4" which is not open...)
HEAD is now at 322afd1 re PR web/15263 (configure.html: end tag for element "H4" which is not open...)
Note: checking out '322afd1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 322afd1... re PR web/15263 (configure.html: end tag for element "H4" which is not open...)
Deleted branch temp-test-branch (was 322afd1).
Fail to build gcc for commit [322afd1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[942e0f44143290f7475d161fd27b049098182841] linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH, override sparc.h definition.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [942e0f4]
+---------------------------------------- Current commit hash: [942e0f4] ----------------------------------------+
Building GCC for commit [942e0f4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 942e0f4 linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH, override sparc.h definition.
HEAD is now at 942e0f4 linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH, override sparc.h definition.
Note: checking out '942e0f4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 942e0f4... linux64.h (OPTION_DEFAULT_SPECS): If SPARC_BI_ARCH, override sparc.h definition.
Deleted branch temp-test-branch (was 942e0f4).
Fail to build gcc for commit [942e0f4], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[9655d83b750bc6de0074b0501044d4bcb28679d9] fold-const.c (fold_abs_const): Make extern.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9655d83]
+---------------------------------------- Current commit hash: [9655d83] ----------------------------------------+
Building GCC for commit [9655d83]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9655d83 fold-const.c (fold_abs_const): Make extern.
HEAD is now at 9655d83 fold-const.c (fold_abs_const): Make extern.
Note: checking out '9655d83'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9655d83... fold-const.c (fold_abs_const): Make extern.
Deleted branch temp-test-branch (was 9655d83).
Fail to build gcc for commit [9655d83], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[7c34ced1a25f62ed12b1bf1158167fe157b60ae7] c-common.c, c-common.h (lang_gimplify_stmt): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c34ced]
+---------------------------------------- Current commit hash: [7c34ced] ----------------------------------------+
Building GCC for commit [7c34ced]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c34ced c-common.c, c-common.h (lang_gimplify_stmt): Remove.
HEAD is now at 7c34ced c-common.c, c-common.h (lang_gimplify_stmt): Remove.
Note: checking out '7c34ced'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c34ced... c-common.c, c-common.h (lang_gimplify_stmt): Remove.
Deleted branch temp-test-branch (was 7c34ced).
Fail to build gcc for commit [7c34ced], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ee18c9f169de177e07ccc68572222ebf574f6a61] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ee18c9f]
+---------------------------------------- Current commit hash: [ee18c9f] ----------------------------------------+
Building GCC for commit [ee18c9f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ee18c9f Daily bump.
HEAD is now at ee18c9f Daily bump.
Note: checking out 'ee18c9f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ee18c9f... Daily bump.
Deleted branch temp-test-branch (was ee18c9f).
Fail to build gcc for commit [ee18c9f], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0a0de3bff058d3cb4f82d04f9de1ec0d957ecb5f] mips.c (mips_asm_file_start): Emit a .gcc_compiled_longXX section when generating EABI code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0a0de3b]
+---------------------------------------- Current commit hash: [0a0de3b] ----------------------------------------+
Building GCC for commit [0a0de3b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0a0de3b mips.c (mips_asm_file_start): Emit a .gcc_compiled_longXX section when generating EABI code.
HEAD is now at 0a0de3b mips.c (mips_asm_file_start): Emit a .gcc_compiled_longXX section when generating EABI code.
Note: checking out '0a0de3b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0a0de3b... mips.c (mips_asm_file_start): Emit a .gcc_compiled_longXX section when generating EABI code.
Deleted branch temp-test-branch (was 0a0de3b).
Fail to build gcc for commit [0a0de3b], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[80d23e4959036e19145c2eb6a0d117727104a211] bitfield3.C: Add -mno-align-double compile option for mingw32 and cygwin targets.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [80d23e4]
+---------------------------------------- Current commit hash: [80d23e4] ----------------------------------------+
Building GCC for commit [80d23e4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 80d23e4 bitfield3.C: Add -mno-align-double compile option for mingw32 and cygwin targets.
HEAD is now at 80d23e4 bitfield3.C: Add -mno-align-double compile option for mingw32 and cygwin targets.
Note: checking out '80d23e4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 80d23e4... bitfield3.C: Add -mno-align-double compile option for mingw32 and cygwin targets.
Deleted branch temp-test-branch (was 80d23e4).
Fail to build gcc for commit [80d23e4], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[ac4ebd5c900503146c0bbc77084caca839beeb67] fix bootstrap breakage
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ac4ebd5]
+---------------------------------------- Current commit hash: [ac4ebd5] ----------------------------------------+
Building GCC for commit [ac4ebd5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ac4ebd5 fix bootstrap breakage
HEAD is now at ac4ebd5 fix bootstrap breakage
Note: checking out 'ac4ebd5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ac4ebd5... fix bootstrap breakage
Deleted branch temp-test-branch (was ac4ebd5).
Fail to build gcc for commit [ac4ebd5], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[e072ae27e0898a7244b08d003a43b4cecf146df0] tree-complex.c (expand_complex_comparison): Use fold_convert instead of convert.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e072ae2]
+---------------------------------------- Current commit hash: [e072ae2] ----------------------------------------+
Building GCC for commit [e072ae2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e072ae2 tree-complex.c (expand_complex_comparison): Use fold_convert instead of convert.
HEAD is now at e072ae2 tree-complex.c (expand_complex_comparison): Use fold_convert instead of convert.
Note: checking out 'e072ae2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e072ae2... tree-complex.c (expand_complex_comparison): Use fold_convert instead of convert.
Deleted branch temp-test-branch (was e072ae2).
Fail to build gcc for commit [e072ae2], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[0620be185dfe68d566205c6f11268378b3675533] re PR target/15433 (ICE, cannot split insn)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0620be1]
+---------------------------------------- Current commit hash: [0620be1] ----------------------------------------+
Building GCC for commit [0620be1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0620be1 re PR target/15433 (ICE, cannot split insn)
HEAD is now at 0620be1 re PR target/15433 (ICE, cannot split insn)
Note: checking out '0620be1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0620be1... re PR target/15433 (ICE, cannot split insn)
Deleted branch temp-test-branch (was 0620be1).
Fail to build gcc for commit [0620be1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[37f3105a58188e54224fb645742780ba9b70d60b] linker-map.gnu: Use wildcards for __basic_file::{xsgetn,xsputn,seekoff,xsputn_2}.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [37f3105]
+---------------------------------------- Current commit hash: [37f3105] ----------------------------------------+
Building GCC for commit [37f3105]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 37f3105 linker-map.gnu: Use wildcards for __basic_file::{xsgetn,xsputn,seekoff,xsputn_2}.
HEAD is now at 37f3105 linker-map.gnu: Use wildcards for __basic_file::{xsgetn,xsputn,seekoff,xsputn_2}.
Note: checking out '37f3105'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 37f3105... linker-map.gnu: Use wildcards for __basic_file::{xsgetn,xsputn,seekoff,xsputn_2}.
Deleted branch temp-test-branch (was 37f3105).
Fail to build gcc for commit [37f3105], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[4fc4dd12a4709902916130fa0cb01209341bb0b4] * Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS) 	(STAGE_HOST_EXPORTS, BASE_TARGET_EXPORTS, RAW_CXX_TARGET_EXPORTS) 	(NORMAL_TARGET_EXPORTS): New macros.  Use them in all the recursive 	targets. 	* Makefile.in: Regenerate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4fc4dd1]
+---------------------------------------- Current commit hash: [4fc4dd1] ----------------------------------------+
Building GCC for commit [4fc4dd1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4fc4dd1 * Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS) 	(STAGE_HOST_EXPORTS, BASE_TARGET_EXPORTS, RAW_CXX_TARGET_EXPORTS) 	(NORMAL_TARGET_EXPORTS): New macros.  Use them in all the recursive 	targets. 	* Makefile.in: Regenerate.
HEAD is now at 4fc4dd1 * Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS)
Note: checking out '4fc4dd1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4fc4dd1... * Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS) 	(STAGE_HOST_EXPORTS, BASE_TARGET_EXPORTS, RAW_CXX_TARGET_EXPORTS) 	(NORMAL_TARGET_EXPORTS): New macros.  Use them in all the recursive 	targets. 	* Makefile.in: Regenerate.
Deleted branch temp-test-branch (was 4fc4dd1).
Fail to build gcc for commit [4fc4dd1], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[3b48085e661950a1e6fdaf1997cda53ed8388064] rs6000.c (print_operand, <case 'z'>): Make sure that we are in INDIRECT mode when getting the stub name.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3b48085]
+---------------------------------------- Current commit hash: [3b48085] ----------------------------------------+
Building GCC for commit [3b48085]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3b48085 rs6000.c (print_operand, <case 'z'>): Make sure that we are in INDIRECT mode when getting the stub name.
HEAD is now at 3b48085 rs6000.c (print_operand, <case 'z'>): Make sure that we are in INDIRECT mode when getting the stub name.
Note: checking out '3b48085'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3b48085... rs6000.c (print_operand, <case 'z'>): Make sure that we are in INDIRECT mode when getting the stub name.
Deleted branch temp-test-branch (was 3b48085).
Fail to build gcc for commit [3b48085], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[d85428e234930c9d1352d1e5494b5b245dcd1a22] loop.c (loop_givs_reduce): Avoid miscompilation of loops entered at bottom.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d85428e]
+---------------------------------------- Current commit hash: [d85428e] ----------------------------------------+
Building GCC for commit [d85428e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d85428e loop.c (loop_givs_reduce): Avoid miscompilation of loops entered at bottom.
HEAD is now at d85428e loop.c (loop_givs_reduce): Avoid miscompilation of loops entered at bottom.
Note: checking out 'd85428e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d85428e... loop.c (loop_givs_reduce): Avoid miscompilation of loops entered at bottom.
Deleted branch temp-test-branch (was d85428e).
Fail to build gcc for commit [d85428e], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[5bbb9680379fdd9ac147a9e734c0b11d774c4e04] MAINTAINERS (Write After Approval): Add myself.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5bbb968]
+---------------------------------------- Current commit hash: [5bbb968] ----------------------------------------+
Building GCC for commit [5bbb968]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5bbb968 MAINTAINERS (Write After Approval): Add myself.
HEAD is now at 5bbb968 MAINTAINERS (Write After Approval): Add myself.
Note: checking out '5bbb968'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5bbb968... MAINTAINERS (Write After Approval): Add myself.
Deleted branch temp-test-branch (was 5bbb968).
Fail to build gcc for commit [5bbb968], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[8a36a0ccd84d73e8bfb5989be1510536b73b9df9] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8a36a0c]
+---------------------------------------- Current commit hash: [8a36a0c] ----------------------------------------+
Building GCC for commit [8a36a0c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8a36a0c [multiple changes]
HEAD is now at 8a36a0c [multiple changes]
Note: checking out '8a36a0c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8a36a0c... [multiple changes]
Deleted branch temp-test-branch (was 8a36a0c).
Fail to build gcc for commit [8a36a0c], skip this commit. Return 125.
Bisecting: 570 revisions left to test after this (roughly 9 steps)
[66a74d2a079df4c1945926eda5d482e88214a101] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [66a74d2]
+---------------------------------------- Current commit hash: [66a74d2] ----------------------------------------+
GCC for commit [66a74d2] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-66a74d2/bin/gcc with -O1:
0
Output of /tmp/gcc-66a74d2/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 66a74d2... [multiple changes]
[32m[     info][0m Current commit [66a74d2] is bad. Return value: 1

Bisecting: 564 revisions left to test after this (roughly 9 steps)
[646ca712a1d3d4b6642b8d9c3f0d24e463102b76] mips.h (MASK_DEBUG_G, [...]): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [646ca71]
+---------------------------------------- Current commit hash: [646ca71] ----------------------------------------+
Building GCC for commit [646ca71]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 646ca71 mips.h (MASK_DEBUG_G, [...]): Delete.
HEAD is now at 646ca71 mips.h (MASK_DEBUG_G, [...]): Delete.
Note: checking out '646ca71'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 646ca71... mips.h (MASK_DEBUG_G, [...]): Delete.
Deleted branch temp-test-branch (was 646ca71).
Fail to build gcc for commit [646ca71], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7b1b4aed94bc2787c2e8654bb7a678c56f96a214] gcse.c (record_set_info): Use predicates like REG_P.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7b1b4ae]
+---------------------------------------- Current commit hash: [7b1b4ae] ----------------------------------------+
Building GCC for commit [7b1b4ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7b1b4ae gcse.c (record_set_info): Use predicates like REG_P.
HEAD is now at 7b1b4ae gcse.c (record_set_info): Use predicates like REG_P.
Note: checking out '7b1b4ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7b1b4ae... gcse.c (record_set_info): Use predicates like REG_P.
Deleted branch temp-test-branch (was 7b1b4ae).
Fail to build gcc for commit [7b1b4ae], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[85b87c94afe309afc7be3fa3e5ad6e303affe2ea] Forgot to commit.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [85b87c9]
+---------------------------------------- Current commit hash: [85b87c9] ----------------------------------------+
Building GCC for commit [85b87c9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 85b87c9 Forgot to commit.
HEAD is now at 85b87c9 Forgot to commit.
Note: checking out '85b87c9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 85b87c9... Forgot to commit.
Deleted branch temp-test-branch (was 85b87c9).
Fail to build gcc for commit [85b87c9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9098a3ecee26d89fec8f055810988380a4d4580a] tree-ssa-operands.c (get_stmt_operands): Clear makes_aliased_loads and makes_aliased_stores.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9098a3e]
+---------------------------------------- Current commit hash: [9098a3e] ----------------------------------------+
Building GCC for commit [9098a3e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9098a3e tree-ssa-operands.c (get_stmt_operands): Clear makes_aliased_loads and makes_aliased_stores.
HEAD is now at 9098a3e tree-ssa-operands.c (get_stmt_operands): Clear makes_aliased_loads and makes_aliased_stores.
Note: checking out '9098a3e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9098a3e... tree-ssa-operands.c (get_stmt_operands): Clear makes_aliased_loads and makes_aliased_stores.
Deleted branch temp-test-branch (was 9098a3e).
Fail to build gcc for commit [9098a3e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62] Makefile.am: Remove references to types.m4.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c9e66ed]
+---------------------------------------- Current commit hash: [c9e66ed] ----------------------------------------+
Building GCC for commit [c9e66ed]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c9e66ed Makefile.am: Remove references to types.m4.
HEAD is now at c9e66ed Makefile.am: Remove references to types.m4.
Note: checking out 'c9e66ed'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c9e66ed... Makefile.am: Remove references to types.m4.
Deleted branch temp-test-branch (was c9e66ed).
Fail to build gcc for commit [c9e66ed], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3f35ff6f89136443eb1f2307001ee029ff7bab73] re PR libobjc/15901 (libobjc is not build shared if you do not supply --enable-shared)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3f35ff6]
+---------------------------------------- Current commit hash: [3f35ff6] ----------------------------------------+
Building GCC for commit [3f35ff6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3f35ff6 re PR libobjc/15901 (libobjc is not build shared if you do not supply --enable-shared)
HEAD is now at 3f35ff6 re PR libobjc/15901 (libobjc is not build shared if you do not supply --enable-shared)
Note: checking out '3f35ff6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3f35ff6... re PR libobjc/15901 (libobjc is not build shared if you do not supply --enable-shared)
Deleted branch temp-test-branch (was 3f35ff6).
Fail to build gcc for commit [3f35ff6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0f22079ec250534ffdc853b892162c160de8b302] Makefile.am: Define JAVA_EXT_DIRS.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0f22079]
+---------------------------------------- Current commit hash: [0f22079] ----------------------------------------+
Building GCC for commit [0f22079]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0f22079 Makefile.am: Define JAVA_EXT_DIRS.
HEAD is now at 0f22079 Makefile.am: Define JAVA_EXT_DIRS.
Note: checking out '0f22079'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0f22079... Makefile.am: Define JAVA_EXT_DIRS.
Deleted branch temp-test-branch (was 0f22079).
Fail to build gcc for commit [0f22079], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[da291c876347aad7c585d2a7fe8a463af74dd422] typeck2.c (abstract_virtual_errors): Reword diagnostics, make them appear at the correct location.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [da291c8]
+---------------------------------------- Current commit hash: [da291c8] ----------------------------------------+
Building GCC for commit [da291c8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: da291c8 typeck2.c (abstract_virtual_errors): Reword diagnostics, make them appear at the correct location.
HEAD is now at da291c8 typeck2.c (abstract_virtual_errors): Reword diagnostics, make them appear at the correct location.
Note: checking out 'da291c8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at da291c8... typeck2.c (abstract_virtual_errors): Reword diagnostics, make them appear at the correct location.
Deleted branch temp-test-branch (was da291c8).
Fail to build gcc for commit [da291c8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[52fe4de8a3f1afcefdad091977f9b1a21b92a5a1] reorg.c (delete_from_delay_slot): If we have a barrier after the sequence containing the insn to be deleted...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [52fe4de]
+---------------------------------------- Current commit hash: [52fe4de] ----------------------------------------+
Building GCC for commit [52fe4de]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 52fe4de reorg.c (delete_from_delay_slot): If we have a barrier after the sequence containing the insn to be deleted...
HEAD is now at 52fe4de reorg.c (delete_from_delay_slot): If we have a barrier after the sequence containing the insn to be deleted...
Note: checking out '52fe4de'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 52fe4de... reorg.c (delete_from_delay_slot): If we have a barrier after the sequence containing the insn to be deleted...
Deleted branch temp-test-branch (was 52fe4de).
Fail to build gcc for commit [52fe4de], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[785287145e15dab88c193434e6d07b68b4870783] Makefile.in (EXPR_H): Add insn-config.h...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7852871]
+---------------------------------------- Current commit hash: [7852871] ----------------------------------------+
Building GCC for commit [7852871]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7852871 Makefile.in (EXPR_H): Add insn-config.h...
HEAD is now at 7852871 Makefile.in (EXPR_H): Add insn-config.h...
Note: checking out '7852871'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7852871... Makefile.in (EXPR_H): Add insn-config.h...
Deleted branch temp-test-branch (was 7852871).
Fail to build gcc for commit [7852871], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b953ebd647221fbd17b033b90eaa5503e66b0019] fold-const.c (fold, [...]): Use fold_convert instead of convert.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b953ebd]
+---------------------------------------- Current commit hash: [b953ebd] ----------------------------------------+
Building GCC for commit [b953ebd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b953ebd fold-const.c (fold, [...]): Use fold_convert instead of convert.
HEAD is now at b953ebd fold-const.c (fold, [...]): Use fold_convert instead of convert.
Note: checking out 'b953ebd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b953ebd... fold-const.c (fold, [...]): Use fold_convert instead of convert.
Deleted branch temp-test-branch (was b953ebd).
Fail to build gcc for commit [b953ebd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[373614fc05ef1fedb9b53e2846a58558e6572b31] Fix typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [373614f]
+---------------------------------------- Current commit hash: [373614f] ----------------------------------------+
Building GCC for commit [373614f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 373614f Fix typos.
HEAD is now at 373614f Fix typos.
Note: checking out '373614f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 373614f... Fix typos.
Deleted branch temp-test-branch (was 373614f).
Fail to build gcc for commit [373614f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[21fdfcc12c75a3ad3b0b4f2a3053f183941710d5] check.c (gfc_check_system_clock): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [21fdfcc]
+---------------------------------------- Current commit hash: [21fdfcc] ----------------------------------------+
Building GCC for commit [21fdfcc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 21fdfcc check.c (gfc_check_system_clock): New function.
HEAD is now at 21fdfcc check.c (gfc_check_system_clock): New function.
Note: checking out '21fdfcc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 21fdfcc... check.c (gfc_check_system_clock): New function.
Deleted branch temp-test-branch (was 21fdfcc).
Fail to build gcc for commit [21fdfcc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[33300a2eba5bb060fe7aa5f9ff8c3930f6ecdfac] * config/i386/winnt.c (i386_pe_output_labelref); Correct 	misplaced ')'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [33300a2]
+---------------------------------------- Current commit hash: [33300a2] ----------------------------------------+
Building GCC for commit [33300a2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 33300a2 * config/i386/winnt.c (i386_pe_output_labelref); Correct 	misplaced ')'.
HEAD is now at 33300a2 * config/i386/winnt.c (i386_pe_output_labelref); Correct
Note: checking out '33300a2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 33300a2... * config/i386/winnt.c (i386_pe_output_labelref); Correct 	misplaced ')'.
Deleted branch temp-test-branch (was 33300a2).
Fail to build gcc for commit [33300a2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[67a69e82e9ba0cd0b940a9fce7e336225e312ccd] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67a69e8]
+---------------------------------------- Current commit hash: [67a69e8] ----------------------------------------+
Building GCC for commit [67a69e8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67a69e8 [multiple changes]
HEAD is now at 67a69e8 [multiple changes]
Note: checking out '67a69e8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67a69e8... [multiple changes]
Deleted branch temp-test-branch (was 67a69e8).
Fail to build gcc for commit [67a69e8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0e5b7cfaabe3016b8fdbdb58306797198348aec8] revert: re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0e5b7cf]
+---------------------------------------- Current commit hash: [0e5b7cf] ----------------------------------------+
Building GCC for commit [0e5b7cf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0e5b7cf revert: re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
HEAD is now at 0e5b7cf revert: re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
Note: checking out '0e5b7cf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0e5b7cf... revert: re PR c++/15815 (Update #pragma interface and #pragma implementation documentation.)
Deleted branch temp-test-branch (was 0e5b7cf).
Fail to build gcc for commit [0e5b7cf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[90fe9afdbd90e910529a6cbdf2e5582382d27989] re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [90fe9af]
+---------------------------------------- Current commit hash: [90fe9af] ----------------------------------------+
Building GCC for commit [90fe9af]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 90fe9af re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
HEAD is now at 90fe9af re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
Note: checking out '90fe9af'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 90fe9af... re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
Deleted branch temp-test-branch (was 90fe9af).
Fail to build gcc for commit [90fe9af], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[92efec6ec51ced8c2e2ac5c222645f6757592f32] crossconfig.m4: Remove signbit, signbitf, signbitl.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [92efec6]
+---------------------------------------- Current commit hash: [92efec6] ----------------------------------------+
Building GCC for commit [92efec6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 92efec6 crossconfig.m4: Remove signbit, signbitf, signbitl.
HEAD is now at 92efec6 crossconfig.m4: Remove signbit, signbitf, signbitl.
Note: checking out '92efec6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 92efec6... crossconfig.m4: Remove signbit, signbitf, signbitl.
Deleted branch temp-test-branch (was 92efec6).
Fail to build gcc for commit [92efec6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f44272eef7d8d7945fd038db1b1c383ffad24ba7] tree-ssa-pre.c (compute_avail): Value number uses as well.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f44272e]
+---------------------------------------- Current commit hash: [f44272e] ----------------------------------------+
Building GCC for commit [f44272e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f44272e tree-ssa-pre.c (compute_avail): Value number uses as well.
HEAD is now at f44272e tree-ssa-pre.c (compute_avail): Value number uses as well.
Note: checking out 'f44272e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f44272e... tree-ssa-pre.c (compute_avail): Value number uses as well.
Deleted branch temp-test-branch (was f44272e).
Fail to build gcc for commit [f44272e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3e31938b23d6028127e31bd5e06f53f6ec1b4d97] Fix date on ChangeLog entry from previous commit
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3e31938]
+---------------------------------------- Current commit hash: [3e31938] ----------------------------------------+
Building GCC for commit [3e31938]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3e31938 Fix date on ChangeLog entry from previous commit
HEAD is now at 3e31938 Fix date on ChangeLog entry from previous commit
Note: checking out '3e31938'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3e31938... Fix date on ChangeLog entry from previous commit
Deleted branch temp-test-branch (was 3e31938).
Fail to build gcc for commit [3e31938], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2f52c5316a90890e8185408429aca0dd331f9728] cfgcleanup.c (try_simplify_condjump): Update test to make sure we have a conditional branch around am unconditional...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f52c53]
+---------------------------------------- Current commit hash: [2f52c53] ----------------------------------------+
Building GCC for commit [2f52c53]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f52c53 cfgcleanup.c (try_simplify_condjump): Update test to make sure we have a conditional branch around am unconditional...
HEAD is now at 2f52c53 cfgcleanup.c (try_simplify_condjump): Update test to make sure we have a conditional branch around am unconditional...
Note: checking out '2f52c53'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f52c53... cfgcleanup.c (try_simplify_condjump): Update test to make sure we have a conditional branch around am unconditional...
Deleted branch temp-test-branch (was 2f52c53).
Fail to build gcc for commit [2f52c53], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[00dd8ca593fe7cb656195283796c158dcef486c6] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [00dd8ca]
+---------------------------------------- Current commit hash: [00dd8ca] ----------------------------------------+
Building GCC for commit [00dd8ca]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 00dd8ca Daily bump.
HEAD is now at 00dd8ca Daily bump.
Note: checking out '00dd8ca'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 00dd8ca... Daily bump.
Deleted branch temp-test-branch (was 00dd8ca).
Fail to build gcc for commit [00dd8ca], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3e97fe67e31070b78a333dba397ab4ddde2e7311] * g++.dg/abi/bitfield3.C: Add comment..
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3e97fe6]
+---------------------------------------- Current commit hash: [3e97fe6] ----------------------------------------+
Building GCC for commit [3e97fe6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3e97fe6 * g++.dg/abi/bitfield3.C: Add comment..
HEAD is now at 3e97fe6 * g++.dg/abi/bitfield3.C: Add comment..
Note: checking out '3e97fe6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3e97fe6... * g++.dg/abi/bitfield3.C: Add comment..
Deleted branch temp-test-branch (was 3e97fe6).
Fail to build gcc for commit [3e97fe6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[78ff5eeaacade93ea0e8dcb22a448b06dc568b45] * gcc_release (DIFF): Remove -3 option.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [78ff5ee]
+---------------------------------------- Current commit hash: [78ff5ee] ----------------------------------------+
Building GCC for commit [78ff5ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 78ff5ee * gcc_release (DIFF): Remove -3 option.
HEAD is now at 78ff5ee * gcc_release (DIFF): Remove -3 option.
Note: checking out '78ff5ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 78ff5ee... * gcc_release (DIFF): Remove -3 option.
Deleted branch temp-test-branch (was 78ff5ee).
Fail to build gcc for commit [78ff5ee], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[844f5ccfbb1871ca4540de222210d364c5ce304b] * gcc.dg/arm-mmx-1.c: Use asm to clobber registers.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [844f5cc]
+---------------------------------------- Current commit hash: [844f5cc] ----------------------------------------+
Building GCC for commit [844f5cc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 844f5cc * gcc.dg/arm-mmx-1.c: Use asm to clobber registers.
HEAD is now at 844f5cc * gcc.dg/arm-mmx-1.c: Use asm to clobber registers.
Note: checking out '844f5cc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 844f5cc... * gcc.dg/arm-mmx-1.c: Use asm to clobber registers.
Deleted branch temp-test-branch (was 844f5cc).
Fail to build gcc for commit [844f5cc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d168da7484c329c59021cadbd34c24844c6466ce] 2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d168da7]
+---------------------------------------- Current commit hash: [d168da7] ----------------------------------------+
Building GCC for commit [d168da7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d168da7 2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>
HEAD is now at d168da7 2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>
Note: checking out 'd168da7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d168da7... 2004-06-26  Andreas Tobler  <a.tobler@schweiz.ch>
Deleted branch temp-test-branch (was d168da7).
Fail to build gcc for commit [d168da7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[608cb764bbe79671cb4a426781adcfcf9feb6a2d] acinclude.m4: Quote first argument of AC_DEFUNs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [608cb76]
+---------------------------------------- Current commit hash: [608cb76] ----------------------------------------+
Building GCC for commit [608cb76]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 608cb76 acinclude.m4: Quote first argument of AC_DEFUNs.
HEAD is now at 608cb76 acinclude.m4: Quote first argument of AC_DEFUNs.
Note: checking out '608cb76'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 608cb76... acinclude.m4: Quote first argument of AC_DEFUNs.
Deleted branch temp-test-branch (was 608cb76).
Fail to build gcc for commit [608cb76], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f71bc914e6ea87e729459937bb7224a02da4b0a4] * doc/tree-ssa.texi: Document info about MODIFY_EXPR's type
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f71bc91]
+---------------------------------------- Current commit hash: [f71bc91] ----------------------------------------+
Building GCC for commit [f71bc91]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f71bc91 * doc/tree-ssa.texi: Document info about MODIFY_EXPR's type
HEAD is now at f71bc91 * doc/tree-ssa.texi: Document info about MODIFY_EXPR's type
Note: checking out 'f71bc91'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f71bc91... * doc/tree-ssa.texi: Document info about MODIFY_EXPR's type
Deleted branch temp-test-branch (was f71bc91).
Fail to build gcc for commit [f71bc91], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e851b37384697a3f27e7a6eca391d25fc8ce9b60] * c-common.c (fname_as_string): Fix xcalloc to xmalloc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e851b37]
+---------------------------------------- Current commit hash: [e851b37] ----------------------------------------+
Building GCC for commit [e851b37]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e851b37 * c-common.c (fname_as_string): Fix xcalloc to xmalloc.
HEAD is now at e851b37 * c-common.c (fname_as_string): Fix xcalloc to xmalloc.
Note: checking out 'e851b37'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e851b37... * c-common.c (fname_as_string): Fix xcalloc to xmalloc.
Deleted branch temp-test-branch (was e851b37).
Fail to build gcc for commit [e851b37], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ade83c33bdb550eeaa645f9e170c0dc54940cb3f] m68k.h: Restore valid comment removed by mistake with the recent m68k comments cleanup.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ade83c3]
+---------------------------------------- Current commit hash: [ade83c3] ----------------------------------------+
Building GCC for commit [ade83c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ade83c3 m68k.h: Restore valid comment removed by mistake with the recent m68k comments cleanup.
HEAD is now at ade83c3 m68k.h: Restore valid comment removed by mistake with the recent m68k comments cleanup.
Note: checking out 'ade83c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ade83c3... m68k.h: Restore valid comment removed by mistake with the recent m68k comments cleanup.
Deleted branch temp-test-branch (was ade83c3).
Fail to build gcc for commit [ade83c3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f659a11ff2646ef5a01ebd12128e73247d217c82] Typo in last patch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f659a11]
+---------------------------------------- Current commit hash: [f659a11] ----------------------------------------+
Building GCC for commit [f659a11]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f659a11 Typo in last patch.
HEAD is now at f659a11 Typo in last patch.
Note: checking out 'f659a11'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f659a11... Typo in last patch.
Deleted branch temp-test-branch (was f659a11).
Fail to build gcc for commit [f659a11], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7120d046258a99e63278d0cd3c7f649259c3ef57] Minor whitespace changes
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7120d04]
+---------------------------------------- Current commit hash: [7120d04] ----------------------------------------+
Building GCC for commit [7120d04]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7120d04 Minor whitespace changes
HEAD is now at 7120d04 Minor whitespace changes
Note: checking out '7120d04'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7120d04... Minor whitespace changes
Deleted branch temp-test-branch (was 7120d04).
Fail to build gcc for commit [7120d04], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9e953fed92f75f63acb652eb8b2c3b3245ca24fc] gcc_update (libbanshee/configure): Depend on libbanshee/configure.ac instead of libbanshee/configure.in
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9e953fe]
+---------------------------------------- Current commit hash: [9e953fe] ----------------------------------------+
Building GCC for commit [9e953fe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9e953fe gcc_update (libbanshee/configure): Depend on libbanshee/configure.ac instead of libbanshee/configure.in
HEAD is now at 9e953fe gcc_update (libbanshee/configure): Depend on libbanshee/configure.ac instead of libbanshee/configure.in
Note: checking out '9e953fe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9e953fe... gcc_update (libbanshee/configure): Depend on libbanshee/configure.ac instead of libbanshee/configure.in
Deleted branch temp-test-branch (was 9e953fe).
Fail to build gcc for commit [9e953fe], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[feb357a3360f03fa3439b437c0d255be0c14e54b] re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [feb357a]
+---------------------------------------- Current commit hash: [feb357a] ----------------------------------------+
Building GCC for commit [feb357a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: feb357a re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
HEAD is now at feb357a re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
Note: checking out 'feb357a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at feb357a... re PR fortran/13826 (Derived types in DATA statements not PARAMETERs)
Deleted branch temp-test-branch (was feb357a).
Fail to build gcc for commit [feb357a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[289f9db7db45a044bfc59831b56e25cb4aa2e7c8] 2004-05-30  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [289f9db]
+---------------------------------------- Current commit hash: [289f9db] ----------------------------------------+
Building GCC for commit [289f9db]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 289f9db 2004-05-30  Michael Koch  <konqueror@gmx.de>
HEAD is now at 289f9db 2004-05-30  Michael Koch  <konqueror@gmx.de>
Note: checking out '289f9db'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 289f9db... 2004-05-30  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 289f9db).
Fail to build gcc for commit [289f9db], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[11ac38b22e3f3de50a968364c86c1430e56627ac] rs6000.c (rs6000_use_dfa_pipeline_interface): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [11ac38b]
+---------------------------------------- Current commit hash: [11ac38b] ----------------------------------------+
Building GCC for commit [11ac38b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 11ac38b rs6000.c (rs6000_use_dfa_pipeline_interface): Delete.
HEAD is now at 11ac38b rs6000.c (rs6000_use_dfa_pipeline_interface): Delete.
Note: checking out '11ac38b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 11ac38b... rs6000.c (rs6000_use_dfa_pipeline_interface): Delete.
Deleted branch temp-test-branch (was 11ac38b).
Fail to build gcc for commit [11ac38b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[78dd5e36d94ddb4b38c5be38d2bbb56ada470b81] config-ml.in: Pass FFLAGS and ADAFLAGS for multilibs, handle F77 like CC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [78dd5e3]
+---------------------------------------- Current commit hash: [78dd5e3] ----------------------------------------+
Building GCC for commit [78dd5e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 78dd5e3 config-ml.in: Pass FFLAGS and ADAFLAGS for multilibs, handle F77 like CC.
HEAD is now at 78dd5e3 config-ml.in: Pass FFLAGS and ADAFLAGS for multilibs, handle F77 like CC.
Note: checking out '78dd5e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 78dd5e3... config-ml.in: Pass FFLAGS and ADAFLAGS for multilibs, handle F77 like CC.
Deleted branch temp-test-branch (was 78dd5e3).
Fail to build gcc for commit [78dd5e3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f241bf89479214a544e12446b52eb9d89869aebe] rs6000.md (*insvsi_internal5/6): New patterns.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f241bf8]
+---------------------------------------- Current commit hash: [f241bf8] ----------------------------------------+
Building GCC for commit [f241bf8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f241bf8 rs6000.md (*insvsi_internal5/6): New patterns.
HEAD is now at f241bf8 rs6000.md (*insvsi_internal5/6): New patterns.
Note: checking out 'f241bf8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f241bf8... rs6000.md (*insvsi_internal5/6): New patterns.
Deleted branch temp-test-branch (was f241bf8).
Fail to build gcc for commit [f241bf8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[58128b9da11df305d8e631bcbbaa6aad2ad970d6] SequenceInputStream.java: Rename enum to e because enum is a keyword in Java 1.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [58128b9]
+---------------------------------------- Current commit hash: [58128b9] ----------------------------------------+
Building GCC for commit [58128b9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 58128b9 SequenceInputStream.java: Rename enum to e because enum is a keyword in Java 1.5.
HEAD is now at 58128b9 SequenceInputStream.java: Rename enum to e because enum is a keyword in Java 1.5.
Note: checking out '58128b9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 58128b9... SequenceInputStream.java: Rename enum to e because enum is a keyword in Java 1.5.
Deleted branch temp-test-branch (was 58128b9).
Fail to build gcc for commit [58128b9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6bb1041efd25b13d412ca201ccdb98461e96799e] mn10300.md (movdi, movdf): Use high/low for movu operands.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6bb1041]
+---------------------------------------- Current commit hash: [6bb1041] ----------------------------------------+
Building GCC for commit [6bb1041]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6bb1041 mn10300.md (movdi, movdf): Use high/low for movu operands.
HEAD is now at 6bb1041 mn10300.md (movdi, movdf): Use high/low for movu operands.
Note: checking out '6bb1041'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6bb1041... mn10300.md (movdi, movdf): Use high/low for movu operands.
Deleted branch temp-test-branch (was 6bb1041).
Fail to build gcc for commit [6bb1041], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[55c452262a4de89684ce4c06d785af3cbd389fc4] install.text (--enable-shared): Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [55c4522]
+---------------------------------------- Current commit hash: [55c4522] ----------------------------------------+
Building GCC for commit [55c4522]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 55c4522 install.text (--enable-shared): Fix typo.
HEAD is now at 55c4522 install.text (--enable-shared): Fix typo.
Note: checking out '55c4522'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 55c4522... install.text (--enable-shared): Fix typo.
Deleted branch temp-test-branch (was 55c4522).
Fail to build gcc for commit [55c4522], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[44de5aeb00a66307236cb5b7ccfca1a21aaca080] alias.c (adjust_offset_for_component_ref): Use component_ref_field_offset.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [44de5ae]
+---------------------------------------- Current commit hash: [44de5ae] ----------------------------------------+
Building GCC for commit [44de5ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 44de5ae alias.c (adjust_offset_for_component_ref): Use component_ref_field_offset.
HEAD is now at 44de5ae alias.c (adjust_offset_for_component_ref): Use component_ref_field_offset.
Note: checking out '44de5ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 44de5ae... alias.c (adjust_offset_for_component_ref): Use component_ref_field_offset.
Deleted branch temp-test-branch (was 44de5ae).
Fail to build gcc for commit [44de5ae], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5453d5bde8413766efffff9fc5e3205fea13bc7b] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5453d5b]
+---------------------------------------- Current commit hash: [5453d5b] ----------------------------------------+
Building GCC for commit [5453d5b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5453d5b [multiple changes]
HEAD is now at 5453d5b [multiple changes]
Note: checking out '5453d5b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5453d5b... [multiple changes]
Deleted branch temp-test-branch (was 5453d5b).
Fail to build gcc for commit [5453d5b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[dc44e18a62f2bb07638dbd467c2df88c58424346] re PR c/14171 (Bootstrap (--enable-intermodule) dies with reg-stack.c:235: error: 'nan' redeclared as different kind of symbol)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dc44e18a]
+---------------------------------------- Current commit hash: [dc44e18a] ----------------------------------------+
Building GCC for commit [dc44e18a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dc44e18a re PR c/14171 (Bootstrap (--enable-intermodule) dies with reg-stack.c:235: error: 'nan' redeclared as different kind of symbol)
HEAD is now at dc44e18a re PR c/14171 (Bootstrap (--enable-intermodule) dies with reg-stack.c:235: error: 'nan' redeclared as different kind of symbol)
Note: checking out 'dc44e18a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dc44e18a... re PR c/14171 (Bootstrap (--enable-intermodule) dies with reg-stack.c:235: error: 'nan' redeclared as different kind of symbol)
Deleted branch temp-test-branch (was dc44e18a).
Fail to build gcc for commit [dc44e18a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c4ec6988bc930288ea6c7fa2ec67a6cfbd0c0d73] Also credit Peter Jakubek for last patch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c4ec698]
+---------------------------------------- Current commit hash: [c4ec698] ----------------------------------------+
Building GCC for commit [c4ec698]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c4ec698 Also credit Peter Jakubek for last patch.
HEAD is now at c4ec698 Also credit Peter Jakubek for last patch.
Note: checking out 'c4ec698'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c4ec698... Also credit Peter Jakubek for last patch.
Deleted branch temp-test-branch (was c4ec698).
Fail to build gcc for commit [c4ec698], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9127884102347420f8185b819c137610b7e51126] re PR middle-end/16089 (unwind-dw2.c:1311: error: insn outside basic block)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9127884]
+---------------------------------------- Current commit hash: [9127884] ----------------------------------------+
Building GCC for commit [9127884]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9127884 re PR middle-end/16089 (unwind-dw2.c:1311: error: insn outside basic block)
HEAD is now at 9127884 re PR middle-end/16089 (unwind-dw2.c:1311: error: insn outside basic block)
Note: checking out '9127884'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9127884... re PR middle-end/16089 (unwind-dw2.c:1311: error: insn outside basic block)
Deleted branch temp-test-branch (was 9127884).
Fail to build gcc for commit [9127884], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[339586c817ea6e5481d1d10f604f50c81ead3645] re PR libmudflap/13505 ([tree-ssa] libmudflap mf-hooks2.c build failure on cygwin)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [339586c]
+---------------------------------------- Current commit hash: [339586c] ----------------------------------------+
Building GCC for commit [339586c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 339586c re PR libmudflap/13505 ([tree-ssa] libmudflap mf-hooks2.c build failure on cygwin)
HEAD is now at 339586c re PR libmudflap/13505 ([tree-ssa] libmudflap mf-hooks2.c build failure on cygwin)
Note: checking out '339586c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 339586c... re PR libmudflap/13505 ([tree-ssa] libmudflap mf-hooks2.c build failure on cygwin)
Deleted branch temp-test-branch (was 339586c).
Fail to build gcc for commit [339586c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bc443e6def9f79e0fbfa1d3b70e59a158c85ebd9] invoke.texi: Remove obsolete comment regarding PA 2.0 support in binutils.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bc443e6]
+---------------------------------------- Current commit hash: [bc443e6] ----------------------------------------+
Building GCC for commit [bc443e6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bc443e6 invoke.texi: Remove obsolete comment regarding PA 2.0 support in binutils.
HEAD is now at bc443e6 invoke.texi: Remove obsolete comment regarding PA 2.0 support in binutils.
Note: checking out 'bc443e6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bc443e6... invoke.texi: Remove obsolete comment regarding PA 2.0 support in binutils.
Deleted branch temp-test-branch (was bc443e6).
Fail to build gcc for commit [bc443e6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1201ebed5a36e1d766b951e7b51fdae7784a7e25] clean up obsolete comment
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1201ebe]
+---------------------------------------- Current commit hash: [1201ebe] ----------------------------------------+
Building GCC for commit [1201ebe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1201ebe clean up obsolete comment
HEAD is now at 1201ebe clean up obsolete comment
Note: checking out '1201ebe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1201ebe... clean up obsolete comment
Deleted branch temp-test-branch (was 1201ebe).
Fail to build gcc for commit [1201ebe], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b672076889e2bf7666cea2bb817c2be541622c29] re PR fortran/13249 (Error when using COMMON)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b672076]
+---------------------------------------- Current commit hash: [b672076] ----------------------------------------+
Building GCC for commit [b672076]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b672076 re PR fortran/13249 (Error when using COMMON)
HEAD is now at b672076 re PR fortran/13249 (Error when using COMMON)
Note: checking out 'b672076'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b672076... re PR fortran/13249 (Error when using COMMON)
Deleted branch temp-test-branch (was b672076).
Fail to build gcc for commit [b672076], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bb394606fd725089772c6b03e8c2f8847b400b61] * expmed.c (emit_store_flag): Cope with FLOAT_STORE_FLAG_VALUE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bb39460]
+---------------------------------------- Current commit hash: [bb39460] ----------------------------------------+
Building GCC for commit [bb39460]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bb39460 * expmed.c (emit_store_flag): Cope with FLOAT_STORE_FLAG_VALUE.
HEAD is now at bb39460 * expmed.c (emit_store_flag): Cope with FLOAT_STORE_FLAG_VALUE.
Note: checking out 'bb39460'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bb39460... * expmed.c (emit_store_flag): Cope with FLOAT_STORE_FLAG_VALUE.
Deleted branch temp-test-branch (was bb39460).
Fail to build gcc for commit [bb39460], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[70c18d9772113dcf36a386f7950bd65bf67a8b23] fix typo
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [70c18d9]
+---------------------------------------- Current commit hash: [70c18d9] ----------------------------------------+
Building GCC for commit [70c18d9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 70c18d9 fix typo
HEAD is now at 70c18d9 fix typo
Note: checking out '70c18d9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 70c18d9... fix typo
Deleted branch temp-test-branch (was 70c18d9).
Fail to build gcc for commit [70c18d9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[62b857eabfaedc1e5f9c824d0d508ac4a6005d9b] basic-block.h (struct edge_def): Add goto_locus.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [62b857e]
+---------------------------------------- Current commit hash: [62b857e] ----------------------------------------+
Building GCC for commit [62b857e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 62b857e basic-block.h (struct edge_def): Add goto_locus.
HEAD is now at 62b857e basic-block.h (struct edge_def): Add goto_locus.
Note: checking out '62b857e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 62b857e... basic-block.h (struct edge_def): Add goto_locus.
Deleted branch temp-test-branch (was 62b857e).
Fail to build gcc for commit [62b857e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2df6cea5dc471c577065eaacce5a75658861009f] cfgbuild.c (make_edges): Do not use label_value_list.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2df6cea]
+---------------------------------------- Current commit hash: [2df6cea] ----------------------------------------+
Building GCC for commit [2df6cea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2df6cea cfgbuild.c (make_edges): Do not use label_value_list.
HEAD is now at 2df6cea cfgbuild.c (make_edges): Do not use label_value_list.
Note: checking out '2df6cea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2df6cea... cfgbuild.c (make_edges): Do not use label_value_list.
Deleted branch temp-test-branch (was 2df6cea).
Fail to build gcc for commit [2df6cea], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[859711c519c44dfd3fbe764d5ab508a8c7789dc3] m68k.h: Remove comments copied over from tm.texi.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [859711c]
+---------------------------------------- Current commit hash: [859711c] ----------------------------------------+
Building GCC for commit [859711c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 859711c m68k.h: Remove comments copied over from tm.texi.
HEAD is now at 859711c m68k.h: Remove comments copied over from tm.texi.
Note: checking out '859711c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 859711c... m68k.h: Remove comments copied over from tm.texi.
Deleted branch temp-test-branch (was 859711c).
Fail to build gcc for commit [859711c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[11338cda74ae54f5f8a86a271bcd04cb604ec806] Updated AVR -mint8 option and set proper 64-bit type
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [11338cd]
+---------------------------------------- Current commit hash: [11338cd] ----------------------------------------+
Building GCC for commit [11338cd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 11338cd Updated AVR -mint8 option and set proper 64-bit type
HEAD is now at 11338cd Updated AVR -mint8 option and set proper 64-bit type
Note: checking out '11338cd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 11338cd... Updated AVR -mint8 option and set proper 64-bit type
Deleted branch temp-test-branch (was 11338cd).
Fail to build gcc for commit [11338cd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d7777192b6d769f3a7312a8eb7856e0db41002d9] modulo-sched.c: Compile only when INSN_SCHEDULING is defined.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d777719]
+---------------------------------------- Current commit hash: [d777719] ----------------------------------------+
Building GCC for commit [d777719]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d777719 modulo-sched.c: Compile only when INSN_SCHEDULING is defined.
HEAD is now at d777719 modulo-sched.c: Compile only when INSN_SCHEDULING is defined.
Note: checking out 'd777719'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d777719... modulo-sched.c: Compile only when INSN_SCHEDULING is defined.
Deleted branch temp-test-branch (was d777719).
Fail to build gcc for commit [d777719], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ff65de76d08fd68772142066882fc2da9f4ddf6e] re PR libobjc/11572 (GNU libobjc no longer compiled on Darwin)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ff65de7]
+---------------------------------------- Current commit hash: [ff65de7] ----------------------------------------+
Building GCC for commit [ff65de7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ff65de7 re PR libobjc/11572 (GNU libobjc no longer compiled on Darwin)
HEAD is now at ff65de7 re PR libobjc/11572 (GNU libobjc no longer compiled on Darwin)
Note: checking out 'ff65de7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ff65de7... re PR libobjc/11572 (GNU libobjc no longer compiled on Darwin)
Deleted branch temp-test-branch (was ff65de7).
Fail to build gcc for commit [ff65de7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b51fa00f4ec185801655336e8d76b584063e69c1] Makefile.am (LIBICONV): Declare.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b51fa00]
+---------------------------------------- Current commit hash: [b51fa00] ----------------------------------------+
Building GCC for commit [b51fa00]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b51fa00 Makefile.am (LIBICONV): Declare.
HEAD is now at b51fa00 Makefile.am (LIBICONV): Declare.
Note: checking out 'b51fa00'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b51fa00... Makefile.am (LIBICONV): Declare.
Deleted branch temp-test-branch (was b51fa00).
Fail to build gcc for commit [b51fa00], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2140214f631a6ec8a4cd9c45e1001a5a40fef5e7] re PR libgcj/8321 (SimpleTimeZone doesn't work properly for daylight saving time.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2140214]
+---------------------------------------- Current commit hash: [2140214] ----------------------------------------+
Building GCC for commit [2140214]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2140214 re PR libgcj/8321 (SimpleTimeZone doesn't work properly for daylight saving time.)
HEAD is now at 2140214 re PR libgcj/8321 (SimpleTimeZone doesn't work properly for daylight saving time.)
Note: checking out '2140214'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2140214... re PR libgcj/8321 (SimpleTimeZone doesn't work properly for daylight saving time.)
Deleted branch temp-test-branch (was 2140214).
Fail to build gcc for commit [2140214], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3e14aaa2aa50a8ef28da096379f33e776c544d93] re PR libfortran/16196 (gfortran fails to create file with OPEN(...,status='REPLACE'))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3e14aaa]
+---------------------------------------- Current commit hash: [3e14aaa] ----------------------------------------+
Building GCC for commit [3e14aaa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3e14aaa re PR libfortran/16196 (gfortran fails to create file with OPEN(...,status='REPLACE'))
HEAD is now at 3e14aaa re PR libfortran/16196 (gfortran fails to create file with OPEN(...,status='REPLACE'))
Note: checking out '3e14aaa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3e14aaa... re PR libfortran/16196 (gfortran fails to create file with OPEN(...,status='REPLACE'))
Deleted branch temp-test-branch (was 3e14aaa).
Fail to build gcc for commit [3e14aaa], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7c50e202bc44878533a9eec75fed6c1744e0a281] expr.c (store_constructor): Restore sanity check on the size of the type before clearing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c50e20]
+---------------------------------------- Current commit hash: [7c50e20] ----------------------------------------+
Building GCC for commit [7c50e20]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c50e20 expr.c (store_constructor): Restore sanity check on the size of the type before clearing.
HEAD is now at 7c50e20 expr.c (store_constructor): Restore sanity check on the size of the type before clearing.
Note: checking out '7c50e20'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c50e20... expr.c (store_constructor): Restore sanity check on the size of the type before clearing.
Deleted branch temp-test-branch (was 7c50e20).
Fail to build gcc for commit [7c50e20], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[30107ebef8976647bff8c48911202b6cc13d989e] btest-gcc.sh: Remove g77.sum from TESTLOGS.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [30107eb]
+---------------------------------------- Current commit hash: [30107eb] ----------------------------------------+
Building GCC for commit [30107eb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 30107eb btest-gcc.sh: Remove g77.sum from TESTLOGS.
HEAD is now at 30107eb btest-gcc.sh: Remove g77.sum from TESTLOGS.
Note: checking out '30107eb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 30107eb... btest-gcc.sh: Remove g77.sum from TESTLOGS.
Deleted branch temp-test-branch (was 30107eb).
Fail to build gcc for commit [30107eb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1f28d17529b61cbaa62098a1b00b5818e29bc600] * gccbug.in: Update optimization -> tree-optimization/rtl-optimization.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1f28d17]
+---------------------------------------- Current commit hash: [1f28d17] ----------------------------------------+
Building GCC for commit [1f28d17]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1f28d17 * gccbug.in: Update optimization -> tree-optimization/rtl-optimization.
HEAD is now at 1f28d17 * gccbug.in: Update optimization -> tree-optimization/rtl-optimization.
Note: checking out '1f28d17'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1f28d17... * gccbug.in: Update optimization -> tree-optimization/rtl-optimization.
Deleted branch temp-test-branch (was 1f28d17).
Fail to build gcc for commit [1f28d17], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c9ecc33602fcfe7f35b96b8d75435d9c0c8f5d00] * java-gimplify.c (java_gimplify_expr): Correct minor typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c9ecc33]
+---------------------------------------- Current commit hash: [c9ecc33] ----------------------------------------+
Building GCC for commit [c9ecc33]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c9ecc33 * java-gimplify.c (java_gimplify_expr): Correct minor typos.
HEAD is now at c9ecc33 * java-gimplify.c (java_gimplify_expr): Correct minor typos.
Note: checking out 'c9ecc33'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c9ecc33... * java-gimplify.c (java_gimplify_expr): Correct minor typos.
Deleted branch temp-test-branch (was c9ecc33).
Fail to build gcc for commit [c9ecc33], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6b1db06ffd30a38480ac32a12ee9b665721ac147] altivec-15.c: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6b1db06]
+---------------------------------------- Current commit hash: [6b1db06] ----------------------------------------+
Building GCC for commit [6b1db06]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6b1db06 altivec-15.c: New test.
HEAD is now at 6b1db06 altivec-15.c: New test.
Note: checking out '6b1db06'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6b1db06... altivec-15.c: New test.
Deleted branch temp-test-branch (was 6b1db06).
Fail to build gcc for commit [6b1db06], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0c3b8d135d94e03d34a137a13857436be536ac66] fold-const.c (fold_addr_expr_with_type): Look through all valid LHS modifiers to find a base to mark addressable.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0c3b8d1]
+---------------------------------------- Current commit hash: [0c3b8d1] ----------------------------------------+
Building GCC for commit [0c3b8d1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0c3b8d1 fold-const.c (fold_addr_expr_with_type): Look through all valid LHS modifiers to find a base to mark addressable.
HEAD is now at 0c3b8d1 fold-const.c (fold_addr_expr_with_type): Look through all valid LHS modifiers to find a base to mark addressable.
Note: checking out '0c3b8d1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0c3b8d1... fold-const.c (fold_addr_expr_with_type): Look through all valid LHS modifiers to find a base to mark addressable.
Deleted branch temp-test-branch (was 0c3b8d1).
Fail to build gcc for commit [0c3b8d1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[966389eeaaf6b674bbfbdc34b06314c2dd7f8591] ada-tree.def (LOOP_STMT, EXIT_STMT): Update documentation.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [966389e]
+---------------------------------------- Current commit hash: [966389e] ----------------------------------------+
Building GCC for commit [966389e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 966389e ada-tree.def (LOOP_STMT, EXIT_STMT): Update documentation.
HEAD is now at 966389e ada-tree.def (LOOP_STMT, EXIT_STMT): Update documentation.
Note: checking out '966389e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 966389e... ada-tree.def (LOOP_STMT, EXIT_STMT): Update documentation.
Deleted branch temp-test-branch (was 966389e).
Fail to build gcc for commit [966389e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d413e3cc11c3b1d746ed9d187b4a7e695355219a] i386.md (ffsdi2, clzdi2): New expanders.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d413e3cc]
+---------------------------------------- Current commit hash: [d413e3cc] ----------------------------------------+
Building GCC for commit [d413e3cc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d413e3cc i386.md (ffsdi2, clzdi2): New expanders.
HEAD is now at d413e3cc i386.md (ffsdi2, clzdi2): New expanders.
Note: checking out 'd413e3cc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d413e3cc... i386.md (ffsdi2, clzdi2): New expanders.
Deleted branch temp-test-branch (was d413e3cc).
Fail to build gcc for commit [d413e3cc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ca09cd34f1e976658a5cc60abaf880b2c4901e10] pretty-print.c (pp_base_format_text): Support %< instead of %` and %> as well as %'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ca09cd3]
+---------------------------------------- Current commit hash: [ca09cd3] ----------------------------------------+
Building GCC for commit [ca09cd3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ca09cd3 pretty-print.c (pp_base_format_text): Support %< instead of %` and %> as well as %'.
HEAD is now at ca09cd3 pretty-print.c (pp_base_format_text): Support %< instead of %` and %> as well as %'.
Note: checking out 'ca09cd3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ca09cd3... pretty-print.c (pp_base_format_text): Support %< instead of %` and %> as well as %'.
Deleted branch temp-test-branch (was ca09cd3).
Fail to build gcc for commit [ca09cd3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3a4d587b32145384beb79942f6ba1137a1409656] calls.c (expand_call): Call INIT_CUMULATIVE_ARGS earlier, and pass raw n_named_args to it.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a4d587]
+---------------------------------------- Current commit hash: [3a4d587] ----------------------------------------+
Building GCC for commit [3a4d587]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a4d587 calls.c (expand_call): Call INIT_CUMULATIVE_ARGS earlier, and pass raw n_named_args to it.
HEAD is now at 3a4d587 calls.c (expand_call): Call INIT_CUMULATIVE_ARGS earlier, and pass raw n_named_args to it.
Note: checking out '3a4d587'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a4d587... calls.c (expand_call): Call INIT_CUMULATIVE_ARGS earlier, and pass raw n_named_args to it.
Deleted branch temp-test-branch (was 3a4d587).
Fail to build gcc for commit [3a4d587], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[071917b066b8545096dcd241bd6f7e2da17ce26a] System.java: Reordered imports.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [071917b]
+---------------------------------------- Current commit hash: [071917b] ----------------------------------------+
Building GCC for commit [071917b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 071917b System.java: Reordered imports.
HEAD is now at 071917b System.java: Reordered imports.
Note: checking out '071917b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 071917b... System.java: Reordered imports.
Deleted branch temp-test-branch (was 071917b).
Fail to build gcc for commit [071917b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[701b17c2dc9a6d35097455e6fd410d4dabce29e7] re PR rtl-optimization/15633 (Failure to propagate FDO counters by vpt results in performance regression)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [701b17c]
+---------------------------------------- Current commit hash: [701b17c] ----------------------------------------+
Building GCC for commit [701b17c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 701b17c re PR rtl-optimization/15633 (Failure to propagate FDO counters by vpt results in performance regression)
HEAD is now at 701b17c re PR rtl-optimization/15633 (Failure to propagate FDO counters by vpt results in performance regression)
Note: checking out '701b17c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 701b17c... re PR rtl-optimization/15633 (Failure to propagate FDO counters by vpt results in performance regression)
Deleted branch temp-test-branch (was 701b17c).
Fail to build gcc for commit [701b17c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a2a2059fd77eb8c30c0534cbc766c21072a9829a] re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a2a2059]
+---------------------------------------- Current commit hash: [a2a2059] ----------------------------------------+
Building GCC for commit [a2a2059]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a2a2059 re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
HEAD is now at a2a2059 re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
Note: checking out 'a2a2059'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a2a2059... re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
Deleted branch temp-test-branch (was a2a2059).
Fail to build gcc for commit [a2a2059], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[24f8f5ec5601be86dd79c3c593e8640209f87510] cmplx.f90: Add test for bug in constant folding.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [24f8f5e]
+---------------------------------------- Current commit hash: [24f8f5e] ----------------------------------------+
Building GCC for commit [24f8f5e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 24f8f5e cmplx.f90: Add test for bug in constant folding.
HEAD is now at 24f8f5e cmplx.f90: Add test for bug in constant folding.
Note: checking out '24f8f5e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 24f8f5e... cmplx.f90: Add test for bug in constant folding.
Deleted branch temp-test-branch (was 24f8f5e).
Fail to build gcc for commit [24f8f5e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3d27dbd01aa4a707a4c179d6f4b12d2bce16d097] rtl.h (MEM_P, [...]): New predicates.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3d27dbd]
+---------------------------------------- Current commit hash: [3d27dbd] ----------------------------------------+
Building GCC for commit [3d27dbd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3d27dbd rtl.h (MEM_P, [...]): New predicates.
HEAD is now at 3d27dbd rtl.h (MEM_P, [...]): New predicates.
Note: checking out '3d27dbd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3d27dbd... rtl.h (MEM_P, [...]): New predicates.
Deleted branch temp-test-branch (was 3d27dbd).
Fail to build gcc for commit [3d27dbd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f50aa5059af99c4bc52ede25ee108e1e8705e7d4] re PR libgcj/16134 (Memory leak in String.getBytes())
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f50aa50]
+---------------------------------------- Current commit hash: [f50aa50] ----------------------------------------+
Building GCC for commit [f50aa50]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f50aa50 re PR libgcj/16134 (Memory leak in String.getBytes())
HEAD is now at f50aa50 re PR libgcj/16134 (Memory leak in String.getBytes())
Note: checking out 'f50aa50'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f50aa50... re PR libgcj/16134 (Memory leak in String.getBytes())
Deleted branch temp-test-branch (was f50aa50).
Fail to build gcc for commit [f50aa50], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[65da5a20d95cb5d497a650a6d5492c786fa003df] alpha.c (alpha_gimplify_va_arg_1): Remove post_p argument.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [65da5a2]
+---------------------------------------- Current commit hash: [65da5a2] ----------------------------------------+
Building GCC for commit [65da5a2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 65da5a2 alpha.c (alpha_gimplify_va_arg_1): Remove post_p argument.
HEAD is now at 65da5a2 alpha.c (alpha_gimplify_va_arg_1): Remove post_p argument.
Note: checking out '65da5a2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 65da5a2... alpha.c (alpha_gimplify_va_arg_1): Remove post_p argument.
Deleted branch temp-test-branch (was 65da5a2).
Fail to build gcc for commit [65da5a2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a90fc8e0f36a0d855d46085d48b3f8c4c9a5698e] re PR rtl-optimization/16114 (Hang in cse.c (flush_hash_table))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a90fc8e]
+---------------------------------------- Current commit hash: [a90fc8e] ----------------------------------------+
Building GCC for commit [a90fc8e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a90fc8e re PR rtl-optimization/16114 (Hang in cse.c (flush_hash_table))
HEAD is now at a90fc8e re PR rtl-optimization/16114 (Hang in cse.c (flush_hash_table))
Note: checking out 'a90fc8e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a90fc8e... re PR rtl-optimization/16114 (Hang in cse.c (flush_hash_table))
Deleted branch temp-test-branch (was a90fc8e).
Fail to build gcc for commit [a90fc8e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c2f7605f1d3e8d529a466ab67bf6fb3b266a7440] configure.in: Remove new- prefix from toplevel bootstrap targets.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c2f7605]
+---------------------------------------- Current commit hash: [c2f7605] ----------------------------------------+
Building GCC for commit [c2f7605]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c2f7605 configure.in: Remove new- prefix from toplevel bootstrap targets.
HEAD is now at c2f7605 configure.in: Remove new- prefix from toplevel bootstrap targets.
Note: checking out 'c2f7605'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c2f7605... configure.in: Remove new- prefix from toplevel bootstrap targets.
Deleted branch temp-test-branch (was c2f7605).
Fail to build gcc for commit [c2f7605], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4ccfc10aeb564246ff96a17f854a4fa5b46beef2] c4x.h (INITIALIZE_TRAMPOLINE): Replace 'tramp' with 'TRAMP' in the body of the macro definition.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4ccfc10]
+---------------------------------------- Current commit hash: [4ccfc10] ----------------------------------------+
Building GCC for commit [4ccfc10]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4ccfc10 c4x.h (INITIALIZE_TRAMPOLINE): Replace 'tramp' with 'TRAMP' in the body of the macro definition.
HEAD is now at 4ccfc10 c4x.h (INITIALIZE_TRAMPOLINE): Replace 'tramp' with 'TRAMP' in the body of the macro definition.
Note: checking out '4ccfc10'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4ccfc10... c4x.h (INITIALIZE_TRAMPOLINE): Replace 'tramp' with 'TRAMP' in the body of the macro definition.
Deleted branch temp-test-branch (was 4ccfc10).
Fail to build gcc for commit [4ccfc10], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d57f1617211f3309887c6ee18fca97ea7029ebc7] re PR target/15653 (Gcc 3.4 ICE on valid code)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d57f161]
+---------------------------------------- Current commit hash: [d57f161] ----------------------------------------+
Building GCC for commit [d57f161]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d57f161 re PR target/15653 (Gcc 3.4 ICE on valid code)
HEAD is now at d57f161 re PR target/15653 (Gcc 3.4 ICE on valid code)
Note: checking out 'd57f161'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d57f161... re PR target/15653 (Gcc 3.4 ICE on valid code)
Deleted branch temp-test-branch (was d57f161).
Fail to build gcc for commit [d57f161], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ce70456bd6bebd23787157dd3f0cc65eb4ad381d] struct-complex-1_x.c: Add dummy symbol.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce70456]
+---------------------------------------- Current commit hash: [ce70456] ----------------------------------------+
Building GCC for commit [ce70456]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce70456 struct-complex-1_x.c: Add dummy symbol.
HEAD is now at ce70456 struct-complex-1_x.c: Add dummy symbol.
Note: checking out 'ce70456'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce70456... struct-complex-1_x.c: Add dummy symbol.
Deleted branch temp-test-branch (was ce70456).
Fail to build gcc for commit [ce70456], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a7b155a6ad9475549f1c0e32bb7c29dc66567864] re PR fortran/14957 (testsuite issues)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a7b155a]
+---------------------------------------- Current commit hash: [a7b155a] ----------------------------------------+
Building GCC for commit [a7b155a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a7b155a re PR fortran/14957 (testsuite issues)
HEAD is now at a7b155a re PR fortran/14957 (testsuite issues)
Note: checking out 'a7b155a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a7b155a... re PR fortran/14957 (testsuite issues)
Deleted branch temp-test-branch (was a7b155a).
Fail to build gcc for commit [a7b155a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f44703b57513db0c6a4ce3ca3fe0ab3ea07bd83d] re PR c++/15721 (template instantation omits static data members)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f44703b]
+---------------------------------------- Current commit hash: [f44703b] ----------------------------------------+
Building GCC for commit [f44703b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f44703b re PR c++/15721 (template instantation omits static data members)
HEAD is now at f44703b re PR c++/15721 (template instantation omits static data members)
Note: checking out 'f44703b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f44703b... re PR c++/15721 (template instantation omits static data members)
Deleted branch temp-test-branch (was f44703b).
Fail to build gcc for commit [f44703b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b152aee5c740cd65bdab7c0093dfd3d06dc27b55] i386-bitfield1.c: Add mingw32 and cygwin to targets that use default windows32 struct layout.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b152aee5]
+---------------------------------------- Current commit hash: [b152aee5] ----------------------------------------+
Building GCC for commit [b152aee5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b152aee5 i386-bitfield1.c: Add mingw32 and cygwin to targets that use default windows32 struct layout.
HEAD is now at b152aee5 i386-bitfield1.c: Add mingw32 and cygwin to targets that use default windows32 struct layout.
Note: checking out 'b152aee5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b152aee5... i386-bitfield1.c: Add mingw32 and cygwin to targets that use default windows32 struct layout.
Deleted branch temp-test-branch (was b152aee5).
Fail to build gcc for commit [b152aee5], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6f312d18d4788838bbd51c409a29b11ad8ccf009] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6f312d1]
+---------------------------------------- Current commit hash: [6f312d1] ----------------------------------------+
Building GCC for commit [6f312d1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6f312d1 [multiple changes]
HEAD is now at 6f312d1 [multiple changes]
Note: checking out '6f312d1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6f312d1... [multiple changes]
Deleted branch temp-test-branch (was 6f312d1).
Fail to build gcc for commit [6f312d1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d8044160b7047642e312fb5f713fe0db46171dd8] Index: gcc/ChangeLog 2004-06-09  Geoffrey Keating  <geoffk@apple.com>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d804416]
+---------------------------------------- Current commit hash: [d804416] ----------------------------------------+
Building GCC for commit [d804416]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d804416 Index: gcc/ChangeLog 2004-06-09  Geoffrey Keating  <geoffk@apple.com>
HEAD is now at d804416 Index: gcc/ChangeLog
Note: checking out 'd804416'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d804416... Index: gcc/ChangeLog 2004-06-09  Geoffrey Keating  <geoffk@apple.com>
Deleted branch temp-test-branch (was d804416).
Fail to build gcc for commit [d804416], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a776161b8bb455734cb3019976b5718bc208ba8f] exception.c: New file.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a776161]
+---------------------------------------- Current commit hash: [a776161] ----------------------------------------+
Building GCC for commit [a776161]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a776161 exception.c: New file.
HEAD is now at a776161 exception.c: New file.
Note: checking out 'a776161'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a776161... exception.c: New file.
Deleted branch temp-test-branch (was a776161).
Fail to build gcc for commit [a776161], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[72fab006113a72f011e261cb291602195726f7d5] New ObjC testcases to make sure Protocol-isEqual: is well implemented in the runtime library
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [72fab00]
+---------------------------------------- Current commit hash: [72fab00] ----------------------------------------+
Building GCC for commit [72fab00]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 72fab00 New ObjC testcases to make sure Protocol-isEqual: is well implemented in the runtime library
HEAD is now at 72fab00 New ObjC testcases to make sure Protocol-isEqual: is well implemented in the
Note: checking out '72fab00'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 72fab00... New ObjC testcases to make sure Protocol-isEqual: is well implemented in the runtime library
Deleted branch temp-test-branch (was 72fab00).
Fail to build gcc for commit [72fab00], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c50a01163c10c9467986f78e5a82cb4975556043] Bug 14610
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c50a011]
+---------------------------------------- Current commit hash: [c50a011] ----------------------------------------+
Building GCC for commit [c50a011]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c50a011 Bug 14610
HEAD is now at c50a011 Bug 14610
Note: checking out 'c50a011'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c50a011... Bug 14610
Deleted branch temp-test-branch (was c50a011).
Fail to build gcc for commit [c50a011], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[31b6f11ab0530374184676979781ba81b06ae38f] re PR libfortran/15755 (gfortran: backspace call causes bus error)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [31b6f11]
+---------------------------------------- Current commit hash: [31b6f11] ----------------------------------------+
Building GCC for commit [31b6f11]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 31b6f11 re PR libfortran/15755 (gfortran: backspace call causes bus error)
HEAD is now at 31b6f11 re PR libfortran/15755 (gfortran: backspace call causes bus error)
Note: checking out '31b6f11'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 31b6f11... re PR libfortran/15755 (gfortran: backspace call causes bus error)
Deleted branch temp-test-branch (was 31b6f11).
Fail to build gcc for commit [31b6f11], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[16865eaaa8898e0ea0e87e8516a17d5f95ab471b] c-parse.in (if_stmt_locus): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [16865ea]
+---------------------------------------- Current commit hash: [16865ea] ----------------------------------------+
Building GCC for commit [16865ea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 16865ea c-parse.in (if_stmt_locus): Remove.
HEAD is now at 16865ea c-parse.in (if_stmt_locus): Remove.
Note: checking out '16865ea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 16865ea... c-parse.in (if_stmt_locus): Remove.
Deleted branch temp-test-branch (was 16865ea).
Fail to build gcc for commit [16865ea], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8a83a69363442100aa9435199e5d385716658255] re PR c++/15503 (nested template problem)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8a83a69]
+---------------------------------------- Current commit hash: [8a83a69] ----------------------------------------+
Building GCC for commit [8a83a69]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8a83a69 re PR c++/15503 (nested template problem)
HEAD is now at 8a83a69 re PR c++/15503 (nested template problem)
Note: checking out '8a83a69'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8a83a69... re PR c++/15503 (nested template problem)
Deleted branch temp-test-branch (was 8a83a69).
Fail to build gcc for commit [8a83a69], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8a78744fcf2fe2a787ca0315dc6ab80a03c4db6a] re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8a78744]
+---------------------------------------- Current commit hash: [8a78744] ----------------------------------------+
Building GCC for commit [8a78744]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8a78744 re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
HEAD is now at 8a78744 re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
Note: checking out '8a78744'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8a78744... re PR tree-optimization/15993 ([lno] Compiler hangs at -O3)
Deleted branch temp-test-branch (was 8a78744).
Fail to build gcc for commit [8a78744], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3c01e5dffbd8ec9480e84f055869b5977d7c4396] cp-tree.h (cp_cv_quals): New type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3c01e5d]
+---------------------------------------- Current commit hash: [3c01e5d] ----------------------------------------+
Building GCC for commit [3c01e5d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3c01e5d cp-tree.h (cp_cv_quals): New type.
HEAD is now at 3c01e5d cp-tree.h (cp_cv_quals): New type.
Note: checking out '3c01e5d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3c01e5d... cp-tree.h (cp_cv_quals): New type.
Deleted branch temp-test-branch (was 3c01e5d).
Fail to build gcc for commit [3c01e5d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c5d2de6b4c976dc152c8618ab3e8e1319018dc30] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c5d2de6]
+---------------------------------------- Current commit hash: [c5d2de6] ----------------------------------------+
Building GCC for commit [c5d2de6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c5d2de6 [multiple changes]
HEAD is now at c5d2de6 [multiple changes]
Note: checking out 'c5d2de6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c5d2de6... [multiple changes]
Deleted branch temp-test-branch (was c5d2de6).
Fail to build gcc for commit [c5d2de6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e1152c0bc885278944dfbfa1c877e045702abc3f] mips.md: Add back scheduling exclusion info.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e1152c0]
+---------------------------------------- Current commit hash: [e1152c0] ----------------------------------------+
Building GCC for commit [e1152c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e1152c0 mips.md: Add back scheduling exclusion info.
HEAD is now at e1152c0 mips.md: Add back scheduling exclusion info.
Note: checking out 'e1152c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e1152c0... mips.md: Add back scheduling exclusion info.
Deleted branch temp-test-branch (was e1152c0).
Fail to build gcc for commit [e1152c0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[aed30657939aab74f62b96386be0e96f9e902a1c] except.c: Revert change of 2004-05-26.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aed3065]
+---------------------------------------- Current commit hash: [aed3065] ----------------------------------------+
Building GCC for commit [aed3065]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aed3065 except.c: Revert change of 2004-05-26.
HEAD is now at aed3065 except.c: Revert change of 2004-05-26.
Note: checking out 'aed3065'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aed3065... except.c: Revert change of 2004-05-26.
Deleted branch temp-test-branch (was aed3065).
Fail to build gcc for commit [aed3065], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2fbe90f22457f0a82c1d10ff5a918259c41859b1] tree-cfg.c (verify_expr): Add macro CHECK_OK.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2fbe90f]
+---------------------------------------- Current commit hash: [2fbe90f] ----------------------------------------+
Building GCC for commit [2fbe90f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2fbe90f tree-cfg.c (verify_expr): Add macro CHECK_OK.
HEAD is now at 2fbe90f tree-cfg.c (verify_expr): Add macro CHECK_OK.
Note: checking out '2fbe90f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2fbe90f... tree-cfg.c (verify_expr): Add macro CHECK_OK.
Deleted branch temp-test-branch (was 2fbe90f).
Fail to build gcc for commit [2fbe90f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4e0f4df508db6bccfdca88a2bcf26e03317d4c71] re PR c++/15947 (Puzzling error message for wrong destructor declaration in template class)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4e0f4df]
+---------------------------------------- Current commit hash: [4e0f4df] ----------------------------------------+
Building GCC for commit [4e0f4df]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4e0f4df re PR c++/15947 (Puzzling error message for wrong destructor declaration in template class)
HEAD is now at 4e0f4df re PR c++/15947 (Puzzling error message for wrong destructor declaration in template class)
Note: checking out '4e0f4df'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4e0f4df... re PR c++/15947 (Puzzling error message for wrong destructor declaration in template class)
Deleted branch temp-test-branch (was 4e0f4df).
Fail to build gcc for commit [4e0f4df], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bdb41add9deec358b0724347c73dd2d009ab7f36] mips.c (reg_or_const_float_1_operand): Reimplement in terms of const_float_1_operand.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bdb41ad]
+---------------------------------------- Current commit hash: [bdb41ad] ----------------------------------------+
Building GCC for commit [bdb41ad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bdb41ad mips.c (reg_or_const_float_1_operand): Reimplement in terms of const_float_1_operand.
HEAD is now at bdb41ad mips.c (reg_or_const_float_1_operand): Reimplement in terms of const_float_1_operand.
Note: checking out 'bdb41ad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bdb41ad... mips.c (reg_or_const_float_1_operand): Reimplement in terms of const_float_1_operand.
Deleted branch temp-test-branch (was bdb41ad).
Fail to build gcc for commit [bdb41ad], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[44930935245c606dc826b43040603a71ad431e54] * opts.sh (var_args): Fix regexp.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4493093]
+---------------------------------------- Current commit hash: [4493093] ----------------------------------------+
Building GCC for commit [4493093]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4493093 * opts.sh (var_args): Fix regexp.
HEAD is now at 4493093 * opts.sh (var_args): Fix regexp.
Note: checking out '4493093'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4493093... * opts.sh (var_args): Fix regexp.
Deleted branch temp-test-branch (was 4493093).
Fail to build gcc for commit [4493093], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c63817711e77a3c46e9c074d050f16b822f7be82] objc-act.c (build_objc_method_call): Save the lookup_object so we do not call it twice.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c638177]
+---------------------------------------- Current commit hash: [c638177] ----------------------------------------+
Building GCC for commit [c638177]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c638177 objc-act.c (build_objc_method_call): Save the lookup_object so we do not call it twice.
HEAD is now at c638177 objc-act.c (build_objc_method_call): Save the lookup_object so we do not call it twice.
Note: checking out 'c638177'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c638177... objc-act.c (build_objc_method_call): Save the lookup_object so we do not call it twice.
Deleted branch temp-test-branch (was c638177).
Fail to build gcc for commit [c638177], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[edf74484b2277d89da3d02da5ed694fd6fb0716f] java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a local variable was initialised upon declaration.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [edf7448]
+---------------------------------------- Current commit hash: [edf7448] ----------------------------------------+
Building GCC for commit [edf7448]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: edf7448 java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a local variable was initialised upon declaration.
HEAD is now at edf7448 java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a local variable was initialised upon declaration.
Note: checking out 'edf7448'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at edf7448... java-tree.h (DECL_LOCAL_FINAL_IUD): New macro to test if a local variable was initialised upon declaration.
Deleted branch temp-test-branch (was edf7448).
Fail to build gcc for commit [edf7448], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5a1f395394d8ac58ed5ade2185f3267b16493791] calls.c (shift_returned_value): Fix handling of non-integer TYPE_MODEs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a1f395]
+---------------------------------------- Current commit hash: [5a1f395] ----------------------------------------+
Building GCC for commit [5a1f395]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a1f395 calls.c (shift_returned_value): Fix handling of non-integer TYPE_MODEs.
HEAD is now at 5a1f395 calls.c (shift_returned_value): Fix handling of non-integer TYPE_MODEs.
Note: checking out '5a1f395'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a1f395... calls.c (shift_returned_value): Fix handling of non-integer TYPE_MODEs.
Deleted branch temp-test-branch (was 5a1f395).
Fail to build gcc for commit [5a1f395], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[666e5d7b945c77f3bd9f3fdf00bf75f3a02e3499] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [666e5d7]
+---------------------------------------- Current commit hash: [666e5d7] ----------------------------------------+
Building GCC for commit [666e5d7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 666e5d7 Daily bump.
HEAD is now at 666e5d7 Daily bump.
Note: checking out '666e5d7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 666e5d7... Daily bump.
Deleted branch temp-test-branch (was 666e5d7).
Fail to build gcc for commit [666e5d7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[861464a0fb8f8985803643c63ef4b9e878c36dfa] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [861464a]
+---------------------------------------- Current commit hash: [861464a] ----------------------------------------+
Building GCC for commit [861464a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 861464a Daily bump.
HEAD is now at 861464a Daily bump.
Note: checking out '861464a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 861464a... Daily bump.
Deleted branch temp-test-branch (was 861464a).
Fail to build gcc for commit [861464a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7b5b57b7dc68b67c1e39eb88d41d377ba96c6606] re PR fortran/15620 (Statement functions and optimization cause IC)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7b5b57b]
+---------------------------------------- Current commit hash: [7b5b57b] ----------------------------------------+
Building GCC for commit [7b5b57b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7b5b57b re PR fortran/15620 (Statement functions and optimization cause IC)
HEAD is now at 7b5b57b re PR fortran/15620 (Statement functions and optimization cause IC)
Note: checking out '7b5b57b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7b5b57b... re PR fortran/15620 (Statement functions and optimization cause IC)
Deleted branch temp-test-branch (was 7b5b57b).
Fail to build gcc for commit [7b5b57b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5d81e3d373876ebbea7ff5133c4762be95be6c30] gengtype-yacc.y (option): Avoid use of non-constant struct initializer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5d81e3d]
+---------------------------------------- Current commit hash: [5d81e3d] ----------------------------------------+
Building GCC for commit [5d81e3d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5d81e3d gengtype-yacc.y (option): Avoid use of non-constant struct initializer.
HEAD is now at 5d81e3d gengtype-yacc.y (option): Avoid use of non-constant struct initializer.
Note: checking out '5d81e3d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5d81e3d... gengtype-yacc.y (option): Avoid use of non-constant struct initializer.
Deleted branch temp-test-branch (was 5d81e3d).
Fail to build gcc for commit [5d81e3d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f814193b9d8f34c0c344f734d66aae2a032dddc8] re PR libfortran/14923 (gfortran misses the DATE_AND_TIME intrinsic)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f814193]
+---------------------------------------- Current commit hash: [f814193] ----------------------------------------+
Building GCC for commit [f814193]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f814193 re PR libfortran/14923 (gfortran misses the DATE_AND_TIME intrinsic)
HEAD is now at f814193 re PR libfortran/14923 (gfortran misses the DATE_AND_TIME intrinsic)
Note: checking out 'f814193'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f814193... re PR libfortran/14923 (gfortran misses the DATE_AND_TIME intrinsic)
Deleted branch temp-test-branch (was f814193).
Fail to build gcc for commit [f814193], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [261e5b9]
+---------------------------------------- Current commit hash: [261e5b9] ----------------------------------------+
Building GCC for commit [261e5b9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 261e5b9 [multiple changes]
HEAD is now at 261e5b9 [multiple changes]
Note: checking out '261e5b9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 261e5b9... [multiple changes]
Deleted branch temp-test-branch (was 261e5b9).
Fail to build gcc for commit [261e5b9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2fac9c017f9f3339fc56b843a4e0b372d1f770a1] configure.ac: Don't invoke ACX_HEADER_STDBOOL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2fac9c0]
+---------------------------------------- Current commit hash: [2fac9c0] ----------------------------------------+
Building GCC for commit [2fac9c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2fac9c0 configure.ac: Don't invoke ACX_HEADER_STDBOOL.
HEAD is now at 2fac9c0 configure.ac: Don't invoke ACX_HEADER_STDBOOL.
Note: checking out '2fac9c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2fac9c0... configure.ac: Don't invoke ACX_HEADER_STDBOOL.
Deleted branch temp-test-branch (was 2fac9c0).
Fail to build gcc for commit [2fac9c0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b79634e3d89667ac3b67531df917974241702862] re PR libstdc++/15489 (testsuite_files determined incorrectly)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b79634e]
+---------------------------------------- Current commit hash: [b79634e] ----------------------------------------+
Building GCC for commit [b79634e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b79634e re PR libstdc++/15489 (testsuite_files determined incorrectly)
HEAD is now at b79634e re PR libstdc++/15489 (testsuite_files determined incorrectly)
Note: checking out 'b79634e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b79634e... re PR libstdc++/15489 (testsuite_files determined incorrectly)
Deleted branch temp-test-branch (was b79634e).
Fail to build gcc for commit [b79634e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[57807c317869610e07a85bf8bf95747638230ed7] CollationElementIterator.java, [...]: New versions from GNU classpath.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [57807c3]
+---------------------------------------- Current commit hash: [57807c3] ----------------------------------------+
Building GCC for commit [57807c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 57807c3 CollationElementIterator.java, [...]: New versions from GNU classpath.
HEAD is now at 57807c3 CollationElementIterator.java, [...]: New versions from GNU classpath.
Note: checking out '57807c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 57807c3... CollationElementIterator.java, [...]: New versions from GNU classpath.
Deleted branch temp-test-branch (was 57807c3).
Fail to build gcc for commit [57807c3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fa84120041353fa15ba2345e4442ec9e10ffc25b] re PR fortran/15511 (Warning about truncated lines does not follow the standard gcc error message format)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fa84120]
+---------------------------------------- Current commit hash: [fa84120] ----------------------------------------+
Building GCC for commit [fa84120]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fa84120 re PR fortran/15511 (Warning about truncated lines does not follow the standard gcc error message format)
HEAD is now at fa84120 re PR fortran/15511 (Warning about truncated lines does not follow the standard gcc error message format)
Note: checking out 'fa84120'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fa84120... re PR fortran/15511 (Warning about truncated lines does not follow the standard gcc error message format)
Deleted branch temp-test-branch (was fa84120).
Fail to build gcc for commit [fa84120], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1ec4e9c30bd66dab3fabb6958187be4c57e26052] Makefile.tpl: Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ec4e9c]
+---------------------------------------- Current commit hash: [1ec4e9c] ----------------------------------------+
Building GCC for commit [1ec4e9c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ec4e9c Makefile.tpl: Fix typo.
HEAD is now at 1ec4e9c Makefile.tpl: Fix typo.
Note: checking out '1ec4e9c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ec4e9c... Makefile.tpl: Fix typo.
Deleted branch temp-test-branch (was 1ec4e9c).
Fail to build gcc for commit [1ec4e9c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5ce7d75d89b0da57124c2461364c32f1e7f7910b] * MAINTAINERS (Various Maintainers): Add myself for compat testsuite.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5ce7d75]
+---------------------------------------- Current commit hash: [5ce7d75] ----------------------------------------+
Building GCC for commit [5ce7d75]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5ce7d75 * MAINTAINERS (Various Maintainers): Add myself for compat testsuite.
HEAD is now at 5ce7d75 * MAINTAINERS (Various Maintainers): Add myself for compat testsuite.
Note: checking out '5ce7d75'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5ce7d75... * MAINTAINERS (Various Maintainers): Add myself for compat testsuite.
Deleted branch temp-test-branch (was 5ce7d75).
Fail to build gcc for commit [5ce7d75], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a] re PR c++/13092 (Accepts invalid pointer-to-member conversion)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c1d34f9]
+---------------------------------------- Current commit hash: [c1d34f9] ----------------------------------------+
Building GCC for commit [c1d34f9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c1d34f9 re PR c++/13092 (Accepts invalid pointer-to-member conversion)
HEAD is now at c1d34f9 re PR c++/13092 (Accepts invalid pointer-to-member conversion)
Note: checking out 'c1d34f9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c1d34f9... re PR c++/13092 (Accepts invalid pointer-to-member conversion)
Deleted branch temp-test-branch (was c1d34f9).
Fail to build gcc for commit [c1d34f9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f1865cde4be5cfa09f94ff9821ba1d38deb45c49] gjavah.c (print_stub_or_jni): Mark functions only JNIEXPORT, not extern.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f1865cd]
+---------------------------------------- Current commit hash: [f1865cd] ----------------------------------------+
Building GCC for commit [f1865cd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f1865cd gjavah.c (print_stub_or_jni): Mark functions only JNIEXPORT, not extern.
HEAD is now at f1865cd gjavah.c (print_stub_or_jni): Mark functions only JNIEXPORT, not extern.
Note: checking out 'f1865cd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f1865cd... gjavah.c (print_stub_or_jni): Mark functions only JNIEXPORT, not extern.
Deleted branch temp-test-branch (was f1865cd).
Fail to build gcc for commit [f1865cd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ba20a3eb0940651ab036d0694999176ce31f4db2] re PR target/15569 (Gcc 3.4.1 failed to build ia64 2.6.6 kernel)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ba20a3e]
+---------------------------------------- Current commit hash: [ba20a3e] ----------------------------------------+
Building GCC for commit [ba20a3e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ba20a3e re PR target/15569 (Gcc 3.4.1 failed to build ia64 2.6.6 kernel)
HEAD is now at ba20a3e re PR target/15569 (Gcc 3.4.1 failed to build ia64 2.6.6 kernel)
Note: checking out 'ba20a3e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ba20a3e... re PR target/15569 (Gcc 3.4.1 failed to build ia64 2.6.6 kernel)
Deleted branch temp-test-branch (was ba20a3e).
Fail to build gcc for commit [ba20a3e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2461ecbe6c497c7da3060f955e48321a53de97c5] run_doxygen: Bump required version.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2461ecb]
+---------------------------------------- Current commit hash: [2461ecb] ----------------------------------------+
Building GCC for commit [2461ecb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2461ecb run_doxygen: Bump required version.
HEAD is now at 2461ecb run_doxygen: Bump required version.
Note: checking out '2461ecb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2461ecb... run_doxygen: Bump required version.
Deleted branch temp-test-branch (was 2461ecb).
Fail to build gcc for commit [2461ecb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a653e758f68488c0056b0a0a3d9fcbe5d5eaf50f] fold-const.c (fold_not_const): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a653e75]
+---------------------------------------- Current commit hash: [a653e75] ----------------------------------------+
Building GCC for commit [a653e75]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a653e75 fold-const.c (fold_not_const): New function.
HEAD is now at a653e75 fold-const.c (fold_not_const): New function.
Note: checking out 'a653e75'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a653e75... fold-const.c (fold_not_const): New function.
Deleted branch temp-test-branch (was a653e75).
Fail to build gcc for commit [a653e75], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[06d72ee6e3ede175130413390d15726c09678cfb] tree-dfa.c (create_var_ann): tree_ann -> tree_ann_t.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [06d72ee]
+---------------------------------------- Current commit hash: [06d72ee] ----------------------------------------+
Building GCC for commit [06d72ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 06d72ee tree-dfa.c (create_var_ann): tree_ann -> tree_ann_t.
HEAD is now at 06d72ee tree-dfa.c (create_var_ann): tree_ann -> tree_ann_t.
Note: checking out '06d72ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 06d72ee... tree-dfa.c (create_var_ann): tree_ann -> tree_ann_t.
Deleted branch temp-test-branch (was 06d72ee).
Fail to build gcc for commit [06d72ee], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[293155b099b94b81fa0147f2719f3da23c859f7e] trans-expr.c (gfc_conv_cst_int_power): Compute x**(-n) by converting it to (1/x)**n instead of 1/x**n.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [293155b]
+---------------------------------------- Current commit hash: [293155b] ----------------------------------------+
Building GCC for commit [293155b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 293155b trans-expr.c (gfc_conv_cst_int_power): Compute x**(-n) by converting it to (1/x)**n instead of 1/x**n.
HEAD is now at 293155b trans-expr.c (gfc_conv_cst_int_power): Compute x**(-n) by converting it to (1/x)**n instead of 1/x**n.
Note: checking out '293155b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 293155b... trans-expr.c (gfc_conv_cst_int_power): Compute x**(-n) by converting it to (1/x)**n instead of 1/x**n.
Deleted branch temp-test-branch (was 293155b).
Fail to build gcc for commit [293155b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d5935e0d5580b29969c68c84dda9d957882c8921] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d5935e0]
+---------------------------------------- Current commit hash: [d5935e0] ----------------------------------------+
Building GCC for commit [d5935e0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d5935e0 Daily bump.
HEAD is now at d5935e0 Daily bump.
Note: checking out 'd5935e0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d5935e0... Daily bump.
Deleted branch temp-test-branch (was d5935e0).
Fail to build gcc for commit [d5935e0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a4ac5dd3ef232d1b4b820960fef7f787525b8009] re PR fortran/13201 (PARAMETER variables of nonconstant shape are accepted)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a4ac5dd]
+---------------------------------------- Current commit hash: [a4ac5dd] ----------------------------------------+
Building GCC for commit [a4ac5dd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a4ac5dd re PR fortran/13201 (PARAMETER variables of nonconstant shape are accepted)
HEAD is now at a4ac5dd re PR fortran/13201 (PARAMETER variables of nonconstant shape are accepted)
Note: checking out 'a4ac5dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a4ac5dd... re PR fortran/13201 (PARAMETER variables of nonconstant shape are accepted)
Deleted branch temp-test-branch (was a4ac5dd).
Fail to build gcc for commit [a4ac5dd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6046b0ed57e5e96d94f5a0dfcf5b77df125ec231] Makefile.in (CPPLIBS): Renamed to CPPLIB.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6046b0e]
+---------------------------------------- Current commit hash: [6046b0e] ----------------------------------------+
Building GCC for commit [6046b0e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6046b0e Makefile.in (CPPLIBS): Renamed to CPPLIB.
HEAD is now at 6046b0e Makefile.in (CPPLIBS): Renamed to CPPLIB.
Note: checking out '6046b0e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6046b0e... Makefile.in (CPPLIBS): Renamed to CPPLIB.
Deleted branch temp-test-branch (was 6046b0e).
Fail to build gcc for commit [6046b0e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f9fed73b66238fc369fbaa06d5a6afca5bdbe1b8] intrinsic.c (sort_actual): Keep track of type of missing arguments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f9fed73]
+---------------------------------------- Current commit hash: [f9fed73] ----------------------------------------+
Building GCC for commit [f9fed73]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f9fed73 intrinsic.c (sort_actual): Keep track of type of missing arguments.
HEAD is now at f9fed73 intrinsic.c (sort_actual): Keep track of type of missing arguments.
Note: checking out 'f9fed73'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f9fed73... intrinsic.c (sort_actual): Keep track of type of missing arguments.
Deleted branch temp-test-branch (was f9fed73).
Fail to build gcc for commit [f9fed73], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9874adaf91fee8a95b7a1ef0ad5014bf55e016ef] re PR libstdc++/15489 (testsuite_files determined incorrectly)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9874ada]
+---------------------------------------- Current commit hash: [9874ada] ----------------------------------------+
Building GCC for commit [9874ada]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9874ada re PR libstdc++/15489 (testsuite_files determined incorrectly)
HEAD is now at 9874ada re PR libstdc++/15489 (testsuite_files determined incorrectly)
Note: checking out '9874ada'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9874ada... re PR libstdc++/15489 (testsuite_files determined incorrectly)
Deleted branch temp-test-branch (was 9874ada).
Fail to build gcc for commit [9874ada], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[aab087b805ed8609dab58426e00c8994b59d5c07] fp-cmp-4.c (FLOAT): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aab087b]
+---------------------------------------- Current commit hash: [aab087b] ----------------------------------------+
Building GCC for commit [aab087b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aab087b fp-cmp-4.c (FLOAT): New.
HEAD is now at aab087b fp-cmp-4.c (FLOAT): New.
Note: checking out 'aab087b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aab087b... fp-cmp-4.c (FLOAT): New.
Deleted branch temp-test-branch (was aab087b).
Fail to build gcc for commit [aab087b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[963e23c5c23463e331566ecf2ae065fe6f465e98] re PR bootstrap/15651 (Size Errors/Warnings Followed by ICE)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [963e23c]
+---------------------------------------- Current commit hash: [963e23c] ----------------------------------------+
Building GCC for commit [963e23c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 963e23c re PR bootstrap/15651 (Size Errors/Warnings Followed by ICE)
HEAD is now at 963e23c re PR bootstrap/15651 (Size Errors/Warnings Followed by ICE)
Note: checking out '963e23c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 963e23c... re PR bootstrap/15651 (Size Errors/Warnings Followed by ICE)
Deleted branch temp-test-branch (was 963e23c).
Fail to build gcc for commit [963e23c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ddc9ce91157ab23b35e1127c695feb5889f3ff53] Andrew Vaught <andyv@firstinter.net>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ddc9ce9]
+---------------------------------------- Current commit hash: [ddc9ce9] ----------------------------------------+
Building GCC for commit [ddc9ce9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ddc9ce9 Andrew Vaught <andyv@firstinter.net>
HEAD is now at ddc9ce9 Andrew Vaught <andyv@firstinter.net>
Note: checking out 'ddc9ce9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ddc9ce9... Andrew Vaught <andyv@firstinter.net>
Deleted branch temp-test-branch (was ddc9ce9).
Fail to build gcc for commit [ddc9ce9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a4171ce18efea96907998485b2a71e3d4f9dde4f] 2004-05-27  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a4171ce]
+---------------------------------------- Current commit hash: [a4171ce] ----------------------------------------+
Building GCC for commit [a4171ce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a4171ce 2004-05-27  Michael Koch  <konqueror@gmx.de>
HEAD is now at a4171ce 2004-05-27  Michael Koch  <konqueror@gmx.de>
Note: checking out 'a4171ce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a4171ce... 2004-05-27  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was a4171ce).
Fail to build gcc for commit [a4171ce], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[755bddc8a6e5b3397bd83b3bd3252296d02b02e5] archive.c (objc_read_class): Initialize class_name.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [755bddc]
+---------------------------------------- Current commit hash: [755bddc] ----------------------------------------+
Building GCC for commit [755bddc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 755bddc archive.c (objc_read_class): Initialize class_name.
HEAD is now at 755bddc archive.c (objc_read_class): Initialize class_name.
Note: checking out '755bddc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 755bddc... archive.c (objc_read_class): Initialize class_name.
Deleted branch temp-test-branch (was 755bddc).
Fail to build gcc for commit [755bddc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e8a382b780014dfccb7a6559b71cb547a829047d] re PR libstdc++/15675 (Doxygen graph are invalid in the libstdc++-v3 online docs)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e8a382b]
+---------------------------------------- Current commit hash: [e8a382b] ----------------------------------------+
Building GCC for commit [e8a382b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e8a382b re PR libstdc++/15675 (Doxygen graph are invalid in the libstdc++-v3 online docs)
HEAD is now at e8a382b re PR libstdc++/15675 (Doxygen graph are invalid in the libstdc++-v3 online docs)
Note: checking out 'e8a382b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e8a382b... re PR libstdc++/15675 (Doxygen graph are invalid in the libstdc++-v3 online docs)
Deleted branch temp-test-branch (was e8a382b).
Fail to build gcc for commit [e8a382b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[dba845ac28a8f10754d30bb4826574d3f107f84c] darwin.h (CC1_SPEC): Handle -gused and -gfull.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dba845a]
+---------------------------------------- Current commit hash: [dba845a] ----------------------------------------+
Building GCC for commit [dba845a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dba845a darwin.h (CC1_SPEC): Handle -gused and -gfull.
HEAD is now at dba845a darwin.h (CC1_SPEC): Handle -gused and -gfull.
Note: checking out 'dba845a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dba845a... darwin.h (CC1_SPEC): Handle -gused and -gfull.
Deleted branch temp-test-branch (was dba845a).
Fail to build gcc for commit [dba845a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3a8c5d8c261034fa66f3a98b52e3717de9a9ad96] install.texi (Prerequisites): Update libstdc++ entry to automake 1.8.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3a8c5d8]
+---------------------------------------- Current commit hash: [3a8c5d8] ----------------------------------------+
Building GCC for commit [3a8c5d8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3a8c5d8 install.texi (Prerequisites): Update libstdc++ entry to automake 1.8.5.
HEAD is now at 3a8c5d8 install.texi (Prerequisites): Update libstdc++ entry to automake 1.8.5.
Note: checking out '3a8c5d8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3a8c5d8... install.texi (Prerequisites): Update libstdc++ entry to automake 1.8.5.
Deleted branch temp-test-branch (was 3a8c5d8).
Fail to build gcc for commit [3a8c5d8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e83f48010bb27b7fd1db2ebdecc9e4611fe97793] passes.c (rest_of_handle_null_pointer): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e83f480]
+---------------------------------------- Current commit hash: [e83f480] ----------------------------------------+
Building GCC for commit [e83f480]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e83f480 passes.c (rest_of_handle_null_pointer): Remove.
HEAD is now at e83f480 passes.c (rest_of_handle_null_pointer): Remove.
Note: checking out 'e83f480'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e83f480... passes.c (rest_of_handle_null_pointer): Remove.
Deleted branch temp-test-branch (was e83f480).
Fail to build gcc for commit [e83f480], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[690c364e3e6c98f3a088baed4aa3006fd4c79b6f] altivec-16.c: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [690c364]
+---------------------------------------- Current commit hash: [690c364] ----------------------------------------+
Building GCC for commit [690c364]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 690c364 altivec-16.c: New test.
HEAD is now at 690c364 altivec-16.c: New test.
Note: checking out '690c364'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 690c364... altivec-16.c: New test.
Deleted branch temp-test-branch (was 690c364).
Fail to build gcc for commit [690c364], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[91cde0c3f5e20c4a77f68a91fc077666872483ab] tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Don't even bother marking bypassed virtuals for out-of-ssa.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [91cde0c]
+---------------------------------------- Current commit hash: [91cde0c] ----------------------------------------+
Building GCC for commit [91cde0c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 91cde0c tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Don't even bother marking bypassed virtuals for out-of-ssa.
HEAD is now at 91cde0c tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Don't even bother marking bypassed virtuals for out-of-ssa.
Note: checking out '91cde0c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 91cde0c... tree-ssa-dom.c (redirect_edges_and_update_ssa_graph): Don't even bother marking bypassed virtuals for out-of-ssa.
Deleted branch temp-test-branch (was 91cde0c).
Fail to build gcc for commit [91cde0c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5ba953549004ce8325163ec9bf2cbd1f045f1913] jacks.xfail: Update for post tree-ssa merge results.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5ba9535]
+---------------------------------------- Current commit hash: [5ba9535] ----------------------------------------+
Building GCC for commit [5ba9535]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5ba9535 jacks.xfail: Update for post tree-ssa merge results.
HEAD is now at 5ba9535 jacks.xfail: Update for post tree-ssa merge results.
Note: checking out '5ba9535'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5ba9535... jacks.xfail: Update for post tree-ssa merge results.
Deleted branch temp-test-branch (was 5ba9535).
Fail to build gcc for commit [5ba9535], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bbb2a3456fbf82679da87061c95d3d503ef4740a] tree-ssa.exp: Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bbb2a34]
+---------------------------------------- Current commit hash: [bbb2a34] ----------------------------------------+
Building GCC for commit [bbb2a34]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bbb2a34 tree-ssa.exp: Remove.
HEAD is now at bbb2a34 tree-ssa.exp: Remove.
Note: checking out 'bbb2a34'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bbb2a34... tree-ssa.exp: Remove.
Deleted branch temp-test-branch (was bbb2a34).
Fail to build gcc for commit [bbb2a34], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fc2ce0d0198cc79515b0f7ff4d5891b4cf347ecf] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fc2ce0d]
+---------------------------------------- Current commit hash: [fc2ce0d] ----------------------------------------+
Building GCC for commit [fc2ce0d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fc2ce0d Daily bump.
HEAD is now at fc2ce0d Daily bump.
Note: checking out 'fc2ce0d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fc2ce0d... Daily bump.
Deleted branch temp-test-branch (was fc2ce0d).
Fail to build gcc for commit [fc2ce0d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[de46b2fe0dc554f71b61f0bcc8d6afdde2292a6c] c-typeck.c (composite_type, [...]): Abort if we have type qualifiers at all.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de46b2f]
+---------------------------------------- Current commit hash: [de46b2f] ----------------------------------------+
Building GCC for commit [de46b2f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de46b2f c-typeck.c (composite_type, [...]): Abort if we have type qualifiers at all.
HEAD is now at de46b2f c-typeck.c (composite_type, [...]): Abort if we have type qualifiers at all.
Note: checking out 'de46b2f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de46b2f... c-typeck.c (composite_type, [...]): Abort if we have type qualifiers at all.
Deleted branch temp-test-branch (was de46b2f).
Fail to build gcc for commit [de46b2f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a4ddde0deeb34ed1aa26813e3e25c9a19df22d96] std_complex.h (complex<_Tp>): Properly indent to follow C++STYLE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a4ddde0]
+---------------------------------------- Current commit hash: [a4ddde0] ----------------------------------------+
Building GCC for commit [a4ddde0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a4ddde0 std_complex.h (complex<_Tp>): Properly indent to follow C++STYLE.
HEAD is now at a4ddde0 std_complex.h (complex<_Tp>): Properly indent to follow C++STYLE.
Note: checking out 'a4ddde0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a4ddde0... std_complex.h (complex<_Tp>): Properly indent to follow C++STYLE.
Deleted branch temp-test-branch (was a4ddde0).
Fail to build gcc for commit [a4ddde0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9193542205121e73b434a1b5019f0d7ad26bc021] libmudflap.exp (libmudflap-init): For C++ test cases only...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9193542]
+---------------------------------------- Current commit hash: [9193542] ----------------------------------------+
Building GCC for commit [9193542]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9193542 libmudflap.exp (libmudflap-init): For C++ test cases only...
HEAD is now at 9193542 libmudflap.exp (libmudflap-init): For C++ test cases only...
Note: checking out '9193542'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9193542... libmudflap.exp (libmudflap-init): For C++ test cases only...
Deleted branch temp-test-branch (was 9193542).
Fail to build gcc for commit [9193542], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3c79fa86db0cf6bbcc3673c2844e85ca8679370c] c-decl.c (c_expand_body_1): Remove and fold back into ...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3c79fa8]
+---------------------------------------- Current commit hash: [3c79fa8] ----------------------------------------+
Building GCC for commit [3c79fa8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3c79fa8 c-decl.c (c_expand_body_1): Remove and fold back into ...
HEAD is now at 3c79fa8 c-decl.c (c_expand_body_1): Remove and fold back into ...
Note: checking out '3c79fa8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3c79fa8... c-decl.c (c_expand_body_1): Remove and fold back into ...
Deleted branch temp-test-branch (was 3c79fa8).
Fail to build gcc for commit [3c79fa8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c779c42fc3bb5ad4abe8065559f6fff74cc9caa9] re PR bootstrap/15120 ([3.3 only] [libtool bug] hidden symbol `__sdivsi3_i4' is referenced by DSO)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c779c42]
+---------------------------------------- Current commit hash: [c779c42] ----------------------------------------+
Building GCC for commit [c779c42]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c779c42 re PR bootstrap/15120 ([3.3 only] [libtool bug] hidden symbol `__sdivsi3_i4' is referenced by DSO)
HEAD is now at c779c42 re PR bootstrap/15120 ([3.3 only] [libtool bug] hidden symbol `__sdivsi3_i4' is referenced by DSO)
Note: checking out 'c779c42'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c779c42... re PR bootstrap/15120 ([3.3 only] [libtool bug] hidden symbol `__sdivsi3_i4' is referenced by DSO)
Deleted branch temp-test-branch (was c779c42).
Fail to build gcc for commit [c779c42], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[41fd3bac90eeedbfcc63255a1139d16b733db5f2] c-pretty-print.c (pp_c_left_bracket): Make a function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [41fd3ba]
+---------------------------------------- Current commit hash: [41fd3ba] ----------------------------------------+
Building GCC for commit [41fd3ba]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 41fd3ba c-pretty-print.c (pp_c_left_bracket): Make a function.
HEAD is now at 41fd3ba c-pretty-print.c (pp_c_left_bracket): Make a function.
Note: checking out '41fd3ba'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 41fd3ba... c-pretty-print.c (pp_c_left_bracket): Make a function.
Deleted branch temp-test-branch (was 41fd3ba).
Fail to build gcc for commit [41fd3ba], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5b200ac2c7278c022c23a684589df1b31a40a153] f95-lang.c (gfc_init_builtin_functions): Use vold_list_node.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5b200ac]
+---------------------------------------- Current commit hash: [5b200ac] ----------------------------------------+
Building GCC for commit [5b200ac]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5b200ac f95-lang.c (gfc_init_builtin_functions): Use vold_list_node.
HEAD is now at 5b200ac f95-lang.c (gfc_init_builtin_functions): Use vold_list_node.
Note: checking out '5b200ac'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5b200ac... f95-lang.c (gfc_init_builtin_functions): Use vold_list_node.
Deleted branch temp-test-branch (was 5b200ac).
Fail to build gcc for commit [5b200ac], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[67c605a553faab6244a1b1d987059798e6c1f9aa] i386.h (EXPAND_BUILTIN_VA_ARG): Just abort.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67c605a]
+---------------------------------------- Current commit hash: [67c605a] ----------------------------------------+
Building GCC for commit [67c605a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67c605a i386.h (EXPAND_BUILTIN_VA_ARG): Just abort.
HEAD is now at 67c605a i386.h (EXPAND_BUILTIN_VA_ARG): Just abort.
Note: checking out '67c605a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67c605a... i386.h (EXPAND_BUILTIN_VA_ARG): Just abort.
Deleted branch temp-test-branch (was 67c605a).
Fail to build gcc for commit [67c605a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a6845d137a4deddc939dc367f17080fe5fe4e258] Fix typo in last commit.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a6845d1]
+---------------------------------------- Current commit hash: [a6845d1] ----------------------------------------+
Building GCC for commit [a6845d1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a6845d1 Fix typo in last commit.
HEAD is now at a6845d1 Fix typo in last commit.
Note: checking out 'a6845d1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a6845d1... Fix typo in last commit.
Deleted branch temp-test-branch (was a6845d1).
Fail to build gcc for commit [a6845d1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[afeebbc08ead47e1305c69c6129b7abc739ef4b1] fix typo
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [afeebbc]
+---------------------------------------- Current commit hash: [afeebbc] ----------------------------------------+
Building GCC for commit [afeebbc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: afeebbc fix typo
HEAD is now at afeebbc fix typo
Note: checking out 'afeebbc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at afeebbc... fix typo
Deleted branch temp-test-branch (was afeebbc).
Fail to build gcc for commit [afeebbc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6687b0fc2ac79ef97524f859d39d165f98578a5a] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6687b0f]
+---------------------------------------- Current commit hash: [6687b0f] ----------------------------------------+
Building GCC for commit [6687b0f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6687b0f Daily bump.
HEAD is now at 6687b0f Daily bump.
Note: checking out '6687b0f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6687b0f... Daily bump.
Deleted branch temp-test-branch (was 6687b0f).
Fail to build gcc for commit [6687b0f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bdd2a210b8d0a75ec992299a7af767a0cfe1e0ff] istream.tcc (istream::ignore): Fix for -Wuninitialized.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bdd2a21]
+---------------------------------------- Current commit hash: [bdd2a21] ----------------------------------------+
Building GCC for commit [bdd2a21]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bdd2a21 istream.tcc (istream::ignore): Fix for -Wuninitialized.
HEAD is now at bdd2a21 istream.tcc (istream::ignore): Fix for -Wuninitialized.
Note: checking out 'bdd2a21'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bdd2a21... istream.tcc (istream::ignore): Fix for -Wuninitialized.
Deleted branch temp-test-branch (was bdd2a21).
Fail to build gcc for commit [bdd2a21], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5520b936c8cdde4802352b1cf4ce1ba5cacdb294] Tidied up/fixed compilation of exception.c
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5520b93]
+---------------------------------------- Current commit hash: [5520b93] ----------------------------------------+
Building GCC for commit [5520b93]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5520b93 Tidied up/fixed compilation of exception.c
HEAD is now at 5520b93 Tidied up/fixed compilation of exception.c
Note: checking out '5520b93'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5520b93... Tidied up/fixed compilation of exception.c
Deleted branch temp-test-branch (was 5520b93).
Fail to build gcc for commit [5520b93], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3aeb3655cf89356c86726d49316dcb957859971f] c-typeck.c (common_type): Don't lose type qualifiers when creating new variants.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3aeb365]
+---------------------------------------- Current commit hash: [3aeb365] ----------------------------------------+
Building GCC for commit [3aeb365]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3aeb365 c-typeck.c (common_type): Don't lose type qualifiers when creating new variants.
HEAD is now at 3aeb365 c-typeck.c (common_type): Don't lose type qualifiers when creating new variants.
Note: checking out '3aeb365'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3aeb365... c-typeck.c (common_type): Don't lose type qualifiers when creating new variants.
Deleted branch temp-test-branch (was 3aeb365).
Fail to build gcc for commit [3aeb365], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e2aa7005e792abe50ec7084b4850db0bf8c982ab] mt_allocator (__mt_alloc<>::_Tune): Add _M_align, the alignment requested.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e2aa700]
+---------------------------------------- Current commit hash: [e2aa700] ----------------------------------------+
Building GCC for commit [e2aa700]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e2aa700 mt_allocator (__mt_alloc<>::_Tune): Add _M_align, the alignment requested.
HEAD is now at e2aa700 mt_allocator (__mt_alloc<>::_Tune): Add _M_align, the alignment requested.
Note: checking out 'e2aa700'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e2aa700... mt_allocator (__mt_alloc<>::_Tune): Add _M_align, the alignment requested.
Deleted branch temp-test-branch (was e2aa700).
Fail to build gcc for commit [e2aa700], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[59587b18ab8fcde4fffb1ffe32c150ea514876d4] Makefile.in (RA_H, [...]): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [59587b1]
+---------------------------------------- Current commit hash: [59587b1] ----------------------------------------+
Building GCC for commit [59587b1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 59587b1 Makefile.in (RA_H, [...]): New.
HEAD is now at 59587b1 Makefile.in (RA_H, [...]): New.
Note: checking out '59587b1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 59587b1... Makefile.in (RA_H, [...]): New.
Deleted branch temp-test-branch (was 59587b1).
Fail to build gcc for commit [59587b1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f4a1faa55f8f157e36e9b6194055c6dc8fbe2763] testsuite_hooks.h (func_callback): Declare copy constructor and assignment operator private.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f4a1faa]
+---------------------------------------- Current commit hash: [f4a1faa] ----------------------------------------+
Building GCC for commit [f4a1faa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f4a1faa testsuite_hooks.h (func_callback): Declare copy constructor and assignment operator private.
HEAD is now at f4a1faa testsuite_hooks.h (func_callback): Declare copy constructor and assignment operator private.
Note: checking out 'f4a1faa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f4a1faa... testsuite_hooks.h (func_callback): Declare copy constructor and assignment operator private.
Deleted branch temp-test-branch (was f4a1faa).
Fail to build gcc for commit [f4a1faa], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[dc88d66f1aa98873becd21900046cae7bccbc14c] ctype support.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dc88d66]
+---------------------------------------- Current commit hash: [dc88d66] ----------------------------------------+
Building GCC for commit [dc88d66]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dc88d66 ctype support.
HEAD is now at dc88d66 ctype support.
Note: checking out 'dc88d66'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dc88d66... ctype support.
Deleted branch temp-test-branch (was dc88d66).
Fail to build gcc for commit [dc88d66], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[398ce3dd7c85766ec8645d7815fac8248c568b54] c-typeck.c (tagged_types_tu_compatible_p <case UNION_TYPE>): Use TYPE_FIELDS instead of TYPE_VALUES.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [398ce3d]
+---------------------------------------- Current commit hash: [398ce3d] ----------------------------------------+
Building GCC for commit [398ce3d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 398ce3d c-typeck.c (tagged_types_tu_compatible_p <case UNION_TYPE>): Use TYPE_FIELDS instead of TYPE_VALUES.
HEAD is now at 398ce3d c-typeck.c (tagged_types_tu_compatible_p <case UNION_TYPE>): Use TYPE_FIELDS instead of TYPE_VALUES.
Note: checking out '398ce3d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 398ce3d... c-typeck.c (tagged_types_tu_compatible_p <case UNION_TYPE>): Use TYPE_FIELDS instead of TYPE_VALUES.
Deleted branch temp-test-branch (was 398ce3d).
Fail to build gcc for commit [398ce3d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b9d71ce3e4860dd7ae12039eaa05c9731b12a095] configure.in (LIBMUDFLAPTH): Fix thinko.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9d71ce]
+---------------------------------------- Current commit hash: [b9d71ce] ----------------------------------------+
Building GCC for commit [b9d71ce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9d71ce configure.in (LIBMUDFLAPTH): Fix thinko.
HEAD is now at b9d71ce configure.in (LIBMUDFLAPTH): Fix thinko.
Note: checking out 'b9d71ce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9d71ce... configure.in (LIBMUDFLAPTH): Fix thinko.
Deleted branch temp-test-branch (was b9d71ce).
Fail to build gcc for commit [b9d71ce], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6eade693b5f5f0c6d7b75d61d44b75eafc94dd1d] altivec-6.c: Use -maltivec, don't limit to darwin.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6eade69]
+---------------------------------------- Current commit hash: [6eade69] ----------------------------------------+
Building GCC for commit [6eade69]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6eade69 altivec-6.c: Use -maltivec, don't limit to darwin.
HEAD is now at 6eade69 altivec-6.c: Use -maltivec, don't limit to darwin.
Note: checking out '6eade69'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6eade69... altivec-6.c: Use -maltivec, don't limit to darwin.
Deleted branch temp-test-branch (was 6eade69).
Fail to build gcc for commit [6eade69], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[02760d2f0843e45c0336586a34ac01ae7a9e549f] re PR target/15790 ([3.4 only] Alignment error building gcc with i686-coff target)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [02760d2]
+---------------------------------------- Current commit hash: [02760d2] ----------------------------------------+
Building GCC for commit [02760d2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 02760d2 re PR target/15790 ([3.4 only] Alignment error building gcc with i686-coff target)
HEAD is now at 02760d2 re PR target/15790 ([3.4 only] Alignment error building gcc with i686-coff target)
Note: checking out '02760d2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 02760d2... re PR target/15790 ([3.4 only] Alignment error building gcc with i686-coff target)
Deleted branch temp-test-branch (was 02760d2).
Fail to build gcc for commit [02760d2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5e04daf3171dcb6095a9ee91fe09bf5a70df43a0] m68k.md (movsi_cfv4): New pattern to allow mov3q.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5e04daf]
+---------------------------------------- Current commit hash: [5e04daf] ----------------------------------------+
Building GCC for commit [5e04daf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5e04daf m68k.md (movsi_cfv4): New pattern to allow mov3q.
HEAD is now at 5e04daf m68k.md (movsi_cfv4): New pattern to allow mov3q.
Note: checking out '5e04daf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5e04daf... m68k.md (movsi_cfv4): New pattern to allow mov3q.
Deleted branch temp-test-branch (was 5e04daf).
Fail to build gcc for commit [5e04daf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[59068a897368c953c7acebf678cd29fb46038711] Correct indentation of one line.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [59068a8]
+---------------------------------------- Current commit hash: [59068a8] ----------------------------------------+
Building GCC for commit [59068a8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 59068a8 Correct indentation of one line.
HEAD is now at 59068a8 Correct indentation of one line.
Note: checking out '59068a8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 59068a8... Correct indentation of one line.
Deleted branch temp-test-branch (was 59068a8).
Fail to build gcc for commit [59068a8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e0885edbf5c198f300fec204b3688ecf5e6839ef] * fr.po: Update.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e0885ed]
+---------------------------------------- Current commit hash: [e0885ed] ----------------------------------------+
Building GCC for commit [e0885ed]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e0885ed * fr.po: Update.
HEAD is now at e0885ed * fr.po: Update.
Note: checking out 'e0885ed'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e0885ed... * fr.po: Update.
Deleted branch temp-test-branch (was e0885ed).
Fail to build gcc for commit [e0885ed], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0b87eff52480d8fea4628b95df61998ef0dab95c] convert.c (convert_to_integer): Make a CONVERT_EXPR when there is a need to generate code instead of a NOP_EXPR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b87eff]
+---------------------------------------- Current commit hash: [0b87eff] ----------------------------------------+
Building GCC for commit [0b87eff]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b87eff convert.c (convert_to_integer): Make a CONVERT_EXPR when there is a need to generate code instead of a NOP_EXPR.
HEAD is now at 0b87eff convert.c (convert_to_integer): Make a CONVERT_EXPR when there is a need to generate code instead of a NOP_EXPR.
Note: checking out '0b87eff'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b87eff... convert.c (convert_to_integer): Make a CONVERT_EXPR when there is a need to generate code instead of a NOP_EXPR.
Deleted branch temp-test-branch (was 0b87eff).
Fail to build gcc for commit [0b87eff], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[63645982e7f5d9d95f152052431db81c2f119a15] gfortran.h (gfc_current_locus, [...]): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6364598]
+---------------------------------------- Current commit hash: [6364598] ----------------------------------------+
Building GCC for commit [6364598]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6364598 gfortran.h (gfc_current_locus, [...]): Remove.
HEAD is now at 6364598 gfortran.h (gfc_current_locus, [...]): Remove.
Note: checking out '6364598'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6364598... gfortran.h (gfc_current_locus, [...]): Remove.
Deleted branch temp-test-branch (was 6364598).
Fail to build gcc for commit [6364598], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[71f85957b6ec652431ca32b7de602167180b7fe0] gimplify.c (gimplify_compound_lval): Reset TREE_SIDE_EFFECTS after gimplifying the innermost component.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [71f8595]
+---------------------------------------- Current commit hash: [71f8595] ----------------------------------------+
Building GCC for commit [71f8595]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 71f8595 gimplify.c (gimplify_compound_lval): Reset TREE_SIDE_EFFECTS after gimplifying the innermost component.
HEAD is now at 71f8595 gimplify.c (gimplify_compound_lval): Reset TREE_SIDE_EFFECTS after gimplifying the innermost component.
Note: checking out '71f8595'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 71f8595... gimplify.c (gimplify_compound_lval): Reset TREE_SIDE_EFFECTS after gimplifying the innermost component.
Deleted branch temp-test-branch (was 71f8595).
Fail to build gcc for commit [71f8595], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[de5c90ffa4932daa2eb83cd6f7c831926bc5b9a5] * longlong.h: Fix macros for m32r add_ssaaaa and sub_ddmmss.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de5c90f]
+---------------------------------------- Current commit hash: [de5c90f] ----------------------------------------+
Building GCC for commit [de5c90f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de5c90f * longlong.h: Fix macros for m32r add_ssaaaa and sub_ddmmss.
HEAD is now at de5c90f * longlong.h: Fix macros for m32r add_ssaaaa and sub_ddmmss.
Note: checking out 'de5c90f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de5c90f... * longlong.h: Fix macros for m32r add_ssaaaa and sub_ddmmss.
Deleted branch temp-test-branch (was de5c90f).
Fail to build gcc for commit [de5c90f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[68d560d4d612ad0683bae7b36708ef88685316c5] arm.c (arm_arch4t): New variable.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [68d560d]
+---------------------------------------- Current commit hash: [68d560d] ----------------------------------------+
Building GCC for commit [68d560d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 68d560d arm.c (arm_arch4t): New variable.
HEAD is now at 68d560d arm.c (arm_arch4t): New variable.
Note: checking out '68d560d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 68d560d... arm.c (arm_arch4t): New variable.
Deleted branch temp-test-branch (was 68d560d).
Fail to build gcc for commit [68d560d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2fec96c1b922c681881f3a7e524ded5f86ab11c4] c-common.c (c_estimate_num_insns_1): Kill.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2fec96c]
+---------------------------------------- Current commit hash: [2fec96c] ----------------------------------------+
Building GCC for commit [2fec96c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2fec96c c-common.c (c_estimate_num_insns_1): Kill.
HEAD is now at 2fec96c c-common.c (c_estimate_num_insns_1): Kill.
Note: checking out '2fec96c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2fec96c... c-common.c (c_estimate_num_insns_1): Kill.
Deleted branch temp-test-branch (was 2fec96c).
Fail to build gcc for commit [2fec96c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b89e96acc404cb92fe60b4527e1c98189401f0a7] re PR rtl-optimization/14472 ([tree-ssa] [regression] no sib calling for enum to int functions)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b89e96a]
+---------------------------------------- Current commit hash: [b89e96a] ----------------------------------------+
Building GCC for commit [b89e96a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b89e96a re PR rtl-optimization/14472 ([tree-ssa] [regression] no sib calling for enum to int functions)
HEAD is now at b89e96a re PR rtl-optimization/14472 ([tree-ssa] [regression] no sib calling for enum to int functions)
Note: checking out 'b89e96a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b89e96a... re PR rtl-optimization/14472 ([tree-ssa] [regression] no sib calling for enum to int functions)
Deleted branch temp-test-branch (was b89e96a).
Fail to build gcc for commit [b89e96a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7c82a41e7f18796040b3e6effbf6c483b7beb915] re PR c++/15096 (parse error with templates and pointer to const member)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c82a41]
+---------------------------------------- Current commit hash: [7c82a41] ----------------------------------------+
Building GCC for commit [7c82a41]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c82a41 re PR c++/15096 (parse error with templates and pointer to const member)
HEAD is now at 7c82a41 re PR c++/15096 (parse error with templates and pointer to const member)
Note: checking out '7c82a41'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c82a41... re PR c++/15096 (parse error with templates and pointer to const member)
Deleted branch temp-test-branch (was 7c82a41).
Fail to build gcc for commit [7c82a41], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9322b95bd7dee4569ef6579e2a59dd37f12c4daf] const-elim-1.c: Remove XFAIL for s390*-*-*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9322b95]
+---------------------------------------- Current commit hash: [9322b95] ----------------------------------------+
Building GCC for commit [9322b95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9322b95 const-elim-1.c: Remove XFAIL for s390*-*-*.
HEAD is now at 9322b95 const-elim-1.c: Remove XFAIL for s390*-*-*.
Note: checking out '9322b95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9322b95... const-elim-1.c: Remove XFAIL for s390*-*-*.
Deleted branch temp-test-branch (was 9322b95).
Fail to build gcc for commit [9322b95], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[14ba6d00aaf750cc165764cf09a66c53d2a005a5] slist: Trivial formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [14ba6d0]
+---------------------------------------- Current commit hash: [14ba6d0] ----------------------------------------+
Building GCC for commit [14ba6d0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 14ba6d0 slist: Trivial formatting fixes.
HEAD is now at 14ba6d0 slist: Trivial formatting fixes.
Note: checking out '14ba6d0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 14ba6d0... slist: Trivial formatting fixes.
Deleted branch temp-test-branch (was 14ba6d0).
Fail to build gcc for commit [14ba6d0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8c56bb830708cab8909c6911124af2565ad1acc6] c-gimplify.c (gimplify_decl_stmt): Push gimplify_one_sizepos inside non-constant size check.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8c56bb8]
+---------------------------------------- Current commit hash: [8c56bb8] ----------------------------------------+
Building GCC for commit [8c56bb8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8c56bb8 c-gimplify.c (gimplify_decl_stmt): Push gimplify_one_sizepos inside non-constant size check.
HEAD is now at 8c56bb8 c-gimplify.c (gimplify_decl_stmt): Push gimplify_one_sizepos inside non-constant size check.
Note: checking out '8c56bb8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8c56bb8... c-gimplify.c (gimplify_decl_stmt): Push gimplify_one_sizepos inside non-constant size check.
Deleted branch temp-test-branch (was 8c56bb8).
Fail to build gcc for commit [8c56bb8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b453c95fd3fa689a6d70e8878848e5d6531e9ac5] Index: libcpp/ChangeLog 2004-05-29  Geoffrey Keating  <geoffk@apple.com>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b453c95]
+---------------------------------------- Current commit hash: [b453c95] ----------------------------------------+
Building GCC for commit [b453c95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b453c95 Index: libcpp/ChangeLog 2004-05-29  Geoffrey Keating  <geoffk@apple.com>
HEAD is now at b453c95 Index: libcpp/ChangeLog
Note: checking out 'b453c95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b453c95... Index: libcpp/ChangeLog 2004-05-29  Geoffrey Keating  <geoffk@apple.com>
Deleted branch temp-test-branch (was b453c95).
Fail to build gcc for commit [b453c95], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[881f20cbcdaaed818ceb9f8e99226ac8c77743da] * gcc.dg/kpice1.c: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [881f20c]
+---------------------------------------- Current commit hash: [881f20c] ----------------------------------------+
Building GCC for commit [881f20c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 881f20c * gcc.dg/kpice1.c: New test.
HEAD is now at 881f20c * gcc.dg/kpice1.c: New test.
Note: checking out '881f20c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 881f20c... * gcc.dg/kpice1.c: New test.
Deleted branch temp-test-branch (was 881f20c).
Fail to build gcc for commit [881f20c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3839e36afce7cf51ec030562adcad7af941495e9] s390.h: Rename TARGET_TPF to TARGET_TPF_PROFILING.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3839e36]
+---------------------------------------- Current commit hash: [3839e36] ----------------------------------------+
Building GCC for commit [3839e36]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3839e36 s390.h: Rename TARGET_TPF to TARGET_TPF_PROFILING.
HEAD is now at 3839e36 s390.h: Rename TARGET_TPF to TARGET_TPF_PROFILING.
Note: checking out '3839e36'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3839e36... s390.h: Rename TARGET_TPF to TARGET_TPF_PROFILING.
Deleted branch temp-test-branch (was 3839e36).
Fail to build gcc for commit [3839e36], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e876acbd25c26828c235f0723fc5b4554f4ea9d6] arith.c (gfc_real2complex): Range checking wrong part of complex number.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e876acb]
+---------------------------------------- Current commit hash: [e876acb] ----------------------------------------+
Building GCC for commit [e876acb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e876acb arith.c (gfc_real2complex): Range checking wrong part of complex number.
HEAD is now at e876acb arith.c (gfc_real2complex): Range checking wrong part of complex number.
Note: checking out 'e876acb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e876acb... arith.c (gfc_real2complex): Range checking wrong part of complex number.
Deleted branch temp-test-branch (was e876acb).
Fail to build gcc for commit [e876acb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d1eea9c043477cfcdb0bb284b1176e215f0aa983] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1eea9c]
+---------------------------------------- Current commit hash: [d1eea9c] ----------------------------------------+
Building GCC for commit [d1eea9c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1eea9c Daily bump.
HEAD is now at d1eea9c Daily bump.
Note: checking out 'd1eea9c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1eea9c... Daily bump.
Deleted branch temp-test-branch (was d1eea9c).
Fail to build gcc for commit [d1eea9c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2ab20654a24e909b0e44cf3b25e53e64a0a76193] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2ab2065]
+---------------------------------------- Current commit hash: [2ab2065] ----------------------------------------+
Building GCC for commit [2ab2065]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2ab2065 [multiple changes]
HEAD is now at 2ab2065 [multiple changes]
Note: checking out '2ab2065'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2ab2065... [multiple changes]
Deleted branch temp-test-branch (was 2ab2065).
Fail to build gcc for commit [2ab2065], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7e6eb623f948dcaacab5e1251c99ebadc270c3d5] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7e6eb62]
+---------------------------------------- Current commit hash: [7e6eb62] ----------------------------------------+
Building GCC for commit [7e6eb62]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7e6eb62 [multiple changes]
HEAD is now at 7e6eb62 [multiple changes]
Note: checking out '7e6eb62'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7e6eb62... [multiple changes]
Deleted branch temp-test-branch (was 7e6eb62).
Fail to build gcc for commit [7e6eb62], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b080e5a29ed7265302bbd9acc739d4bd39975754] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b080e5a]
+---------------------------------------- Current commit hash: [b080e5a] ----------------------------------------+
Building GCC for commit [b080e5a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b080e5a Daily bump.
HEAD is now at b080e5a Daily bump.
Note: checking out 'b080e5a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b080e5a... Daily bump.
Deleted branch temp-test-branch (was b080e5a).
Fail to build gcc for commit [b080e5a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5847e53ee7e2bb6665c0652f46a071aa78de90bd] re PR target/12968 (doc m68k -mshort)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5847e53]
+---------------------------------------- Current commit hash: [5847e53] ----------------------------------------+
Building GCC for commit [5847e53]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5847e53 re PR target/12968 (doc m68k -mshort)
HEAD is now at 5847e53 re PR target/12968 (doc m68k -mshort)
Note: checking out '5847e53'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5847e53... re PR target/12968 (doc m68k -mshort)
Deleted branch temp-test-branch (was 5847e53).
Fail to build gcc for commit [5847e53], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d3a7ef9aacb50cbcd85a34966da10304f048a576] re PR other/15526 (-ftrapv aborts on 0 * (-1))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d3a7ef9]
+---------------------------------------- Current commit hash: [d3a7ef9] ----------------------------------------+
Building GCC for commit [d3a7ef9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d3a7ef9 re PR other/15526 (-ftrapv aborts on 0 * (-1))
HEAD is now at d3a7ef9 re PR other/15526 (-ftrapv aborts on 0 * (-1))
Note: checking out 'd3a7ef9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d3a7ef9... re PR other/15526 (-ftrapv aborts on 0 * (-1))
Deleted branch temp-test-branch (was d3a7ef9).
Fail to build gcc for commit [d3a7ef9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5801c4671e1109119701047bdd6ba833d622c95d] typeclass.h: Add GPL plus exception license.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5801c46]
+---------------------------------------- Current commit hash: [5801c46] ----------------------------------------+
Building GCC for commit [5801c46]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5801c46 typeclass.h: Add GPL plus exception license.
HEAD is now at 5801c46 typeclass.h: Add GPL plus exception license.
Note: checking out '5801c46'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5801c46... typeclass.h: Add GPL plus exception license.
Deleted branch temp-test-branch (was 5801c46).
Fail to build gcc for commit [5801c46], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b9861bff6c54b2eabafbe684647972f3c4f2a747] stmt.c (warn_if_unused_value): Add locus argument.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9861bf]
+---------------------------------------- Current commit hash: [b9861bf] ----------------------------------------+
Building GCC for commit [b9861bf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9861bf stmt.c (warn_if_unused_value): Add locus argument.
HEAD is now at b9861bf stmt.c (warn_if_unused_value): Add locus argument.
Note: checking out 'b9861bf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9861bf... stmt.c (warn_if_unused_value): Add locus argument.
Deleted branch temp-test-branch (was b9861bf).
Fail to build gcc for commit [b9861bf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ff2adb9d23ba70c0f68dec2093395a8f3d09655f] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ff2adb9]
+---------------------------------------- Current commit hash: [ff2adb9] ----------------------------------------+
Building GCC for commit [ff2adb9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ff2adb9 Daily bump.
HEAD is now at ff2adb9 Daily bump.
Note: checking out 'ff2adb9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ff2adb9... Daily bump.
Deleted branch temp-test-branch (was ff2adb9).
Fail to build gcc for commit [ff2adb9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e433aaee67235d51b8fc34b8ec625edcd3d7947e] io.c (check_format): Use gfc_notify_std to determine whether to issue an error/warning for omitting...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e433aae]
+---------------------------------------- Current commit hash: [e433aae] ----------------------------------------+
Building GCC for commit [e433aae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e433aae io.c (check_format): Use gfc_notify_std to determine whether to issue an error/warning for omitting...
HEAD is now at e433aae io.c (check_format): Use gfc_notify_std to determine whether to issue an error/warning for omitting...
Note: checking out 'e433aae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e433aae... io.c (check_format): Use gfc_notify_std to determine whether to issue an error/warning for omitting...
Deleted branch temp-test-branch (was e433aae).
Fail to build gcc for commit [e433aae], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[897105a14e2a6d66f472b57e98793798e459b5a9] unwind-ia64.c (uw_frame_state_for): Don't assume a leaf function without unwind info at RP 0.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [897105a]
+---------------------------------------- Current commit hash: [897105a] ----------------------------------------+
Building GCC for commit [897105a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 897105a unwind-ia64.c (uw_frame_state_for): Don't assume a leaf function without unwind info at RP 0.
HEAD is now at 897105a unwind-ia64.c (uw_frame_state_for): Don't assume a leaf function without unwind info at RP 0.
Note: checking out '897105a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 897105a... unwind-ia64.c (uw_frame_state_for): Don't assume a leaf function without unwind info at RP 0.
Deleted branch temp-test-branch (was 897105a).
Fail to build gcc for commit [897105a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e1af8299421eb7261ddcadf3630cf6dfa6c32099] fold-const.c (build_range_check): If !in_p and recursive call fails, exit immediately.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e1af829]
+---------------------------------------- Current commit hash: [e1af829] ----------------------------------------+
Building GCC for commit [e1af829]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e1af829 fold-const.c (build_range_check): If !in_p and recursive call fails, exit immediately.
HEAD is now at e1af829 fold-const.c (build_range_check): If !in_p and recursive call fails, exit immediately.
Note: checking out 'e1af829'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e1af829... fold-const.c (build_range_check): If !in_p and recursive call fails, exit immediately.
Deleted branch temp-test-branch (was e1af829).
Fail to build gcc for commit [e1af829], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a757585a22537753f3b9be9709789d8e000b5afe] tree.h: Remove include of version.h
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a757585]
+---------------------------------------- Current commit hash: [a757585] ----------------------------------------+
Building GCC for commit [a757585]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a757585 tree.h: Remove include of version.h
HEAD is now at a757585 tree.h: Remove include of version.h
Note: checking out 'a757585'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a757585... tree.h: Remove include of version.h
Deleted branch temp-test-branch (was a757585).
Fail to build gcc for commit [a757585], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ad0978e8460f6894f4b18169fbd76d2ed09757f9] * es.po: Update.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ad0978e]
+---------------------------------------- Current commit hash: [ad0978e] ----------------------------------------+
Building GCC for commit [ad0978e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ad0978e * es.po: Update.
HEAD is now at ad0978e * es.po: Update.
Note: checking out 'ad0978e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ad0978e... * es.po: Update.
Deleted branch temp-test-branch (was ad0978e).
Fail to build gcc for commit [ad0978e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f9d189555573e9df0cfdb6b7cc1fb78b84775134] re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f9d1895]
+---------------------------------------- Current commit hash: [f9d1895] ----------------------------------------+
Building GCC for commit [f9d1895]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f9d1895 re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
HEAD is now at f9d1895 re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
Note: checking out 'f9d1895'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f9d1895... re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
Deleted branch temp-test-branch (was f9d1895).
Fail to build gcc for commit [f9d1895], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a30f62e037a3d682233878bd6ad710f2d14729e4] re PR c++/15165 (ICE in instantiate_template)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a30f62e]
+---------------------------------------- Current commit hash: [a30f62e] ----------------------------------------+
Building GCC for commit [a30f62e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a30f62e re PR c++/15165 (ICE in instantiate_template)
HEAD is now at a30f62e re PR c++/15165 (ICE in instantiate_template)
Note: checking out 'a30f62e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a30f62e... re PR c++/15165 (ICE in instantiate_template)
Deleted branch temp-test-branch (was a30f62e).
Fail to build gcc for commit [a30f62e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e22df3157b6ab0237fbd627c05f7c180500a4423] re PR ada/6637 (Would be nice to support --enable-shared=gnat)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e22df31]
+---------------------------------------- Current commit hash: [e22df31] ----------------------------------------+
Building GCC for commit [e22df31]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e22df31 re PR ada/6637 (Would be nice to support --enable-shared=gnat)
HEAD is now at e22df31 re PR ada/6637 (Would be nice to support --enable-shared=gnat)
Note: checking out 'e22df31'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e22df31... re PR ada/6637 (Would be nice to support --enable-shared=gnat)
Deleted branch temp-test-branch (was e22df31).
Fail to build gcc for commit [e22df31], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bf2774382d22d4f842c0a581cbb296f8b1984d49] method.c (implicitly_declare_fn): Don't call defer_fn; abort if it might be needed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bf27743]
+---------------------------------------- Current commit hash: [bf27743] ----------------------------------------+
Building GCC for commit [bf27743]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bf27743 method.c (implicitly_declare_fn): Don't call defer_fn; abort if it might be needed.
HEAD is now at bf27743 method.c (implicitly_declare_fn): Don't call defer_fn; abort if it might be needed.
Note: checking out 'bf27743'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bf27743... method.c (implicitly_declare_fn): Don't call defer_fn; abort if it might be needed.
Deleted branch temp-test-branch (was bf27743).
Fail to build gcc for commit [bf27743], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[dbeff3e56d566719bb3f0c1ba29362d61fe3ff85] v850.c (v850_use_dfa_pipeline_interface): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dbeff3e]
+---------------------------------------- Current commit hash: [dbeff3e] ----------------------------------------+
Building GCC for commit [dbeff3e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dbeff3e v850.c (v850_use_dfa_pipeline_interface): New.
HEAD is now at dbeff3e v850.c (v850_use_dfa_pipeline_interface): New.
Note: checking out 'dbeff3e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dbeff3e... v850.c (v850_use_dfa_pipeline_interface): New.
Deleted branch temp-test-branch (was dbeff3e).
Fail to build gcc for commit [dbeff3e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[435317e25c1f3571a72d97d089ca085ffd0bf20b] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [435317e]
+---------------------------------------- Current commit hash: [435317e] ----------------------------------------+
Building GCC for commit [435317e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 435317e [multiple changes]
HEAD is now at 435317e [multiple changes]
Note: checking out '435317e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 435317e... [multiple changes]
Deleted branch temp-test-branch (was 435317e).
Fail to build gcc for commit [435317e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5a2d52cadadb2c5b56a22131fe0d0fca4910b1a3] libtool-version: Fix typo in revision/age.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a2d52c]
+---------------------------------------- Current commit hash: [5a2d52c] ----------------------------------------+
Building GCC for commit [5a2d52c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a2d52c libtool-version: Fix typo in revision/age.
HEAD is now at 5a2d52c libtool-version: Fix typo in revision/age.
Note: checking out '5a2d52c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a2d52c... libtool-version: Fix typo in revision/age.
Deleted branch temp-test-branch (was 5a2d52c).
Fail to build gcc for commit [5a2d52c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b9d861bc86c97e68ea474750bb33dfd10f72119d] lex.c (java_new_lexer): Set 'encoding'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9d861b]
+---------------------------------------- Current commit hash: [b9d861b] ----------------------------------------+
Building GCC for commit [b9d861b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9d861b lex.c (java_new_lexer): Set 'encoding'.
HEAD is now at b9d861b lex.c (java_new_lexer): Set 'encoding'.
Note: checking out 'b9d861b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9d861b... lex.c (java_new_lexer): Set 'encoding'.
Deleted branch temp-test-branch (was b9d861b).
Fail to build gcc for commit [b9d861b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[09532ff5942f81d125fade2243d372a26c238141] 20030808-1.c: Force enum size.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [09532ff]
+---------------------------------------- Current commit hash: [09532ff] ----------------------------------------+
Building GCC for commit [09532ff]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 09532ff 20030808-1.c: Force enum size.
HEAD is now at 09532ff 20030808-1.c: Force enum size.
Note: checking out '09532ff'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 09532ff... 20030808-1.c: Force enum size.
Deleted branch temp-test-branch (was 09532ff).
Fail to build gcc for commit [09532ff], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c8a6f15498c274ee708b862f61d8358a2d4c11ea] tree-flow-inline.h (stmt_ann): Remove use of is_essa_node.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c8a6f15]
+---------------------------------------- Current commit hash: [c8a6f15] ----------------------------------------+
Building GCC for commit [c8a6f15]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c8a6f15 tree-flow-inline.h (stmt_ann): Remove use of is_essa_node.
HEAD is now at c8a6f15 tree-flow-inline.h (stmt_ann): Remove use of is_essa_node.
Note: checking out 'c8a6f15'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c8a6f15... tree-flow-inline.h (stmt_ann): Remove use of is_essa_node.
Deleted branch temp-test-branch (was c8a6f15).
Fail to build gcc for commit [c8a6f15], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6b9bee8ee6bd4925078813d6d0b198b2d19f3853] tree-ssa.c (delete_tree_ssa): XFREE bitmaps allocated with BITMAP_XMALLOC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6b9bee8]
+---------------------------------------- Current commit hash: [6b9bee8] ----------------------------------------+
Building GCC for commit [6b9bee8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6b9bee8 tree-ssa.c (delete_tree_ssa): XFREE bitmaps allocated with BITMAP_XMALLOC.
HEAD is now at 6b9bee8 tree-ssa.c (delete_tree_ssa): XFREE bitmaps allocated with BITMAP_XMALLOC.
Note: checking out '6b9bee8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6b9bee8... tree-ssa.c (delete_tree_ssa): XFREE bitmaps allocated with BITMAP_XMALLOC.
Deleted branch temp-test-branch (was 6b9bee8).
Fail to build gcc for commit [6b9bee8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4fbf3498e4c9f43d7143d22f7a0b0f0ce9a067bf] re PR target/13250 ([3.4 only] [SH] Gcc code for rotation clobbers the register, but gcc continues to use the register as if it was not clobbered)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4fbf349]
+---------------------------------------- Current commit hash: [4fbf349] ----------------------------------------+
Building GCC for commit [4fbf349]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4fbf349 re PR target/13250 ([3.4 only] [SH] Gcc code for rotation clobbers the register, but gcc continues to use the register as if it was not clobbered)
HEAD is now at 4fbf349 re PR target/13250 ([3.4 only] [SH] Gcc code for rotation clobbers the register, but gcc continues to use the register as if it was not clobbered)
Note: checking out '4fbf349'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4fbf349... re PR target/13250 ([3.4 only] [SH] Gcc code for rotation clobbers the register, but gcc continues to use the register as if it was not clobbered)
Deleted branch temp-test-branch (was 4fbf349).
Fail to build gcc for commit [4fbf349], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8765339d0b13e84a05d615392655a9b13a604b4a] re PR fortran/15205 (NEAREST intrinsic returns wrong value in DOUBLE PRECISION)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8765339]
+---------------------------------------- Current commit hash: [8765339] ----------------------------------------+
Building GCC for commit [8765339]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8765339 re PR fortran/15205 (NEAREST intrinsic returns wrong value in DOUBLE PRECISION)
HEAD is now at 8765339 re PR fortran/15205 (NEAREST intrinsic returns wrong value in DOUBLE PRECISION)
Note: checking out '8765339'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8765339... re PR fortran/15205 (NEAREST intrinsic returns wrong value in DOUBLE PRECISION)
Deleted branch temp-test-branch (was 8765339).
Fail to build gcc for commit [8765339], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[45863ba3631b41587cc34ea3f7621bf191f4eb9f] gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [45863ba]
+---------------------------------------- Current commit hash: [45863ba] ----------------------------------------+
Building GCC for commit [45863ba]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 45863ba gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
HEAD is now at 45863ba gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
Note: checking out '45863ba'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 45863ba... gthr-posix.h: Check for _POSIX_PRIORITY_SCHEDULING when checking for...
Deleted branch temp-test-branch (was 45863ba).
Fail to build gcc for commit [45863ba], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[15f8ac7f0878178cca61636f81323629624e4585] name-lookup.c (struct scope_binding): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [15f8ac7]
+---------------------------------------- Current commit hash: [15f8ac7] ----------------------------------------+
Building GCC for commit [15f8ac7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 15f8ac7 name-lookup.c (struct scope_binding): New.
HEAD is now at 15f8ac7 name-lookup.c (struct scope_binding): New.
Note: checking out '15f8ac7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 15f8ac7... name-lookup.c (struct scope_binding): New.
Deleted branch temp-test-branch (was 15f8ac7).
Fail to build gcc for commit [15f8ac7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b3dd05b10a8318c7af07941d3b13b75b5c4f5683] re PR c++/15471 (Incorrect member pointer offsets in anonymous structs/unions)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b3dd05b]
+---------------------------------------- Current commit hash: [b3dd05b] ----------------------------------------+
Building GCC for commit [b3dd05b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b3dd05b re PR c++/15471 (Incorrect member pointer offsets in anonymous structs/unions)
HEAD is now at b3dd05b re PR c++/15471 (Incorrect member pointer offsets in anonymous structs/unions)
Note: checking out 'b3dd05b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b3dd05b... re PR c++/15471 (Incorrect member pointer offsets in anonymous structs/unions)
Deleted branch temp-test-branch (was b3dd05b).
Fail to build gcc for commit [b3dd05b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[39ae2b013af4a6a8fbdd8bc2ee72cdda174e0d95] Make-lang.in (trans-common.o): Remove redundant dependency.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [39ae2b0]
+---------------------------------------- Current commit hash: [39ae2b0] ----------------------------------------+
Building GCC for commit [39ae2b0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 39ae2b0 Make-lang.in (trans-common.o): Remove redundant dependency.
HEAD is now at 39ae2b0 Make-lang.in (trans-common.o): Remove redundant dependency.
Note: checking out '39ae2b0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 39ae2b0... Make-lang.in (trans-common.o): Remove redundant dependency.
Deleted branch temp-test-branch (was 39ae2b0).
Fail to build gcc for commit [39ae2b0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[803cb0b5c9ff81ba0b4ec018fff529a9b7cf43f2] re PR libstdc++/14600 (__gnu_cxx::stdio_sync_filebuf should expose internal FILE*)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [803cb0b]
+---------------------------------------- Current commit hash: [803cb0b] ----------------------------------------+
Building GCC for commit [803cb0b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 803cb0b re PR libstdc++/14600 (__gnu_cxx::stdio_sync_filebuf should expose internal FILE*)
HEAD is now at 803cb0b re PR libstdc++/14600 (__gnu_cxx::stdio_sync_filebuf should expose internal FILE*)
Note: checking out '803cb0b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 803cb0b... re PR libstdc++/14600 (__gnu_cxx::stdio_sync_filebuf should expose internal FILE*)
Deleted branch temp-test-branch (was 803cb0b).
Fail to build gcc for commit [803cb0b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d18227544985fbd2e01d73c706ae3bcc24f00d98] fold-const.c (make_range): Cleanup type checking through function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d182275]
+---------------------------------------- Current commit hash: [d182275] ----------------------------------------+
Building GCC for commit [d182275]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d182275 fold-const.c (make_range): Cleanup type checking through function.
HEAD is now at d182275 fold-const.c (make_range): Cleanup type checking through function.
Note: checking out 'd182275'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d182275... fold-const.c (make_range): Cleanup type checking through function.
Deleted branch temp-test-branch (was d182275).
Fail to build gcc for commit [d182275], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ebeb17c7bb8d07d412b5f02786fb79b0ab0ad2b9] random.c: Include unistd.h for close and read prototypes...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ebeb17c]
+---------------------------------------- Current commit hash: [ebeb17c] ----------------------------------------+
Building GCC for commit [ebeb17c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ebeb17c random.c: Include unistd.h for close and read prototypes...
HEAD is now at ebeb17c random.c: Include unistd.h for close and read prototypes...
Note: checking out 'ebeb17c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ebeb17c... random.c: Include unistd.h for close and read prototypes...
Deleted branch temp-test-branch (was ebeb17c).
Fail to build gcc for commit [ebeb17c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d83aba0f8b3bfec016bb62d146e022b15c35f1ca] optabs.c (expand_unop): Try implementing negation using subtraction from zero.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d83aba0]
+---------------------------------------- Current commit hash: [d83aba0] ----------------------------------------+
Building GCC for commit [d83aba0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d83aba0 optabs.c (expand_unop): Try implementing negation using subtraction from zero.
HEAD is now at d83aba0 optabs.c (expand_unop): Try implementing negation using subtraction from zero.
Note: checking out 'd83aba0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d83aba0... optabs.c (expand_unop): Try implementing negation using subtraction from zero.
Deleted branch temp-test-branch (was d83aba0).
Fail to build gcc for commit [d83aba0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9471628798891a7bc2cf21721764520325630c9b] re PR fortran/14067 (no warning when character data statement overflows declared size)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9471628]
+---------------------------------------- Current commit hash: [9471628] ----------------------------------------+
Building GCC for commit [9471628]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9471628 re PR fortran/14067 (no warning when character data statement overflows declared size)
HEAD is now at 9471628 re PR fortran/14067 (no warning when character data statement overflows declared size)
Note: checking out '9471628'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9471628... re PR fortran/14067 (no warning when character data statement overflows declared size)
Deleted branch temp-test-branch (was 9471628).
Fail to build gcc for commit [9471628], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fa948784585f473882d2ab7085df5df21ea1a38d] istream.tcc (getline): Make sure arguments passed to min/max have the same type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fa94878]
+---------------------------------------- Current commit hash: [fa94878] ----------------------------------------+
Building GCC for commit [fa94878]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fa94878 istream.tcc (getline): Make sure arguments passed to min/max have the same type.
HEAD is now at fa94878 istream.tcc (getline): Make sure arguments passed to min/max have the same type.
Note: checking out 'fa94878'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fa94878... istream.tcc (getline): Make sure arguments passed to min/max have the same type.
Deleted branch temp-test-branch (was fa94878).
Fail to build gcc for commit [fa94878], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c52eae8de072141afe6620df1ccd2803f86771ff] re PR fortran/14957 (testsuite issues)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c52eae8]
+---------------------------------------- Current commit hash: [c52eae8] ----------------------------------------+
Building GCC for commit [c52eae8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c52eae8 re PR fortran/14957 (testsuite issues)
HEAD is now at c52eae8 re PR fortran/14957 (testsuite issues)
Note: checking out 'c52eae8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c52eae8... re PR fortran/14957 (testsuite issues)
Deleted branch temp-test-branch (was c52eae8).
Fail to build gcc for commit [c52eae8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1833df5cfe2cf85a9cf1de054ab53569f59e0ae5] tree-ssa-phiopt.c (replace_phi_with_stmt): New function extracted from conditional_replacement.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1833df5]
+---------------------------------------- Current commit hash: [1833df5] ----------------------------------------+
Building GCC for commit [1833df5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1833df5 tree-ssa-phiopt.c (replace_phi_with_stmt): New function extracted from conditional_replacement.
HEAD is now at 1833df5 tree-ssa-phiopt.c (replace_phi_with_stmt): New function extracted from conditional_replacement.
Note: checking out '1833df5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1833df5... tree-ssa-phiopt.c (replace_phi_with_stmt): New function extracted from conditional_replacement.
Deleted branch temp-test-branch (was 1833df5).
Fail to build gcc for commit [1833df5], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e4602cf33b4359a1a92ffff5749eaf3422600993] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e4602cf]
+---------------------------------------- Current commit hash: [e4602cf] ----------------------------------------+
Building GCC for commit [e4602cf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e4602cf Daily bump.
HEAD is now at e4602cf Daily bump.
Note: checking out 'e4602cf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e4602cf... Daily bump.
Deleted branch temp-test-branch (was e4602cf).
Fail to build gcc for commit [e4602cf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d28f752bd30791925d7c6fbf08cf426026cd3279] fold-const.c: Remove non-printable character 160.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d28f752]
+---------------------------------------- Current commit hash: [d28f752] ----------------------------------------+
Building GCC for commit [d28f752]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d28f752 fold-const.c: Remove non-printable character 160.
HEAD is now at d28f752 fold-const.c: Remove non-printable character 160.
Note: checking out 'd28f752'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d28f752... fold-const.c: Remove non-printable character 160.
Deleted branch temp-test-branch (was d28f752).
Fail to build gcc for commit [d28f752], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[07659e9789694eddd0ca9b6abf86f036b400ceb8] install.texi (--enable-shared): Update libobjc's shared library status.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [07659e9]
+---------------------------------------- Current commit hash: [07659e9] ----------------------------------------+
Building GCC for commit [07659e9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 07659e9 install.texi (--enable-shared): Update libobjc's shared library status.
HEAD is now at 07659e9 install.texi (--enable-shared): Update libobjc's shared library status.
Note: checking out '07659e9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 07659e9... install.texi (--enable-shared): Update libobjc's shared library status.
Deleted branch temp-test-branch (was 07659e9).
Fail to build gcc for commit [07659e9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e7ebc32a807629769f5848ec0f7a2ba7e3fa281f] * encoding.c (BITS_PER_UNIT): Define if a definition is not provided.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e7ebc32]
+---------------------------------------- Current commit hash: [e7ebc32] ----------------------------------------+
Building GCC for commit [e7ebc32]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e7ebc32 * encoding.c (BITS_PER_UNIT): Define if a definition is not provided.
HEAD is now at e7ebc32 * encoding.c (BITS_PER_UNIT): Define if a definition is not provided.
Note: checking out 'e7ebc32'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e7ebc32... * encoding.c (BITS_PER_UNIT): Define if a definition is not provided.
Deleted branch temp-test-branch (was e7ebc32).
Fail to build gcc for commit [e7ebc32], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5f393b252ee431bad5c22b8a5ed43239d09e5eed] sparc.c (sparc_gimplify_va_arg): New fn.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5f393b2]
+---------------------------------------- Current commit hash: [5f393b2] ----------------------------------------+
Building GCC for commit [5f393b2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5f393b2 sparc.c (sparc_gimplify_va_arg): New fn.
HEAD is now at 5f393b2 sparc.c (sparc_gimplify_va_arg): New fn.
Note: checking out '5f393b2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5f393b2... sparc.c (sparc_gimplify_va_arg): New fn.
Deleted branch temp-test-branch (was 5f393b2).
Fail to build gcc for commit [5f393b2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e0c003921ff62fde521a14436bbeac899181a7b3] i386.c (pentium4_cost): Increase "lea" cost from 1 to 3.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e0c0039]
+---------------------------------------- Current commit hash: [e0c0039] ----------------------------------------+
Building GCC for commit [e0c0039]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e0c0039 i386.c (pentium4_cost): Increase "lea" cost from 1 to 3.
HEAD is now at e0c0039 i386.c (pentium4_cost): Increase "lea" cost from 1 to 3.
Note: checking out 'e0c0039'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e0c0039... i386.c (pentium4_cost): Increase "lea" cost from 1 to 3.
Deleted branch temp-test-branch (was e0c0039).
Fail to build gcc for commit [e0c0039], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59] re PR c++/15875 (rejects pointer to member in template)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a57f1b]
+---------------------------------------- Current commit hash: [5a57f1b] ----------------------------------------+
Building GCC for commit [5a57f1b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a57f1b re PR c++/15875 (rejects pointer to member in template)
HEAD is now at 5a57f1b re PR c++/15875 (rejects pointer to member in template)
Note: checking out '5a57f1b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a57f1b... re PR c++/15875 (rejects pointer to member in template)
Deleted branch temp-test-branch (was 5a57f1b).
Fail to build gcc for commit [5a57f1b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bb9db7b136b991ba72b2276ea08c677217372418] re PR libfortran/16080 (segmentation fault when reading empty string)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bb9db7b]
+---------------------------------------- Current commit hash: [bb9db7b] ----------------------------------------+
Building GCC for commit [bb9db7b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bb9db7b re PR libfortran/16080 (segmentation fault when reading empty string)
HEAD is now at bb9db7b re PR libfortran/16080 (segmentation fault when reading empty string)
Note: checking out 'bb9db7b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bb9db7b... re PR libfortran/16080 (segmentation fault when reading empty string)
Deleted branch temp-test-branch (was bb9db7b).
Fail to build gcc for commit [bb9db7b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[26f4ba86cf6d6bdd54996f4033f2b20d7a11130d] JCheckBoxMenuItem.java: Removed CVS tags.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [26f4ba8]
+---------------------------------------- Current commit hash: [26f4ba8] ----------------------------------------+
Building GCC for commit [26f4ba8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 26f4ba8 JCheckBoxMenuItem.java: Removed CVS tags.
HEAD is now at 26f4ba8 JCheckBoxMenuItem.java: Removed CVS tags.
Note: checking out '26f4ba8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 26f4ba8... JCheckBoxMenuItem.java: Removed CVS tags.
Deleted branch temp-test-branch (was 26f4ba8).
Fail to build gcc for commit [26f4ba8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[caf2523d6d984c1c46b1c5056b835448f4fc02a9] re PR c++/16034 (dtor called prematurely for while-loop scoped variable)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [caf2523]
+---------------------------------------- Current commit hash: [caf2523] ----------------------------------------+
Building GCC for commit [caf2523]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: caf2523 re PR c++/16034 (dtor called prematurely for while-loop scoped variable)
HEAD is now at caf2523 re PR c++/16034 (dtor called prematurely for while-loop scoped variable)
Note: checking out 'caf2523'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at caf2523... re PR c++/16034 (dtor called prematurely for while-loop scoped variable)
Deleted branch temp-test-branch (was caf2523).
Fail to build gcc for commit [caf2523], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e18be1d424de3c50616989e01a10b2632eb595a3] * MAINTAINERS (Write After Approval): Add myself.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e18be1d]
+---------------------------------------- Current commit hash: [e18be1d] ----------------------------------------+
Building GCC for commit [e18be1d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e18be1d * MAINTAINERS (Write After Approval): Add myself.
HEAD is now at e18be1d * MAINTAINERS (Write After Approval): Add myself.
Note: checking out 'e18be1d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e18be1d... * MAINTAINERS (Write After Approval): Add myself.
Deleted branch temp-test-branch (was e18be1d).
Fail to build gcc for commit [e18be1d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9e26de105c37842574f337d7b96565850a61d800] Add myself to MAINTAINERS (write after approval)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9e26de1]
+---------------------------------------- Current commit hash: [9e26de1] ----------------------------------------+
Building GCC for commit [9e26de1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9e26de1 Add myself to MAINTAINERS (write after approval)
HEAD is now at 9e26de1 Add myself to MAINTAINERS (write after approval)
Note: checking out '9e26de1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9e26de1... Add myself to MAINTAINERS (write after approval)
Deleted branch temp-test-branch (was 9e26de1).
Fail to build gcc for commit [9e26de1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d6f3f2616f18370f0c5b0fd186f9e06f191c778e] gcc_release (maybe_build_tarfile): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d6f3f26]
+---------------------------------------- Current commit hash: [d6f3f26] ----------------------------------------+
Building GCC for commit [d6f3f26]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d6f3f26 gcc_release (maybe_build_tarfile): New function.
HEAD is now at d6f3f26 gcc_release (maybe_build_tarfile): New function.
Note: checking out 'd6f3f26'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d6f3f26... gcc_release (maybe_build_tarfile): New function.
Deleted branch temp-test-branch (was d6f3f26).
Fail to build gcc for commit [d6f3f26], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2f0c006e5f47dc1ccfe2f89c62711b4f304218aa] class.c (build_clone): Don't call defer_fn, let mark_used do it.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f0c006]
+---------------------------------------- Current commit hash: [2f0c006] ----------------------------------------+
Building GCC for commit [2f0c006]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f0c006 class.c (build_clone): Don't call defer_fn, let mark_used do it.
HEAD is now at 2f0c006 class.c (build_clone): Don't call defer_fn, let mark_used do it.
Note: checking out '2f0c006'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f0c006... class.c (build_clone): Don't call defer_fn, let mark_used do it.
Deleted branch temp-test-branch (was 2f0c006).
Fail to build gcc for commit [2f0c006], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[db1e2f88a4bbf7b5d85bcc1012835a2c5c210f23] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [db1e2f8]
+---------------------------------------- Current commit hash: [db1e2f8] ----------------------------------------+
Building GCC for commit [db1e2f8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: db1e2f8 Daily bump.
HEAD is now at db1e2f8 Daily bump.
Note: checking out 'db1e2f8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at db1e2f8... Daily bump.
Deleted branch temp-test-branch (was db1e2f8).
Fail to build gcc for commit [db1e2f8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cfc984b52833ddc8b8b9c74adc09cebd0cf04e70] * doc/install.texi: Document that dejagnu 1.4.4 is required.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfc984b]
+---------------------------------------- Current commit hash: [cfc984b] ----------------------------------------+
Building GCC for commit [cfc984b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfc984b * doc/install.texi: Document that dejagnu 1.4.4 is required.
HEAD is now at cfc984b * doc/install.texi: Document that dejagnu 1.4.4 is required.
Note: checking out 'cfc984b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfc984b... * doc/install.texi: Document that dejagnu 1.4.4 is required.
Deleted branch temp-test-branch (was cfc984b).
Fail to build gcc for commit [cfc984b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[446f52f40bb4083e0e4e92de0442141a1d3d633d] combine.c (simplify_shift_const): Check shift amount is a CONST_INT.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [446f52f]
+---------------------------------------- Current commit hash: [446f52f] ----------------------------------------+
Building GCC for commit [446f52f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 446f52f combine.c (simplify_shift_const): Check shift amount is a CONST_INT.
HEAD is now at 446f52f combine.c (simplify_shift_const): Check shift amount is a CONST_INT.
Note: checking out '446f52f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 446f52f... combine.c (simplify_shift_const): Check shift amount is a CONST_INT.
Deleted branch temp-test-branch (was 446f52f).
Fail to build gcc for commit [446f52f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8c16199578ee7b0bcc94a807373569055678d042] c-common.def (CASE_LABEL): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8c16199]
+---------------------------------------- Current commit hash: [8c16199] ----------------------------------------+
Building GCC for commit [8c16199]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8c16199 c-common.def (CASE_LABEL): Remove.
HEAD is now at 8c16199 c-common.def (CASE_LABEL): Remove.
Note: checking out '8c16199'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8c16199... c-common.def (CASE_LABEL): Remove.
Deleted branch temp-test-branch (was 8c16199).
Fail to build gcc for commit [8c16199], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4b351c6ee882549651730baaaab38bd803b34770] re PR libstdc++/15074 (g++ -lsupc++ still links against libstdc++)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4b351c6]
+---------------------------------------- Current commit hash: [4b351c6] ----------------------------------------+
Building GCC for commit [4b351c6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4b351c6 re PR libstdc++/15074 (g++ -lsupc++ still links against libstdc++)
HEAD is now at 4b351c6 re PR libstdc++/15074 (g++ -lsupc++ still links against libstdc++)
Note: checking out '4b351c6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4b351c6... re PR libstdc++/15074 (g++ -lsupc++ still links against libstdc++)
Deleted branch temp-test-branch (was 4b351c6).
Fail to build gcc for commit [4b351c6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fd660b1bee7af09cd69d1125cf35e6aa5826234c] fold-const.c (swap_tree_comparison): No longer static.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fd660b1]
+---------------------------------------- Current commit hash: [fd660b1] ----------------------------------------+
Building GCC for commit [fd660b1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fd660b1 fold-const.c (swap_tree_comparison): No longer static.
HEAD is now at fd660b1 fold-const.c (swap_tree_comparison): No longer static.
Note: checking out 'fd660b1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fd660b1... fold-const.c (swap_tree_comparison): No longer static.
Deleted branch temp-test-branch (was fd660b1).
Fail to build gcc for commit [fd660b1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4f430fb914a00768b8406f9b6fdb15ae4a93a8b8] re PR c++/16129 (g++.old-deja/g++.eh/catch[35679]*.C)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4f430fb]
+---------------------------------------- Current commit hash: [4f430fb] ----------------------------------------+
Building GCC for commit [4f430fb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4f430fb re PR c++/16129 (g++.old-deja/g++.eh/catch[35679]*.C)
HEAD is now at 4f430fb re PR c++/16129 (g++.old-deja/g++.eh/catch[35679]*.C)
Note: checking out '4f430fb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4f430fb... re PR c++/16129 (g++.old-deja/g++.eh/catch[35679]*.C)
Deleted branch temp-test-branch (was 4f430fb).
Fail to build gcc for commit [4f430fb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0566b51e1fc647d43e1a2dedc8a2d80acd70e1d5] tree-flow-inline.h: Document all functions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0566b51]
+---------------------------------------- Current commit hash: [0566b51] ----------------------------------------+
Building GCC for commit [0566b51]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0566b51 tree-flow-inline.h: Document all functions.
HEAD is now at 0566b51 tree-flow-inline.h: Document all functions.
Note: checking out '0566b51'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0566b51... tree-flow-inline.h: Document all functions.
Deleted branch temp-test-branch (was 0566b51).
Fail to build gcc for commit [0566b51], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[eadf906f463167f90f23bed5d3bb56026a4bfc33] tree-gimple.c: Rename from tree-simple.c.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eadf906]
+---------------------------------------- Current commit hash: [eadf906] ----------------------------------------+
Building GCC for commit [eadf906]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eadf906 tree-gimple.c: Rename from tree-simple.c.
HEAD is now at eadf906 tree-gimple.c: Rename from tree-simple.c.
Note: checking out 'eadf906'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eadf906... tree-gimple.c: Rename from tree-simple.c.
Deleted branch temp-test-branch (was eadf906).
Fail to build gcc for commit [eadf906], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3dd8069d498c0cef2040ea3ce54b793280dfb1a6] fold-const.c (operand_equal_p): Update comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3dd8069]
+---------------------------------------- Current commit hash: [3dd8069] ----------------------------------------+
Building GCC for commit [3dd8069]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3dd8069 fold-const.c (operand_equal_p): Update comment.
HEAD is now at 3dd8069 fold-const.c (operand_equal_p): Update comment.
Note: checking out '3dd8069'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3dd8069... fold-const.c (operand_equal_p): Update comment.
Deleted branch temp-test-branch (was 3dd8069).
Fail to build gcc for commit [3dd8069], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7b08cf9291a33b05d61b19ffc77179cf2e9ba184] noncontinuation_1.f90: Rename this ...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7b08cf9]
+---------------------------------------- Current commit hash: [7b08cf9] ----------------------------------------+
Building GCC for commit [7b08cf9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7b08cf9 noncontinuation_1.f90: Rename this ...
HEAD is now at 7b08cf9 noncontinuation_1.f90: Rename this ...
Note: checking out '7b08cf9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7b08cf9... noncontinuation_1.f90: Rename this ...
Deleted branch temp-test-branch (was 7b08cf9).
Fail to build gcc for commit [7b08cf9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f26c1794c360f21e23a1bbb878b2a34b0229fac3] s390.h (TARGET_SWITCHES): Change -mtpf (-mno-tpf) to -mtpf-trace (-mno-tpf-trace).
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f26c179]
+---------------------------------------- Current commit hash: [f26c179] ----------------------------------------+
Building GCC for commit [f26c179]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f26c179 s390.h (TARGET_SWITCHES): Change -mtpf (-mno-tpf) to -mtpf-trace (-mno-tpf-trace).
HEAD is now at f26c179 s390.h (TARGET_SWITCHES): Change -mtpf (-mno-tpf) to -mtpf-trace (-mno-tpf-trace).
Note: checking out 'f26c179'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f26c179... s390.h (TARGET_SWITCHES): Change -mtpf (-mno-tpf) to -mtpf-trace (-mno-tpf-trace).
Deleted branch temp-test-branch (was f26c179).
Fail to build gcc for commit [f26c179], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[79066482014cb25e9743b44622fb304b6633b24b] re PR middle-end/15239 (suboptimal mult-by-const expansion cost limit)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7906648]
+---------------------------------------- Current commit hash: [7906648] ----------------------------------------+
Building GCC for commit [7906648]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7906648 re PR middle-end/15239 (suboptimal mult-by-const expansion cost limit)
HEAD is now at 7906648 re PR middle-end/15239 (suboptimal mult-by-const expansion cost limit)
Note: checking out '7906648'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7906648... re PR middle-end/15239 (suboptimal mult-by-const expansion cost limit)
Deleted branch temp-test-branch (was 7906648).
Fail to build gcc for commit [7906648], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bc20e36d1659487e7975ddd1fb18e53867149e8f] re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bc20e36]
+---------------------------------------- Current commit hash: [bc20e36] ----------------------------------------+
Building GCC for commit [bc20e36]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bc20e36 re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
HEAD is now at bc20e36 re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
Note: checking out 'bc20e36'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bc20e36... re PR libfortran/15292 (libgfortran depends on c99 functionality round and roundf)
Deleted branch temp-test-branch (was bc20e36).
Fail to build gcc for commit [bc20e36], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e2bb53e59a21c042db3e0b605752e683d62618cc] builtins.c (simplify_builtin_strcpy): Avoid use of chainon...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e2bb53e]
+---------------------------------------- Current commit hash: [e2bb53e] ----------------------------------------+
Building GCC for commit [e2bb53e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e2bb53e builtins.c (simplify_builtin_strcpy): Avoid use of chainon...
HEAD is now at e2bb53e builtins.c (simplify_builtin_strcpy): Avoid use of chainon...
Note: checking out 'e2bb53e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e2bb53e... builtins.c (simplify_builtin_strcpy): Avoid use of chainon...
Deleted branch temp-test-branch (was e2bb53e).
Fail to build gcc for commit [e2bb53e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cc335f4371177761ce88a58a7d5e710f202635fb] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cc335f4]
+---------------------------------------- Current commit hash: [cc335f4] ----------------------------------------+
Building GCC for commit [cc335f4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cc335f4 [multiple changes]
HEAD is now at cc335f4 [multiple changes]
Note: checking out 'cc335f4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cc335f4... [multiple changes]
Deleted branch temp-test-branch (was cc335f4).
Fail to build gcc for commit [cc335f4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[08f7c2eb78c512fc41d363db476d9912a082ec5e] mt_allocator.h (__mt_alloc<>::deallocate): Consistently update __bin._M_free[0].
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [08f7c2e]
+---------------------------------------- Current commit hash: [08f7c2e] ----------------------------------------+
Building GCC for commit [08f7c2e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 08f7c2e mt_allocator.h (__mt_alloc<>::deallocate): Consistently update __bin._M_free[0].
HEAD is now at 08f7c2e mt_allocator.h (__mt_alloc<>::deallocate): Consistently update __bin._M_free[0].
Note: checking out '08f7c2e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 08f7c2e... mt_allocator.h (__mt_alloc<>::deallocate): Consistently update __bin._M_free[0].
Deleted branch temp-test-branch (was 08f7c2e).
Fail to build gcc for commit [08f7c2e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bd85b0cba676ce5dc076eec5146fd33575db40ec] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bd85b0c]
+---------------------------------------- Current commit hash: [bd85b0c] ----------------------------------------+
Building GCC for commit [bd85b0c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bd85b0c Daily bump.
HEAD is now at bd85b0c Daily bump.
Note: checking out 'bd85b0c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bd85b0c... Daily bump.
Deleted branch temp-test-branch (was bd85b0c).
Fail to build gcc for commit [bd85b0c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a52a0a7feaf1813fac7d38a61341e0894f89fba6] Makefile.tpl (configure-build-[+module+], [...]): Pass [+extra_configure_args+].
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a52a0a7]
+---------------------------------------- Current commit hash: [a52a0a7] ----------------------------------------+
Building GCC for commit [a52a0a7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a52a0a7 Makefile.tpl (configure-build-[+module+], [...]): Pass [+extra_configure_args+].
HEAD is now at a52a0a7 Makefile.tpl (configure-build-[+module+], [...]): Pass [+extra_configure_args+].
Note: checking out 'a52a0a7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a52a0a7... Makefile.tpl (configure-build-[+module+], [...]): Pass [+extra_configure_args+].
Deleted branch temp-test-branch (was a52a0a7).
Fail to build gcc for commit [a52a0a7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[965703ed8e1a320e190baee91f8ce6a3c07d98ea] expmed.c (shift_cost, [...]): Additionally index by machine mode.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [965703e]
+---------------------------------------- Current commit hash: [965703e] ----------------------------------------+
Building GCC for commit [965703e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 965703e expmed.c (shift_cost, [...]): Additionally index by machine mode.
HEAD is now at 965703e expmed.c (shift_cost, [...]): Additionally index by machine mode.
Note: checking out '965703e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 965703e... expmed.c (shift_cost, [...]): Additionally index by machine mode.
Deleted branch temp-test-branch (was 965703e).
Fail to build gcc for commit [965703e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[514df03fdac570190b6c9f241d472e454d62d88e] fix
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [514df03]
+---------------------------------------- Current commit hash: [514df03] ----------------------------------------+
Building GCC for commit [514df03]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 514df03 fix
HEAD is now at 514df03 fix
Note: checking out '514df03'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 514df03... fix
Deleted branch temp-test-branch (was 514df03).
Fail to build gcc for commit [514df03], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[96b8a6154eee8298916907259e1543677c8910a5] re PR libfortran/11800 ([gfortan] libgfortran should be multi-libed)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [96b8a61]
+---------------------------------------- Current commit hash: [96b8a61] ----------------------------------------+
Building GCC for commit [96b8a61]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 96b8a61 re PR libfortran/11800 ([gfortan] libgfortran should be multi-libed)
HEAD is now at 96b8a61 re PR libfortran/11800 ([gfortan] libgfortran should be multi-libed)
Note: checking out '96b8a61'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 96b8a61... re PR libfortran/11800 ([gfortan] libgfortran should be multi-libed)
Deleted branch temp-test-branch (was 96b8a61).
Fail to build gcc for commit [96b8a61], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[39bc18760f4b039c6fc89f98a132183b8371a751] invoke.texi (Machine Dependent Options): Alphabetize.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [39bc187]
+---------------------------------------- Current commit hash: [39bc187] ----------------------------------------+
Building GCC for commit [39bc187]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 39bc187 invoke.texi (Machine Dependent Options): Alphabetize.
HEAD is now at 39bc187 invoke.texi (Machine Dependent Options): Alphabetize.
Note: checking out '39bc187'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 39bc187... invoke.texi (Machine Dependent Options): Alphabetize.
Deleted branch temp-test-branch (was 39bc187).
Fail to build gcc for commit [39bc187], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4a787fa8bfc011e9cd2f8d2b4eb6aeadcf77beb2] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4a787fa]
+---------------------------------------- Current commit hash: [4a787fa] ----------------------------------------+
Building GCC for commit [4a787fa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4a787fa [multiple changes]
HEAD is now at 4a787fa [multiple changes]
Note: checking out '4a787fa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4a787fa... [multiple changes]
Deleted branch temp-test-branch (was 4a787fa).
Fail to build gcc for commit [4a787fa], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[20cb64fd5cc597d456961e2d223c386c5950416c] typeck.c: Remove non-printable character 160.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [20cb64f]
+---------------------------------------- Current commit hash: [20cb64f] ----------------------------------------+
Building GCC for commit [20cb64f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 20cb64f typeck.c: Remove non-printable character 160.
HEAD is now at 20cb64f typeck.c: Remove non-printable character 160.
Note: checking out '20cb64f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 20cb64f... typeck.c: Remove non-printable character 160.
Deleted branch temp-test-branch (was 20cb64f).
Fail to build gcc for commit [20cb64f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f7dbd56c9a1e2605f54a05c2f613cf086f32634b] InflaterInputStream.java: Merged more with Classpath version.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f7dbd56]
+---------------------------------------- Current commit hash: [f7dbd56] ----------------------------------------+
Building GCC for commit [f7dbd56]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f7dbd56 InflaterInputStream.java: Merged more with Classpath version.
HEAD is now at f7dbd56 InflaterInputStream.java: Merged more with Classpath version.
Note: checking out 'f7dbd56'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f7dbd56... InflaterInputStream.java: Merged more with Classpath version.
Deleted branch temp-test-branch (was f7dbd56).
Fail to build gcc for commit [f7dbd56], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[54d581a26ea5cc6ec540be1f108d18db0bbd365a] fold-const.c (operand_equal_p): Pass flags in recursive calls for binary and relational operations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [54d581a]
+---------------------------------------- Current commit hash: [54d581a] ----------------------------------------+
Building GCC for commit [54d581a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 54d581a fold-const.c (operand_equal_p): Pass flags in recursive calls for binary and relational operations.
HEAD is now at 54d581a fold-const.c (operand_equal_p): Pass flags in recursive calls for binary and relational operations.
Note: checking out '54d581a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 54d581a... fold-const.c (operand_equal_p): Pass flags in recursive calls for binary and relational operations.
Deleted branch temp-test-branch (was 54d581a).
Fail to build gcc for commit [54d581a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0b068ee90da7cbccbc7fd3ef66d58b9bcbcedabd] stmt.c (expand_decl): Be more selective about calling mark_reg_pointer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b068ee]
+---------------------------------------- Current commit hash: [0b068ee] ----------------------------------------+
Building GCC for commit [0b068ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b068ee stmt.c (expand_decl): Be more selective about calling mark_reg_pointer.
HEAD is now at 0b068ee stmt.c (expand_decl): Be more selective about calling mark_reg_pointer.
Note: checking out '0b068ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b068ee... stmt.c (expand_decl): Be more selective about calling mark_reg_pointer.
Deleted branch temp-test-branch (was 0b068ee).
Fail to build gcc for commit [0b068ee], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c0e3aa48e50d3beab2abbbdc7098c7959d81b94c] decl.c (elaborate_expression, [...]): Arguments now bool instead of int.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c0e3aa4]
+---------------------------------------- Current commit hash: [c0e3aa4] ----------------------------------------+
Building GCC for commit [c0e3aa4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c0e3aa4 decl.c (elaborate_expression, [...]): Arguments now bool instead of int.
HEAD is now at c0e3aa4 decl.c (elaborate_expression, [...]): Arguments now bool instead of int.
Note: checking out 'c0e3aa4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c0e3aa4... decl.c (elaborate_expression, [...]): Arguments now bool instead of int.
Deleted branch temp-test-branch (was c0e3aa4).
Fail to build gcc for commit [c0e3aa4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3ff2f9d1d1316c01f2880e6408116cdc5e928ae0] revert accidental checkin
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3ff2f9d]
+---------------------------------------- Current commit hash: [3ff2f9d] ----------------------------------------+
Building GCC for commit [3ff2f9d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3ff2f9d revert accidental checkin
HEAD is now at 3ff2f9d revert accidental checkin
Note: checking out '3ff2f9d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3ff2f9d... revert accidental checkin
Deleted branch temp-test-branch (was 3ff2f9d).
Fail to build gcc for commit [3ff2f9d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c5042c5c8b8c932c61262226df9fc988d3dd7662] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c5042c5]
+---------------------------------------- Current commit hash: [c5042c5] ----------------------------------------+
Building GCC for commit [c5042c5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c5042c5 Daily bump.
HEAD is now at c5042c5 Daily bump.
Note: checking out 'c5042c5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c5042c5... Daily bump.
Deleted branch temp-test-branch (was c5042c5).
Fail to build gcc for commit [c5042c5], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[03a4c969079e508d695f0b8b82bd573b54e01a3c] Add function name to the changelog.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [03a4c96]
+---------------------------------------- Current commit hash: [03a4c96] ----------------------------------------+
Building GCC for commit [03a4c96]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 03a4c96 Add function name to the changelog.
HEAD is now at 03a4c96 Add function name to the changelog.
Note: checking out '03a4c96'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 03a4c96... Add function name to the changelog.
Deleted branch temp-test-branch (was 03a4c96).
Fail to build gcc for commit [03a4c96], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1854117e11b923066d0ecbc800c9db6ec064c9d7] dump-parse-tree.c (gfc_show_equiv): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1854117]
+---------------------------------------- Current commit hash: [1854117] ----------------------------------------+
Building GCC for commit [1854117]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1854117 dump-parse-tree.c (gfc_show_equiv): New function.
HEAD is now at 1854117 dump-parse-tree.c (gfc_show_equiv): New function.
Note: checking out '1854117'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1854117... dump-parse-tree.c (gfc_show_equiv): New function.
Deleted branch temp-test-branch (was 1854117).
Fail to build gcc for commit [1854117], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[53ef271f84dcf405c5e58ea7b1ef2211f073d3c1] 2004-06-03  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [53ef271]
+---------------------------------------- Current commit hash: [53ef271] ----------------------------------------+
Building GCC for commit [53ef271]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 53ef271 2004-06-03  Michael Koch  <konqueror@gmx.de>
HEAD is now at 53ef271 2004-06-03  Michael Koch  <konqueror@gmx.de>
Note: checking out '53ef271'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 53ef271... 2004-06-03  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 53ef271).
Fail to build gcc for commit [53ef271], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[95d3f56711188e06e8ad5e3e8010cb6a09cb5ed3] * check.c (gfc_check_random_seed): Issue for too many arguments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [95d3f56]
+---------------------------------------- Current commit hash: [95d3f56] ----------------------------------------+
Building GCC for commit [95d3f56]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 95d3f56 * check.c (gfc_check_random_seed): Issue for too many arguments.
HEAD is now at 95d3f56 * check.c (gfc_check_random_seed): Issue for too many arguments.
Note: checking out '95d3f56'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 95d3f56... * check.c (gfc_check_random_seed): Issue for too many arguments.
Deleted branch temp-test-branch (was 95d3f56).
Fail to build gcc for commit [95d3f56], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6f0032a3f70f373ea8e81627560d94d36ff4daef] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6f0032a]
+---------------------------------------- Current commit hash: [6f0032a] ----------------------------------------+
Building GCC for commit [6f0032a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6f0032a Daily bump.
HEAD is now at 6f0032a Daily bump.
Note: checking out '6f0032a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6f0032a... Daily bump.
Deleted branch temp-test-branch (was 6f0032a).
Fail to build gcc for commit [6f0032a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8d4a2ff6c65aeb24104ad5daee443fa89a5d6652] fold-const.c (non_lvalue): Explicitly list the tree codes that need to be wrapped by NON_LVALUE_EXPR...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8d4a2ff]
+---------------------------------------- Current commit hash: [8d4a2ff] ----------------------------------------+
Building GCC for commit [8d4a2ff]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8d4a2ff fold-const.c (non_lvalue): Explicitly list the tree codes that need to be wrapped by NON_LVALUE_EXPR...
HEAD is now at 8d4a2ff fold-const.c (non_lvalue): Explicitly list the tree codes that need to be wrapped by NON_LVALUE_EXPR...
Note: checking out '8d4a2ff'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8d4a2ff... fold-const.c (non_lvalue): Explicitly list the tree codes that need to be wrapped by NON_LVALUE_EXPR...
Deleted branch temp-test-branch (was 8d4a2ff).
Fail to build gcc for commit [8d4a2ff], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[898c05b8bd9d73fdb3dd1e9e4e4044b0ac74a789] re PR libfortran/14897 ('T' edit descriptor output incorrect)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [898c05b]
+---------------------------------------- Current commit hash: [898c05b] ----------------------------------------+
Building GCC for commit [898c05b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 898c05b re PR libfortran/14897 ('T' edit descriptor output incorrect)
HEAD is now at 898c05b re PR libfortran/14897 ('T' edit descriptor output incorrect)
Note: checking out '898c05b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 898c05b... re PR libfortran/14897 ('T' edit descriptor output incorrect)
Deleted branch temp-test-branch (was 898c05b).
Fail to build gcc for commit [898c05b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5882f0f31a400e94182c921c39fb4ddd9781517e] c-common.def (COMPOUND_STMT): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5882f0f]
+---------------------------------------- Current commit hash: [5882f0f] ----------------------------------------+
Building GCC for commit [5882f0f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5882f0f c-common.def (COMPOUND_STMT): Remove.
HEAD is now at 5882f0f c-common.def (COMPOUND_STMT): Remove.
Note: checking out '5882f0f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5882f0f... c-common.def (COMPOUND_STMT): Remove.
Deleted branch temp-test-branch (was 5882f0f).
Fail to build gcc for commit [5882f0f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6573a10434b3aa2784f052d6ffc3905d8490464e] re PR java/15734 (internal compiler error: Segmentation fault)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6573a10]
+---------------------------------------- Current commit hash: [6573a10] ----------------------------------------+
Building GCC for commit [6573a10]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6573a10 re PR java/15734 (internal compiler error: Segmentation fault)
HEAD is now at 6573a10 re PR java/15734 (internal compiler error: Segmentation fault)
Note: checking out '6573a10'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6573a10... re PR java/15734 (internal compiler error: Segmentation fault)
Deleted branch temp-test-branch (was 6573a10).
Fail to build gcc for commit [6573a10], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9e14e18fd124e651f079728315e40a16288863b6] c-common.def (GOTO_STMT, LABEL_STMT): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9e14e18]
+---------------------------------------- Current commit hash: [9e14e18] ----------------------------------------+
Building GCC for commit [9e14e18]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9e14e18 c-common.def (GOTO_STMT, LABEL_STMT): Remove.
HEAD is now at 9e14e18 c-common.def (GOTO_STMT, LABEL_STMT): Remove.
Note: checking out '9e14e18'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9e14e18... c-common.def (GOTO_STMT, LABEL_STMT): Remove.
Deleted branch temp-test-branch (was 9e14e18).
Fail to build gcc for commit [9e14e18], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d5d85eaf4e5a67a66d8ce797be8f1b973326c1dc] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d5d85ea]
+---------------------------------------- Current commit hash: [d5d85ea] ----------------------------------------+
Building GCC for commit [d5d85ea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d5d85ea Daily bump.
HEAD is now at d5d85ea Daily bump.
Note: checking out 'd5d85ea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d5d85ea... Daily bump.
Deleted branch temp-test-branch (was d5d85ea).
Fail to build gcc for commit [d5d85ea], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2f8e398bf476a5b0682e6fdc0f8b64df1cf0347b] coverage.c: Remove argument to rest_of_compilation.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f8e398]
+---------------------------------------- Current commit hash: [2f8e398] ----------------------------------------+
Building GCC for commit [2f8e398]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f8e398 coverage.c: Remove argument to rest_of_compilation.
HEAD is now at 2f8e398 coverage.c: Remove argument to rest_of_compilation.
Note: checking out '2f8e398'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f8e398... coverage.c: Remove argument to rest_of_compilation.
Deleted branch temp-test-branch (was 2f8e398).
Fail to build gcc for commit [2f8e398], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[795af1d7351cecbb1304603e5afd7ce018aa93fa] re PR libstdc++/16182 (wctype.h not included by c++locale_internal.h)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [795af1d]
+---------------------------------------- Current commit hash: [795af1d] ----------------------------------------+
Building GCC for commit [795af1d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 795af1d re PR libstdc++/16182 (wctype.h not included by c++locale_internal.h)
HEAD is now at 795af1d re PR libstdc++/16182 (wctype.h not included by c++locale_internal.h)
Note: checking out '795af1d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 795af1d... re PR libstdc++/16182 (wctype.h not included by c++locale_internal.h)
Deleted branch temp-test-branch (was 795af1d).
Fail to build gcc for commit [795af1d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[08fb03fdf38f9055a55007ab4782561ba48f1b04] re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [08fb03f]
+---------------------------------------- Current commit hash: [08fb03f] ----------------------------------------+
Building GCC for commit [08fb03f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 08fb03f re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
HEAD is now at 08fb03f re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
Note: checking out '08fb03f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 08fb03f... re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
Deleted branch temp-test-branch (was 08fb03f).
Fail to build gcc for commit [08fb03f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c19d6c9f9f39c010d76effe3bbbe863ec31ee667] formatter.h (__gnu_debug::_Error_formatter): Remove copy constructor and assignment operator.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c19d6c9]
+---------------------------------------- Current commit hash: [c19d6c9] ----------------------------------------+
Building GCC for commit [c19d6c9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c19d6c9 formatter.h (__gnu_debug::_Error_formatter): Remove copy constructor and assignment operator.
HEAD is now at c19d6c9 formatter.h (__gnu_debug::_Error_formatter): Remove copy constructor and assignment operator.
Note: checking out 'c19d6c9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c19d6c9... formatter.h (__gnu_debug::_Error_formatter): Remove copy constructor and assignment operator.
Deleted branch temp-test-branch (was c19d6c9).
Fail to build gcc for commit [c19d6c9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cf11c05cfd66a3dedc23dd4874e05380f118760d] install.texi (Prerequisites): Update libbanshee, fastjar, libcpp, libjava/libltdl entries to automake 1.8.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cf11c05]
+---------------------------------------- Current commit hash: [cf11c05] ----------------------------------------+
Building GCC for commit [cf11c05]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cf11c05 install.texi (Prerequisites): Update libbanshee, fastjar, libcpp, libjava/libltdl entries to automake 1.8.5.
HEAD is now at cf11c05 install.texi (Prerequisites): Update libbanshee, fastjar, libcpp, libjava/libltdl entries to automake 1.8.5.
Note: checking out 'cf11c05'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cf11c05... install.texi (Prerequisites): Update libbanshee, fastjar, libcpp, libjava/libltdl entries to automake 1.8.5.
Deleted branch temp-test-branch (was cf11c05).
Fail to build gcc for commit [cf11c05], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[933d6b39d644385b20be11ed1802f13669bccc9e] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [933d6b3]
+---------------------------------------- Current commit hash: [933d6b3] ----------------------------------------+
Building GCC for commit [933d6b3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 933d6b3 Daily bump.
HEAD is now at 933d6b3 Daily bump.
Note: checking out '933d6b3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 933d6b3... Daily bump.
Deleted branch temp-test-branch (was 933d6b3).
Fail to build gcc for commit [933d6b3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[711e31876fc9c16f921891603abd8fd4c2f26857] check-init.c (check_init): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [711e318]
+---------------------------------------- Current commit hash: [711e318] ----------------------------------------+
Building GCC for commit [711e318]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 711e318 check-init.c (check_init): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
HEAD is now at 711e318 check-init.c (check_init): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
Note: checking out '711e318'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 711e318... check-init.c (check_init): Handle binops UNLT_EXPR, UNLE_EXPR, UNGT_EXPR, UNGE_EXPR, UNEQ_EXPR, and LTGT_EXPR.
Deleted branch temp-test-branch (was 711e318).
Fail to build gcc for commit [711e318], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[11c01dcc46761825183da2f641d81aec89e38393] rs6000.c (rs6000_va_arg <ABI_V4>): Don't use UNITS_PER_WORD to calculate gpr size.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [11c01dc]
+---------------------------------------- Current commit hash: [11c01dc] ----------------------------------------+
Building GCC for commit [11c01dc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 11c01dc rs6000.c (rs6000_va_arg <ABI_V4>): Don't use UNITS_PER_WORD to calculate gpr size.
HEAD is now at 11c01dc rs6000.c (rs6000_va_arg <ABI_V4>): Don't use UNITS_PER_WORD to calculate gpr size.
Note: checking out '11c01dc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 11c01dc... rs6000.c (rs6000_va_arg <ABI_V4>): Don't use UNITS_PER_WORD to calculate gpr size.
Deleted branch temp-test-branch (was 11c01dc).
Fail to build gcc for commit [11c01dc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[84b1d821501a5acd4298b3561e951333df771cd8] Calendar.java: Change ResourceBundle.getBundle() calls to pass ClassLoader argument.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [84b1d82]
+---------------------------------------- Current commit hash: [84b1d82] ----------------------------------------+
Building GCC for commit [84b1d82]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 84b1d82 Calendar.java: Change ResourceBundle.getBundle() calls to pass ClassLoader argument.
HEAD is now at 84b1d82 Calendar.java: Change ResourceBundle.getBundle() calls to pass ClassLoader argument.
Note: checking out '84b1d82'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 84b1d82... Calendar.java: Change ResourceBundle.getBundle() calls to pass ClassLoader argument.
Deleted branch temp-test-branch (was 84b1d82).
Fail to build gcc for commit [84b1d82], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c8e20bd09307de2a787351a88c93458b32d45363] re PR fortran/13742 (Not Implemented: initial values for COMMON or EQUIVALENCE)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c8e20bd]
+---------------------------------------- Current commit hash: [c8e20bd] ----------------------------------------+
Building GCC for commit [c8e20bd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c8e20bd re PR fortran/13742 (Not Implemented: initial values for COMMON or EQUIVALENCE)
HEAD is now at c8e20bd re PR fortran/13742 (Not Implemented: initial values for COMMON or EQUIVALENCE)
Note: checking out 'c8e20bd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c8e20bd... re PR fortran/13742 (Not Implemented: initial values for COMMON or EQUIVALENCE)
Deleted branch temp-test-branch (was c8e20bd).
Fail to build gcc for commit [c8e20bd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[27e1a8d2eebf19730394a178567c775dd39ac248] c-semantics.c (emit_local_var): Remove code for DECL_INITIAL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [27e1a8d]
+---------------------------------------- Current commit hash: [27e1a8d] ----------------------------------------+
Building GCC for commit [27e1a8d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 27e1a8d c-semantics.c (emit_local_var): Remove code for DECL_INITIAL.
HEAD is now at 27e1a8d c-semantics.c (emit_local_var): Remove code for DECL_INITIAL.
Note: checking out '27e1a8d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 27e1a8d... c-semantics.c (emit_local_var): Remove code for DECL_INITIAL.
Deleted branch temp-test-branch (was 27e1a8d).
Fail to build gcc for commit [27e1a8d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[28963c8f26b1ad75f6bfba4653708f4e0ec22d79] * io/format.c (format_lex): Make c an int.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [28963c8]
+---------------------------------------- Current commit hash: [28963c8] ----------------------------------------+
Building GCC for commit [28963c8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 28963c8 * io/format.c (format_lex): Make c an int.
HEAD is now at 28963c8 * io/format.c (format_lex): Make c an int.
Note: checking out '28963c8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 28963c8... * io/format.c (format_lex): Make c an int.
Deleted branch temp-test-branch (was 28963c8).
Fail to build gcc for commit [28963c8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[be00f578ec251393182c202bd130350c30f9b088] gimplify.c (gimplify_expr): Don't build a statement list if no gimplification was necessary.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [be00f57]
+---------------------------------------- Current commit hash: [be00f57] ----------------------------------------+
Building GCC for commit [be00f57]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: be00f57 gimplify.c (gimplify_expr): Don't build a statement list if no gimplification was necessary.
HEAD is now at be00f57 gimplify.c (gimplify_expr): Don't build a statement list if no gimplification was necessary.
Note: checking out 'be00f57'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at be00f57... gimplify.c (gimplify_expr): Don't build a statement list if no gimplification was necessary.
Deleted branch temp-test-branch (was be00f57).
Fail to build gcc for commit [be00f57], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[649b2789d1a5e18be4bc10e1c35d81b405cf2b05] cfghooks.c (make_forwarder_block): Decrement count on fallthru edge when redirecting back edges.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [649b278]
+---------------------------------------- Current commit hash: [649b278] ----------------------------------------+
Building GCC for commit [649b278]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 649b278 cfghooks.c (make_forwarder_block): Decrement count on fallthru edge when redirecting back edges.
HEAD is now at 649b278 cfghooks.c (make_forwarder_block): Decrement count on fallthru edge when redirecting back edges.
Note: checking out '649b278'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 649b278... cfghooks.c (make_forwarder_block): Decrement count on fallthru edge when redirecting back edges.
Deleted branch temp-test-branch (was 649b278).
Fail to build gcc for commit [649b278], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fc6b41718d2bc46a4062720b5f8a79a67f171bb3] locale_facets.tcc (time_get<>::do_get_time, [...]): Use only once _M_extract_via_format...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fc6b417]
+---------------------------------------- Current commit hash: [fc6b417] ----------------------------------------+
Building GCC for commit [fc6b417]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fc6b417 locale_facets.tcc (time_get<>::do_get_time, [...]): Use only once _M_extract_via_format...
HEAD is now at fc6b417 locale_facets.tcc (time_get<>::do_get_time, [...]): Use only once _M_extract_via_format...
Note: checking out 'fc6b417'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fc6b417... locale_facets.tcc (time_get<>::do_get_time, [...]): Use only once _M_extract_via_format...
Deleted branch temp-test-branch (was fc6b417).
Fail to build gcc for commit [fc6b417], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[319da9da6b5e02b0465379d5ad77709225addd9a] enc_filebuf.h: Move concept-check macro to class scope.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [319da9d]
+---------------------------------------- Current commit hash: [319da9d] ----------------------------------------+
Building GCC for commit [319da9d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 319da9d enc_filebuf.h: Move concept-check macro to class scope.
HEAD is now at 319da9d enc_filebuf.h: Move concept-check macro to class scope.
Note: checking out '319da9d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 319da9d... enc_filebuf.h: Move concept-check macro to class scope.
Deleted branch temp-test-branch (was 319da9d).
Fail to build gcc for commit [319da9d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[08039bd80bfdee7e30ff80b0eb8873ea60ba2a50] fold-const.c (omit_two_operands): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [08039bd]
+---------------------------------------- Current commit hash: [08039bd] ----------------------------------------+
Building GCC for commit [08039bd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 08039bd fold-const.c (omit_two_operands): New function.
HEAD is now at 08039bd fold-const.c (omit_two_operands): New function.
Note: checking out '08039bd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 08039bd... fold-const.c (omit_two_operands): New function.
Deleted branch temp-test-branch (was 08039bd).
Fail to build gcc for commit [08039bd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[472ca416af9f5457ace9b237eccc08f175a07b29] * trans.c, trans-decl.c: Fix comment typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [472ca41]
+---------------------------------------- Current commit hash: [472ca41] ----------------------------------------+
Building GCC for commit [472ca41]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 472ca41 * trans.c, trans-decl.c: Fix comment typos.
HEAD is now at 472ca41 * trans.c, trans-decl.c: Fix comment typos.
Note: checking out '472ca41'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 472ca41... * trans.c, trans-decl.c: Fix comment typos.
Deleted branch temp-test-branch (was 472ca41).
Fail to build gcc for commit [472ca41], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1aae9cdcf2517fb75451442eb9e93f77db09cd7a] jcf-write.c (generate_bytecode_conditional): Correct handling of unordered conditionals.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1aae9cd]
+---------------------------------------- Current commit hash: [1aae9cd] ----------------------------------------+
Building GCC for commit [1aae9cd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1aae9cd jcf-write.c (generate_bytecode_conditional): Correct handling of unordered conditionals.
HEAD is now at 1aae9cd jcf-write.c (generate_bytecode_conditional): Correct handling of unordered conditionals.
Note: checking out '1aae9cd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1aae9cd... jcf-write.c (generate_bytecode_conditional): Correct handling of unordered conditionals.
Deleted branch temp-test-branch (was 1aae9cd).
Fail to build gcc for commit [1aae9cd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e916e1d0e0f51b2841bcb617bee933caf14049cd] tree-cfg.c (find_case_label_for_value): Replace call to simple_cst_equal with tree_int_cst_equal.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e916e1d]
+---------------------------------------- Current commit hash: [e916e1d] ----------------------------------------+
Building GCC for commit [e916e1d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e916e1d tree-cfg.c (find_case_label_for_value): Replace call to simple_cst_equal with tree_int_cst_equal.
HEAD is now at e916e1d tree-cfg.c (find_case_label_for_value): Replace call to simple_cst_equal with tree_int_cst_equal.
Note: checking out 'e916e1d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e916e1d... tree-cfg.c (find_case_label_for_value): Replace call to simple_cst_equal with tree_int_cst_equal.
Deleted branch temp-test-branch (was e916e1d).
Fail to build gcc for commit [e916e1d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ec3e68358fa934bd54bf6c93af37360b30dfff70] re PR c/15749 (--pedantic-errors behaves differently from --pedantic with C-compiler on Linux)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ec3e683]
+---------------------------------------- Current commit hash: [ec3e683] ----------------------------------------+
Building GCC for commit [ec3e683]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ec3e683 re PR c/15749 (--pedantic-errors behaves differently from --pedantic with C-compiler on Linux)
HEAD is now at ec3e683 re PR c/15749 (--pedantic-errors behaves differently from --pedantic with C-compiler on Linux)
Note: checking out 'ec3e683'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ec3e683... re PR c/15749 (--pedantic-errors behaves differently from --pedantic with C-compiler on Linux)
Deleted branch temp-test-branch (was ec3e683).
Fail to build gcc for commit [ec3e683], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[30719c65a90de4791db42c7c1b7cc3e17604f828] * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): Hash on the pointer to the decl, not 	the DECL_UID.  Fixes 64-bit bootstrap failure.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [30719c6]
+---------------------------------------- Current commit hash: [30719c6] ----------------------------------------+
Building GCC for commit [30719c6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 30719c6 * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): Hash on the pointer to the decl, not 	the DECL_UID.  Fixes 64-bit bootstrap failure.
HEAD is now at 30719c6 * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node)
Note: checking out '30719c6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 30719c6... * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): Hash on the pointer to the decl, not 	the DECL_UID.  Fixes 64-bit bootstrap failure.
Deleted branch temp-test-branch (was 30719c6).
Fail to build gcc for commit [30719c6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1460af9501354afbba460db4c8e731fdc8f5805f] re PR target/15626 (GCC 3.4 emits "ld: warning: relocation error: R_SPARC_UA32")
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1460af9]
+---------------------------------------- Current commit hash: [1460af9] ----------------------------------------+
Building GCC for commit [1460af9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1460af9 re PR target/15626 (GCC 3.4 emits "ld: warning: relocation error: R_SPARC_UA32")
HEAD is now at 1460af9 re PR target/15626 (GCC 3.4 emits "ld: warning: relocation error: R_SPARC_UA32")
Note: checking out '1460af9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1460af9... re PR target/15626 (GCC 3.4 emits "ld: warning: relocation error: R_SPARC_UA32")
Deleted branch temp-test-branch (was 1460af9).
Fail to build gcc for commit [1460af9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[aa33d725018cde8ab90b73e355114343be9072ce] 3.cc: New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aa33d72]
+---------------------------------------- Current commit hash: [aa33d72] ----------------------------------------+
Building GCC for commit [aa33d72]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aa33d72 3.cc: New.
HEAD is now at aa33d72 3.cc: New.
Note: checking out 'aa33d72'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aa33d72... 3.cc: New.
Deleted branch temp-test-branch (was aa33d72).
Fail to build gcc for commit [aa33d72], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[95a3742c4876d496fb2f198b6f94c0b1a33b5ceb] Makefile.in (tree-ssanames.o): Depend on TREE_FLOW_H.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [95a3742]
+---------------------------------------- Current commit hash: [95a3742] ----------------------------------------+
Building GCC for commit [95a3742]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 95a3742 Makefile.in (tree-ssanames.o): Depend on TREE_FLOW_H.
HEAD is now at 95a3742 Makefile.in (tree-ssanames.o): Depend on TREE_FLOW_H.
Note: checking out '95a3742'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 95a3742... Makefile.in (tree-ssanames.o): Depend on TREE_FLOW_H.
Deleted branch temp-test-branch (was 95a3742).
Fail to build gcc for commit [95a3742], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[12fea1f9fcb7129531fa3f30a0688a80e68b5353] fold-const.c (fold_read_from_constant_string): Convert result to requested type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [12fea1f]
+---------------------------------------- Current commit hash: [12fea1f] ----------------------------------------+
Building GCC for commit [12fea1f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 12fea1f fold-const.c (fold_read_from_constant_string): Convert result to requested type.
HEAD is now at 12fea1f fold-const.c (fold_read_from_constant_string): Convert result to requested type.
Note: checking out '12fea1f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 12fea1f... fold-const.c (fold_read_from_constant_string): Convert result to requested type.
Deleted branch temp-test-branch (was 12fea1f).
Fail to build gcc for commit [12fea1f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[89422e4749ab8f907b23fa44f32efc4cde9f5fc7] ssa-sra-1.C: Fix comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [89422e4]
+---------------------------------------- Current commit hash: [89422e4] ----------------------------------------+
Building GCC for commit [89422e4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 89422e4 ssa-sra-1.C: Fix comment.
HEAD is now at 89422e4 ssa-sra-1.C: Fix comment.
Note: checking out '89422e4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 89422e4... ssa-sra-1.C: Fix comment.
Deleted branch temp-test-branch (was 89422e4).
Fail to build gcc for commit [89422e4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2dec00bf998cc3122b00453832533f6b80ce3059] * doc/contrib.texi: Add g77 contributors.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2dec00b]
+---------------------------------------- Current commit hash: [2dec00b] ----------------------------------------+
Building GCC for commit [2dec00b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2dec00b * doc/contrib.texi: Add g77 contributors.
HEAD is now at 2dec00b * doc/contrib.texi: Add g77 contributors.
Note: checking out '2dec00b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2dec00b... * doc/contrib.texi: Add g77 contributors.
Deleted branch temp-test-branch (was 2dec00b).
Fail to build gcc for commit [2dec00b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8041d6ab144891243a56c55dd1702a32aeb3f484] winnt.c (i386_pe_output_labelref): Correct misplaced ')'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8041d6a]
+---------------------------------------- Current commit hash: [8041d6a] ----------------------------------------+
Building GCC for commit [8041d6a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8041d6a winnt.c (i386_pe_output_labelref): Correct misplaced ')'.
HEAD is now at 8041d6a winnt.c (i386_pe_output_labelref): Correct misplaced ')'.
Note: checking out '8041d6a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8041d6a... winnt.c (i386_pe_output_labelref): Correct misplaced ')'.
Deleted branch temp-test-branch (was 8041d6a).
Fail to build gcc for commit [8041d6a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9463204774c527ede4cd4dc4959eb02e1cfeaebe] Fix incorrect year for some ChangeLog entries.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9463204]
+---------------------------------------- Current commit hash: [9463204] ----------------------------------------+
Building GCC for commit [9463204]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9463204 Fix incorrect year for some ChangeLog entries.
HEAD is now at 9463204 Fix incorrect year for some ChangeLog entries.
Note: checking out '9463204'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9463204... Fix incorrect year for some ChangeLog entries.
Deleted branch temp-test-branch (was 9463204).
Fail to build gcc for commit [9463204], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0524c91d1eee6dc2f1629160ed309a5441fb3bdd] re PR c++/15428 (vtables shouldn't always be weak on Darwin)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0524c91]
+---------------------------------------- Current commit hash: [0524c91] ----------------------------------------+
Building GCC for commit [0524c91]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0524c91 re PR c++/15428 (vtables shouldn't always be weak on Darwin)
HEAD is now at 0524c91 re PR c++/15428 (vtables shouldn't always be weak on Darwin)
Note: checking out '0524c91'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0524c91... re PR c++/15428 (vtables shouldn't always be weak on Darwin)
Deleted branch temp-test-branch (was 0524c91).
Fail to build gcc for commit [0524c91], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[15077df5dcd5c9fd996f31cd56ed12a677a2b771] re PR c++/15044 (ICE on syntax error, template header.)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [15077df]
+---------------------------------------- Current commit hash: [15077df] ----------------------------------------+
Building GCC for commit [15077df]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 15077df re PR c++/15044 (ICE on syntax error, template header.)
HEAD is now at 15077df re PR c++/15044 (ICE on syntax error, template header.)
Note: checking out '15077df'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 15077df... re PR c++/15044 (ICE on syntax error, template header.)
Deleted branch temp-test-branch (was 15077df).
Fail to build gcc for commit [15077df], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f698d2175aa01ae5be342ac6ea6d09366b8b36a4] except.c (for_each_eh_region): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f698d21]
+---------------------------------------- Current commit hash: [f698d21] ----------------------------------------+
Building GCC for commit [f698d21]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f698d21 except.c (for_each_eh_region): New function.
HEAD is now at f698d21 except.c (for_each_eh_region): New function.
Note: checking out 'f698d21'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f698d21... except.c (for_each_eh_region): New function.
Deleted branch temp-test-branch (was f698d21).
Fail to build gcc for commit [f698d21], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a668adb2f3bbe7e4b6f6aee2ca721b8e466d2ee7] intl.h (open_quote, [...]): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a668adb]
+---------------------------------------- Current commit hash: [a668adb] ----------------------------------------+
Building GCC for commit [a668adb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a668adb intl.h (open_quote, [...]): New.
HEAD is now at a668adb intl.h (open_quote, [...]): New.
Note: checking out 'a668adb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a668adb... intl.h (open_quote, [...]): New.
Deleted branch temp-test-branch (was a668adb).
Fail to build gcc for commit [a668adb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5cb2183e8b41ade5f28abc19e852de9081434ae5] emit-rtl.c (set_mem_attributes_minus_bitpos): Check TREE_THIS_NOTRAP when setting MEM_NOTRAP_P.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5cb2183]
+---------------------------------------- Current commit hash: [5cb2183] ----------------------------------------+
Building GCC for commit [5cb2183]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5cb2183 emit-rtl.c (set_mem_attributes_minus_bitpos): Check TREE_THIS_NOTRAP when setting MEM_NOTRAP_P.
HEAD is now at 5cb2183 emit-rtl.c (set_mem_attributes_minus_bitpos): Check TREE_THIS_NOTRAP when setting MEM_NOTRAP_P.
Note: checking out '5cb2183'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5cb2183... emit-rtl.c (set_mem_attributes_minus_bitpos): Check TREE_THIS_NOTRAP when setting MEM_NOTRAP_P.
Deleted branch temp-test-branch (was 5cb2183).
Fail to build gcc for commit [5cb2183], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9abe5d07d9d68c49971af2b93a4f83608a363284] global.c (global_alloc): Call make_accurate_live_analysis.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9abe5d0]
+---------------------------------------- Current commit hash: [9abe5d0] ----------------------------------------+
Building GCC for commit [9abe5d0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9abe5d0 global.c (global_alloc): Call make_accurate_live_analysis.
HEAD is now at 9abe5d0 global.c (global_alloc): Call make_accurate_live_analysis.
Note: checking out '9abe5d0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9abe5d0... global.c (global_alloc): Call make_accurate_live_analysis.
Deleted branch temp-test-branch (was 9abe5d0).
Fail to build gcc for commit [9abe5d0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[91581bccd5c8d82d2a6e06236f346dceab8ae86e] tree-ssa-forwprop.c (record_single_argument_cond_exprs): Accept new parameters for the statement and variable worklist as well as a...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [91581bc]
+---------------------------------------- Current commit hash: [91581bc] ----------------------------------------+
Building GCC for commit [91581bc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 91581bc tree-ssa-forwprop.c (record_single_argument_cond_exprs): Accept new parameters for the statement and variable worklist as well as a...
HEAD is now at 91581bc tree-ssa-forwprop.c (record_single_argument_cond_exprs): Accept new parameters for the statement and variable worklist as well as a...
Note: checking out '91581bc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 91581bc... tree-ssa-forwprop.c (record_single_argument_cond_exprs): Accept new parameters for the statement and variable worklist as well as a...
Deleted branch temp-test-branch (was 91581bc).
Fail to build gcc for commit [91581bc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f667741c42d3bc8082877638726e4d3a22285431] gimplify.c (compare_case_labels): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f667741c]
+---------------------------------------- Current commit hash: [f667741c] ----------------------------------------+
Building GCC for commit [f667741c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f667741c gimplify.c (compare_case_labels): New function.
HEAD is now at f667741c gimplify.c (compare_case_labels): New function.
Note: checking out 'f667741c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f667741c... gimplify.c (compare_case_labels): New function.
Deleted branch temp-test-branch (was f667741c).
Fail to build gcc for commit [f667741c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[29357d8b9417cf74ce10fc868e4774d4c77d6889] concurrence.h: Still create mutex object when single-threaded.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [29357d8]
+---------------------------------------- Current commit hash: [29357d8] ----------------------------------------+
Building GCC for commit [29357d8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 29357d8 concurrence.h: Still create mutex object when single-threaded.
HEAD is now at 29357d8 concurrence.h: Still create mutex object when single-threaded.
Note: checking out '29357d8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 29357d8... concurrence.h: Still create mutex object when single-threaded.
Deleted branch temp-test-branch (was 29357d8).
Fail to build gcc for commit [29357d8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[eae29fe1dcd76ead474050e5849a6e36ae1f8b29] re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eae29fe]
+---------------------------------------- Current commit hash: [eae29fe] ----------------------------------------+
Building GCC for commit [eae29fe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eae29fe re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
HEAD is now at eae29fe re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
Note: checking out 'eae29fe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eae29fe... re PR tree-optimization/14107 (Return warnings don't work without optimizations enabled)
Deleted branch temp-test-branch (was eae29fe).
Fail to build gcc for commit [eae29fe], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9bc856ddbfbb72ad01f2350ded06d7713781f645] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9bc856d]
+---------------------------------------- Current commit hash: [9bc856d] ----------------------------------------+
Building GCC for commit [9bc856d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9bc856d [multiple changes]
HEAD is now at 9bc856d [multiple changes]
Note: checking out '9bc856d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9bc856d... [multiple changes]
Deleted branch temp-test-branch (was 9bc856d).
Fail to build gcc for commit [9bc856d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8cff2a9522fcd7b7af3181f73aa91a2fce666722] cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_TAKEN is EXIT_BLOCK_PTR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8cff2a9]
+---------------------------------------- Current commit hash: [8cff2a9] ----------------------------------------+
Building GCC for commit [8cff2a9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8cff2a9 cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_TAKEN is EXIT_BLOCK_PTR.
HEAD is now at 8cff2a9 cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_TAKEN is EXIT_BLOCK_PTR.
Note: checking out '8cff2a9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8cff2a9... cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_TAKEN is EXIT_BLOCK_PTR.
Deleted branch temp-test-branch (was 8cff2a9).
Fail to build gcc for commit [8cff2a9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[500b9b49b224e0dd1589043b7d6992edfecb5816] Minor comment and whitespace changes
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [500b9b4]
+---------------------------------------- Current commit hash: [500b9b4] ----------------------------------------+
Building GCC for commit [500b9b4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 500b9b4 Minor comment and whitespace changes
HEAD is now at 500b9b4 Minor comment and whitespace changes
Note: checking out '500b9b4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 500b9b4... Minor comment and whitespace changes
Deleted branch temp-test-branch (was 500b9b4).
Fail to build gcc for commit [500b9b4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[70411eceaaf403d70ec42a62273a598e17e2f590] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [70411ec]
+---------------------------------------- Current commit hash: [70411ec] ----------------------------------------+
Building GCC for commit [70411ec]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 70411ec Daily bump.
HEAD is now at 70411ec Daily bump.
Note: checking out '70411ec'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 70411ec... Daily bump.
Deleted branch temp-test-branch (was 70411ec).
Fail to build gcc for commit [70411ec], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0682f0b80c5a14f1a2d9c6499c7481af34ebfb18] * prefix.c: Update copyright year for previous check-in.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0682f0b]
+---------------------------------------- Current commit hash: [0682f0b] ----------------------------------------+
Building GCC for commit [0682f0b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0682f0b * prefix.c: Update copyright year for previous check-in.
HEAD is now at 0682f0b * prefix.c: Update copyright year for previous check-in.
Note: checking out '0682f0b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0682f0b... * prefix.c: Update copyright year for previous check-in.
Deleted branch temp-test-branch (was 0682f0b).
Fail to build gcc for commit [0682f0b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[763ee179ed8e563ffb863f8977d9c5a31cdbf0a9] target-supports.exp (check_vmx_hw_available): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [763ee17]
+---------------------------------------- Current commit hash: [763ee17] ----------------------------------------+
Building GCC for commit [763ee17]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 763ee17 target-supports.exp (check_vmx_hw_available): New.
HEAD is now at 763ee17 target-supports.exp (check_vmx_hw_available): New.
Note: checking out '763ee17'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 763ee17... target-supports.exp (check_vmx_hw_available): New.
Deleted branch temp-test-branch (was 763ee17).
Fail to build gcc for commit [763ee17], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cfafe9734d14ae63db12d744541da675c68a26bd] Patch from Robert Millan.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfafe97]
+---------------------------------------- Current commit hash: [cfafe97] ----------------------------------------+
Building GCC for commit [cfafe97]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfafe97 Patch from Robert Millan.
HEAD is now at cfafe97 Patch from Robert Millan.
Note: checking out 'cfafe97'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfafe97... Patch from Robert Millan.
Deleted branch temp-test-branch (was cfafe97).
Fail to build gcc for commit [cfafe97], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f935f97b9f5e60a65c37bde6404bfce9e2b02a36] re PR target/15720 (function marked inline which is called directly isn't emitted)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f935f97]
+---------------------------------------- Current commit hash: [f935f97] ----------------------------------------+
Building GCC for commit [f935f97]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f935f97 re PR target/15720 (function marked inline which is called directly isn't emitted)
HEAD is now at f935f97 re PR target/15720 (function marked inline which is called directly isn't emitted)
Note: checking out 'f935f97'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f935f97... re PR target/15720 (function marked inline which is called directly isn't emitted)
Deleted branch temp-test-branch (was f935f97).
Fail to build gcc for commit [f935f97], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2a2789d84a3fe34c9db7e4c4673479bc79b32ba2] re PR target/10982 ([arm] poor optimisation of "if (var & const)")
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2a2789d]
+---------------------------------------- Current commit hash: [2a2789d] ----------------------------------------+
Building GCC for commit [2a2789d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2a2789d re PR target/10982 ([arm] poor optimisation of "if (var & const)")
HEAD is now at 2a2789d re PR target/10982 ([arm] poor optimisation of "if (var & const)")
Note: checking out '2a2789d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2a2789d... re PR target/10982 ([arm] poor optimisation of "if (var & const)")
Deleted branch temp-test-branch (was 2a2789d).
Fail to build gcc for commit [2a2789d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e5da415c49b335f665aca9d63d49abefe0ab1d8e] tree.h: Move std_gimplify_va_arg_expr protoype here.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e5da415]
+---------------------------------------- Current commit hash: [e5da415] ----------------------------------------+
Building GCC for commit [e5da415]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e5da415 tree.h: Move std_gimplify_va_arg_expr protoype here.
HEAD is now at e5da415 tree.h: Move std_gimplify_va_arg_expr protoype here.
Note: checking out 'e5da415'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e5da415... tree.h: Move std_gimplify_va_arg_expr protoype here.
Deleted branch temp-test-branch (was e5da415).
Fail to build gcc for commit [e5da415], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e6b5a630376f3fc1e82a4e6d564b397b8ce13be7] c-typeck.c (emit_side_effect_warnings): Ignore error marks.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e6b5a63]
+---------------------------------------- Current commit hash: [e6b5a63] ----------------------------------------+
Building GCC for commit [e6b5a63]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e6b5a63 c-typeck.c (emit_side_effect_warnings): Ignore error marks.
HEAD is now at e6b5a63 c-typeck.c (emit_side_effect_warnings): Ignore error marks.
Note: checking out 'e6b5a63'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e6b5a63... c-typeck.c (emit_side_effect_warnings): Ignore error marks.
Deleted branch temp-test-branch (was e6b5a63).
Fail to build gcc for commit [e6b5a63], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[118a3a8ba8497b0b68ebe0f875ce940d84a7315e] c-decl.c (diagnose_mismatched_decls): Improve error message.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [118a3a8]
+---------------------------------------- Current commit hash: [118a3a8] ----------------------------------------+
Building GCC for commit [118a3a8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 118a3a8 c-decl.c (diagnose_mismatched_decls): Improve error message.
HEAD is now at 118a3a8 c-decl.c (diagnose_mismatched_decls): Improve error message.
Note: checking out '118a3a8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 118a3a8... c-decl.c (diagnose_mismatched_decls): Improve error message.
Deleted branch temp-test-branch (was 118a3a8).
Fail to build gcc for commit [118a3a8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e332b68d76a8ce6b16439e235d5013a1182a22a9] arith.c (gfc_int2complex): Fix incorrect range checking.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e332b68]
+---------------------------------------- Current commit hash: [e332b68] ----------------------------------------+
Building GCC for commit [e332b68]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e332b68 arith.c (gfc_int2complex): Fix incorrect range checking.
HEAD is now at e332b68 arith.c (gfc_int2complex): Fix incorrect range checking.
Note: checking out 'e332b68'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e332b68... arith.c (gfc_int2complex): Fix incorrect range checking.
Deleted branch temp-test-branch (was e332b68).
Fail to build gcc for commit [e332b68], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fd52837724167ef174edcf6260581f6d92bd3dbb] Make-lang.in (F95_OBJS, [...]): Alpabetize.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fd52837]
+---------------------------------------- Current commit hash: [fd52837] ----------------------------------------+
Building GCC for commit [fd52837]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fd52837 Make-lang.in (F95_OBJS, [...]): Alpabetize.
HEAD is now at fd52837 Make-lang.in (F95_OBJS, [...]): Alpabetize.
Note: checking out 'fd52837'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fd52837... Make-lang.in (F95_OBJS, [...]): Alpabetize.
Deleted branch temp-test-branch (was fd52837).
Fail to build gcc for commit [fd52837], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2b27ff64d1ca3e45579562d0840480b3f9931b91] * Makefile.in (gimplify.o): Add cgraph.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2b27ff6]
+---------------------------------------- Current commit hash: [2b27ff6] ----------------------------------------+
Building GCC for commit [2b27ff6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2b27ff6 * Makefile.in (gimplify.o): Add cgraph.h.
HEAD is now at 2b27ff6 * Makefile.in (gimplify.o): Add cgraph.h.
Note: checking out '2b27ff6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2b27ff6... * Makefile.in (gimplify.o): Add cgraph.h.
Deleted branch temp-test-branch (was 2b27ff6).
Fail to build gcc for commit [2b27ff6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ff6ea709cbe6cb3c54184c8f40f1cdbc794f8473] * javax/swing/RepaintManager.java        (paintDirtyRegions): Use entrySet(), not values().
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ff6ea70]
+---------------------------------------- Current commit hash: [ff6ea70] ----------------------------------------+
Building GCC for commit [ff6ea70]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ff6ea70 * javax/swing/RepaintManager.java        (paintDirtyRegions): Use entrySet(), not values().
HEAD is now at ff6ea70 * javax/swing/RepaintManager.java
Note: checking out 'ff6ea70'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ff6ea70... * javax/swing/RepaintManager.java        (paintDirtyRegions): Use entrySet(), not values().
Deleted branch temp-test-branch (was ff6ea70).
Fail to build gcc for commit [ff6ea70], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[56db793abf585246272c17b3e1079024c2bd1deb] re PR tree-optimization/15982 (ICE in tree-ssa-pre due to GVN-PRE)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [56db793]
+---------------------------------------- Current commit hash: [56db793] ----------------------------------------+
Building GCC for commit [56db793]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 56db793 re PR tree-optimization/15982 (ICE in tree-ssa-pre due to GVN-PRE)
HEAD is now at 56db793 re PR tree-optimization/15982 (ICE in tree-ssa-pre due to GVN-PRE)
Note: checking out '56db793'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 56db793... re PR tree-optimization/15982 (ICE in tree-ssa-pre due to GVN-PRE)
Deleted branch temp-test-branch (was 56db793).
Fail to build gcc for commit [56db793], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a4a90b847aac34b2cbede88ffeef45343214d066] re PR target/15693 (ICE - unrecognizable insn)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a4a90b8]
+---------------------------------------- Current commit hash: [a4a90b8] ----------------------------------------+
Building GCC for commit [a4a90b8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a4a90b8 re PR target/15693 (ICE - unrecognizable insn)
HEAD is now at a4a90b8 re PR target/15693 (ICE - unrecognizable insn)
Note: checking out 'a4a90b8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a4a90b8... re PR target/15693 (ICE - unrecognizable insn)
Deleted branch temp-test-branch (was a4a90b8).
Fail to build gcc for commit [a4a90b8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2c486ea78cfcbd4b05c7845db23647fe2bf61d6d] fold-const.c (fold_cond_expr_with_comparison): New function, extracted from fold.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2c486ea]
+---------------------------------------- Current commit hash: [2c486ea] ----------------------------------------+
Building GCC for commit [2c486ea]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2c486ea fold-const.c (fold_cond_expr_with_comparison): New function, extracted from fold.
HEAD is now at 2c486ea fold-const.c (fold_cond_expr_with_comparison): New function, extracted from fold.
Note: checking out '2c486ea'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2c486ea... fold-const.c (fold_cond_expr_with_comparison): New function, extracted from fold.
Deleted branch temp-test-branch (was 2c486ea).
Fail to build gcc for commit [2c486ea], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ccfca4ae18a9197a1404acd3364b8b00c3965f3b] install.texi (Prerequisites): Update documentation of required versions of autoconf and automake.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ccfca4a]
+---------------------------------------- Current commit hash: [ccfca4a] ----------------------------------------+
Building GCC for commit [ccfca4a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ccfca4a install.texi (Prerequisites): Update documentation of required versions of autoconf and automake.
HEAD is now at ccfca4a install.texi (Prerequisites): Update documentation of required versions of autoconf and automake.
Note: checking out 'ccfca4a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ccfca4a... install.texi (Prerequisites): Update documentation of required versions of autoconf and automake.
Deleted branch temp-test-branch (was ccfca4a).
Fail to build gcc for commit [ccfca4a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[59ce6d6beeaac84f468963740cc09f40eefc398f] tree.c (array_type_nelts, [...]): Replace build with build2.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [59ce6d6]
+---------------------------------------- Current commit hash: [59ce6d6] ----------------------------------------+
Building GCC for commit [59ce6d6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 59ce6d6 tree.c (array_type_nelts, [...]): Replace build with build2.
HEAD is now at 59ce6d6 tree.c (array_type_nelts, [...]): Replace build with build2.
Note: checking out '59ce6d6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 59ce6d6... tree.c (array_type_nelts, [...]): Replace build with build2.
Deleted branch temp-test-branch (was 59ce6d6).
Fail to build gcc for commit [59ce6d6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[57ab9ac22c2b40b813269208072ede2452fb673a] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [57ab9ac]
+---------------------------------------- Current commit hash: [57ab9ac] ----------------------------------------+
Building GCC for commit [57ab9ac]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 57ab9ac Daily bump.
HEAD is now at 57ab9ac Daily bump.
Note: checking out '57ab9ac'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 57ab9ac... Daily bump.
Deleted branch temp-test-branch (was 57ab9ac).
Fail to build gcc for commit [57ab9ac], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b02398bd5bebe35bc44def2963fee7a4c4cf3568] c.opt (Wmissing-include-dirs): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b02398b]
+---------------------------------------- Current commit hash: [b02398b] ----------------------------------------+
Building GCC for commit [b02398b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b02398b c.opt (Wmissing-include-dirs): New.
HEAD is now at b02398b c.opt (Wmissing-include-dirs): New.
Note: checking out 'b02398b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b02398b... c.opt (Wmissing-include-dirs): New.
Deleted branch temp-test-branch (was b02398b).
Fail to build gcc for commit [b02398b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[91fa0e3de67af533eeeb8ef494a2bb66187570c1] re PR tree-optimization/15738 ([tree-ssa] Convert strrchr(s, c) to strchr(s, c) if c is known to be 0)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [91fa0e3]
+---------------------------------------- Current commit hash: [91fa0e3] ----------------------------------------+
Building GCC for commit [91fa0e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 91fa0e3 re PR tree-optimization/15738 ([tree-ssa] Convert strrchr(s, c) to strchr(s, c) if c is known to be 0)
HEAD is now at 91fa0e3 re PR tree-optimization/15738 ([tree-ssa] Convert strrchr(s, c) to strchr(s, c) if c is known to be 0)
Note: checking out '91fa0e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 91fa0e3... re PR tree-optimization/15738 ([tree-ssa] Convert strrchr(s, c) to strchr(s, c) if c is known to be 0)
Deleted branch temp-test-branch (was 91fa0e3).
Fail to build gcc for commit [91fa0e3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cfc74dce2ab985c8cfe485147de89ead9a2a701c] jni.exp (gcj_jni_test_one): Add lgcc_s for darwin.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfc74dc]
+---------------------------------------- Current commit hash: [cfc74dc] ----------------------------------------+
Building GCC for commit [cfc74dc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfc74dc jni.exp (gcj_jni_test_one): Add lgcc_s for darwin.
HEAD is now at cfc74dc jni.exp (gcj_jni_test_one): Add lgcc_s for darwin.
Note: checking out 'cfc74dc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfc74dc... jni.exp (gcj_jni_test_one): Add lgcc_s for darwin.
Deleted branch temp-test-branch (was cfc74dc).
Fail to build gcc for commit [cfc74dc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[85e933d8edd0b4ec8f51f3347890f1df39f1ec55] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [85e933d]
+---------------------------------------- Current commit hash: [85e933d] ----------------------------------------+
Building GCC for commit [85e933d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 85e933d Daily bump.
HEAD is now at 85e933d Daily bump.
Note: checking out '85e933d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 85e933d... Daily bump.
Deleted branch temp-test-branch (was 85e933d).
Fail to build gcc for commit [85e933d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[eb52a1638d528ce0c8df43d1a870da1474c2428f] new test
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb52a16]
+---------------------------------------- Current commit hash: [eb52a16] ----------------------------------------+
Building GCC for commit [eb52a16]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb52a16 new test
HEAD is now at eb52a16 new test
Note: checking out 'eb52a16'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb52a16... new test
Deleted branch temp-test-branch (was eb52a16).
Fail to build gcc for commit [eb52a16], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b7115e7ff56ab2f84ad57366bf49d032829175cc] g++spec.c (lang_specific_driver): Remove check for -lm and -lmath when check it see if it was the math library.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b7115e7]
+---------------------------------------- Current commit hash: [b7115e7] ----------------------------------------+
Building GCC for commit [b7115e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b7115e7 g++spec.c (lang_specific_driver): Remove check for -lm and -lmath when check it see if it was the math library.
HEAD is now at b7115e7 g++spec.c (lang_specific_driver): Remove check for -lm and -lmath when check it see if it was the math library.
Note: checking out 'b7115e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b7115e7... g++spec.c (lang_specific_driver): Remove check for -lm and -lmath when check it see if it was the math library.
Deleted branch temp-test-branch (was b7115e7).
Fail to build gcc for commit [b7115e7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[45aae8f22343ebac74aa78d6db43e93e88831250] expr.c (check_inquiry): Remove bogus tests.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [45aae8f]
+---------------------------------------- Current commit hash: [45aae8f] ----------------------------------------+
Building GCC for commit [45aae8f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 45aae8f expr.c (check_inquiry): Remove bogus tests.
HEAD is now at 45aae8f expr.c (check_inquiry): Remove bogus tests.
Note: checking out '45aae8f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 45aae8f... expr.c (check_inquiry): Remove bogus tests.
Deleted branch temp-test-branch (was 45aae8f).
Fail to build gcc for commit [45aae8f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[92fbb7592bbd3899a7b2ca98b4ac0e9f857fe114] re PR libfortran/15204 (ADJUSTR intrinsic accesses corrupted pointer)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [92fbb75]
+---------------------------------------- Current commit hash: [92fbb75] ----------------------------------------+
Building GCC for commit [92fbb75]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 92fbb75 re PR libfortran/15204 (ADJUSTR intrinsic accesses corrupted pointer)
HEAD is now at 92fbb75 re PR libfortran/15204 (ADJUSTR intrinsic accesses corrupted pointer)
Note: checking out '92fbb75'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 92fbb75... re PR libfortran/15204 (ADJUSTR intrinsic accesses corrupted pointer)
Deleted branch temp-test-branch (was 92fbb75).
Fail to build gcc for commit [92fbb75], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5bed2809676ce7157817b42b1c6555c073fa0d6e] * tree-ssa.doxy: Update for doxygen 1.3.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5bed280]
+---------------------------------------- Current commit hash: [5bed280] ----------------------------------------+
Building GCC for commit [5bed280]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5bed280 * tree-ssa.doxy: Update for doxygen 1.3.5.
HEAD is now at 5bed280 * tree-ssa.doxy: Update for doxygen 1.3.5.
Note: checking out '5bed280'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5bed280... * tree-ssa.doxy: Update for doxygen 1.3.5.
Deleted branch temp-test-branch (was 5bed280).
Fail to build gcc for commit [5bed280], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[520f0c480386a790eb5a99a1d3295dd234ea4bce] tree-outof-ssa.c (rewrite_vars_out_of_ssa): Free map at the end of the block.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [520f0c4]
+---------------------------------------- Current commit hash: [520f0c4] ----------------------------------------+
Building GCC for commit [520f0c4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 520f0c4 tree-outof-ssa.c (rewrite_vars_out_of_ssa): Free map at the end of the block.
HEAD is now at 520f0c4 tree-outof-ssa.c (rewrite_vars_out_of_ssa): Free map at the end of the block.
Note: checking out '520f0c4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 520f0c4... tree-outof-ssa.c (rewrite_vars_out_of_ssa): Free map at the end of the block.
Deleted branch temp-test-branch (was 520f0c4).
Fail to build gcc for commit [520f0c4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e130a54b78b1f9b096a5ab1b98debfb263e16663] c-common.def (ASM_STMT): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e130a54]
+---------------------------------------- Current commit hash: [e130a54] ----------------------------------------+
Building GCC for commit [e130a54]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e130a54 c-common.def (ASM_STMT): Remove.
HEAD is now at e130a54 c-common.def (ASM_STMT): Remove.
Note: checking out 'e130a54'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e130a54... c-common.def (ASM_STMT): Remove.
Deleted branch temp-test-branch (was e130a54).
Fail to build gcc for commit [e130a54], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8b7520861b562c297a3cda422241e4d85ab3788b] tree-into-ssa.c (insert_phi_nodes_for): XFREE bitmaps allocated with BITMAP_XMALLOC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8b75208]
+---------------------------------------- Current commit hash: [8b75208] ----------------------------------------+
Building GCC for commit [8b75208]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8b75208 tree-into-ssa.c (insert_phi_nodes_for): XFREE bitmaps allocated with BITMAP_XMALLOC.
HEAD is now at 8b75208 tree-into-ssa.c (insert_phi_nodes_for): XFREE bitmaps allocated with BITMAP_XMALLOC.
Note: checking out '8b75208'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8b75208... tree-into-ssa.c (insert_phi_nodes_for): XFREE bitmaps allocated with BITMAP_XMALLOC.
Deleted branch temp-test-branch (was 8b75208).
Fail to build gcc for commit [8b75208], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bf9a420e62f4f6993daa8b581a6d4ec28ace4730] configure.ac: New name of configure.in.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bf9a420]
+---------------------------------------- Current commit hash: [bf9a420] ----------------------------------------+
Building GCC for commit [bf9a420]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bf9a420 configure.ac: New name of configure.in.
HEAD is now at bf9a420 configure.ac: New name of configure.in.
Note: checking out 'bf9a420'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bf9a420... configure.ac: New name of configure.in.
Deleted branch temp-test-branch (was bf9a420).
Fail to build gcc for commit [bf9a420], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[90afe2c9f5c7a47b53fe31da0b06a6f8dda37cce] tree.def (documentation): Remove mention of class 'b'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [90afe2c]
+---------------------------------------- Current commit hash: [90afe2c] ----------------------------------------+
Building GCC for commit [90afe2c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 90afe2c tree.def (documentation): Remove mention of class 'b'.
HEAD is now at 90afe2c tree.def (documentation): Remove mention of class 'b'.
Note: checking out '90afe2c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 90afe2c... tree.def (documentation): Remove mention of class 'b'.
Deleted branch temp-test-branch (was 90afe2c).
Fail to build gcc for commit [90afe2c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1f2c9ba511080970929a98ac82e644eb11c65dd8] re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1f2c9ba]
+---------------------------------------- Current commit hash: [1f2c9ba] ----------------------------------------+
Building GCC for commit [1f2c9ba]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1f2c9ba re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
HEAD is now at 1f2c9ba re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
Note: checking out '1f2c9ba'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1f2c9ba... re PR c++/14639 ([non-unit-at-a-time] Incorrect emission of unused compiler-generated destructor)
Deleted branch temp-test-branch (was 1f2c9ba).
Fail to build gcc for commit [1f2c9ba], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a01a235c76298c4f4e67e8128c416fe24724c865] jni.h (_Jv_func): Removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a01a235]
+---------------------------------------- Current commit hash: [a01a235] ----------------------------------------+
Building GCC for commit [a01a235]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a01a235 jni.h (_Jv_func): Removed.
HEAD is now at a01a235 jni.h (_Jv_func): Removed.
Note: checking out 'a01a235'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a01a235... jni.h (_Jv_func): Removed.
Deleted branch temp-test-branch (was a01a235).
Fail to build gcc for commit [a01a235], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a9c70186f4a96a84d09f97ba3fbc4cfc94d43d63] create_testsuite_files: Tweak.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a9c7018]
+---------------------------------------- Current commit hash: [a9c7018] ----------------------------------------+
Building GCC for commit [a9c7018]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a9c7018 create_testsuite_files: Tweak.
HEAD is now at a9c7018 create_testsuite_files: Tweak.
Note: checking out 'a9c7018'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a9c7018... create_testsuite_files: Tweak.
Deleted branch temp-test-branch (was a9c7018).
Fail to build gcc for commit [a9c7018], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cfbd22d765f6afb097d4bfb7b3407d60986e84a9] Adopt splay trees for object database.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfbd22d]
+---------------------------------------- Current commit hash: [cfbd22d] ----------------------------------------+
Building GCC for commit [cfbd22d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfbd22d Adopt splay trees for object database.
HEAD is now at cfbd22d Adopt splay trees for object database.
Note: checking out 'cfbd22d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfbd22d... Adopt splay trees for object database.
Deleted branch temp-test-branch (was cfbd22d).
Fail to build gcc for commit [cfbd22d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c566721f93bb378064b5101a9d5156ce6018159b] re PR c++/15967 (ICE on ambiguous operator new in class hierarchy)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c566721]
+---------------------------------------- Current commit hash: [c566721] ----------------------------------------+
Building GCC for commit [c566721]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c566721 re PR c++/15967 (ICE on ambiguous operator new in class hierarchy)
HEAD is now at c566721 re PR c++/15967 (ICE on ambiguous operator new in class hierarchy)
Note: checking out 'c566721'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c566721... re PR c++/15967 (ICE on ambiguous operator new in class hierarchy)
Deleted branch temp-test-branch (was c566721).
Fail to build gcc for commit [c566721], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f437e359921603b19e22c44b44f6bb64c199b04f] CharIndexedReader.java: Removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f437e35]
+---------------------------------------- Current commit hash: [f437e35] ----------------------------------------+
Building GCC for commit [f437e35]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f437e35 CharIndexedReader.java: Removed.
HEAD is now at f437e35 CharIndexedReader.java: Removed.
Note: checking out 'f437e35'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f437e35... CharIndexedReader.java: Removed.
Deleted branch temp-test-branch (was f437e35).
Fail to build gcc for commit [f437e35], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722] target-supports.exp (check_alias_available, [...]): Use unique names for temporary files.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8dc84ef]
+---------------------------------------- Current commit hash: [8dc84ef] ----------------------------------------+
Building GCC for commit [8dc84ef]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8dc84ef target-supports.exp (check_alias_available, [...]): Use unique names for temporary files.
HEAD is now at 8dc84ef target-supports.exp (check_alias_available, [...]): Use unique names for temporary files.
Note: checking out '8dc84ef'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8dc84ef... target-supports.exp (check_alias_available, [...]): Use unique names for temporary files.
Deleted branch temp-test-branch (was 8dc84ef).
Fail to build gcc for commit [8dc84ef], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[44ee9aef7bf45d3170a6b44c907ee94c637f73f3] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [44ee9ae]
+---------------------------------------- Current commit hash: [44ee9ae] ----------------------------------------+
Building GCC for commit [44ee9ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 44ee9ae Daily bump.
HEAD is now at 44ee9ae Daily bump.
Note: checking out '44ee9ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 44ee9ae... Daily bump.
Deleted branch temp-test-branch (was 44ee9ae).
Fail to build gcc for commit [44ee9ae], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b63e5497f3a01e91c526e52550da7c907737792b] altivec-10.C: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b63e549]
+---------------------------------------- Current commit hash: [b63e549] ----------------------------------------+
Building GCC for commit [b63e549]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b63e549 altivec-10.C: New test.
HEAD is now at b63e549 altivec-10.C: New test.
Note: checking out 'b63e549'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b63e549... altivec-10.C: New test.
Deleted branch temp-test-branch (was b63e549).
Fail to build gcc for commit [b63e549], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[97358092a486fda247a0e3bcd72cb2a1ab6f45d0] re PR target/15927 (THUMB -O2: strength-reduced iteration variable ends up off by 1)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9735809]
+---------------------------------------- Current commit hash: [9735809] ----------------------------------------+
Building GCC for commit [9735809]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9735809 re PR target/15927 (THUMB -O2: strength-reduced iteration variable ends up off by 1)
HEAD is now at 9735809 re PR target/15927 (THUMB -O2: strength-reduced iteration variable ends up off by 1)
Note: checking out '9735809'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9735809... re PR target/15927 (THUMB -O2: strength-reduced iteration variable ends up off by 1)
Deleted branch temp-test-branch (was 9735809).
Fail to build gcc for commit [9735809], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6e72d1e9f16f624a1c44f6d605c2489c7e9d5c5b] gcse.c (hash_scan_set, [...]): Revert previous change, don't use CALL_P.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6e72d1e]
+---------------------------------------- Current commit hash: [6e72d1e] ----------------------------------------+
Building GCC for commit [6e72d1e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6e72d1e gcse.c (hash_scan_set, [...]): Revert previous change, don't use CALL_P.
HEAD is now at 6e72d1e gcse.c (hash_scan_set, [...]): Revert previous change, don't use CALL_P.
Note: checking out '6e72d1e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6e72d1e... gcse.c (hash_scan_set, [...]): Revert previous change, don't use CALL_P.
Deleted branch temp-test-branch (was 6e72d1e).
Fail to build gcc for commit [6e72d1e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b7cefb87f053f26b4354d18f94c4e3baa4266645] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b7cefb8]
+---------------------------------------- Current commit hash: [b7cefb8] ----------------------------------------+
Building GCC for commit [b7cefb8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b7cefb8 Daily bump.
HEAD is now at b7cefb8 Daily bump.
Note: checking out 'b7cefb8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b7cefb8... Daily bump.
Deleted branch temp-test-branch (was b7cefb8).
Fail to build gcc for commit [b7cefb8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9d409075cb2e052ce66b91bdc791b8c6cf37dcbb] random.c (random_r4): Burn a random number.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9d40907]
+---------------------------------------- Current commit hash: [9d40907] ----------------------------------------+
Building GCC for commit [9d40907]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9d40907 random.c (random_r4): Burn a random number.
HEAD is now at 9d40907 random.c (random_r4): Burn a random number.
Note: checking out '9d40907'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9d40907... random.c (random_r4): Burn a random number.
Deleted branch temp-test-branch (was 9d40907).
Fail to build gcc for commit [9d40907], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e9cb3dacee78c2e173e94f11a6c68ba66c8f895f] Fix ChangeLog entry.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e9cb3da]
+---------------------------------------- Current commit hash: [e9cb3da] ----------------------------------------+
Building GCC for commit [e9cb3da]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e9cb3da Fix ChangeLog entry.
HEAD is now at e9cb3da Fix ChangeLog entry.
Note: checking out 'e9cb3da'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e9cb3da... Fix ChangeLog entry.
Deleted branch temp-test-branch (was e9cb3da).
Fail to build gcc for commit [e9cb3da], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9cf737f89ffe0c75614ad388440b7b7706b6316b] bb-reorder.c, [...]: Fix comment formatting.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9cf737f]
+---------------------------------------- Current commit hash: [9cf737f] ----------------------------------------+
Building GCC for commit [9cf737f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9cf737f bb-reorder.c, [...]: Fix comment formatting.
HEAD is now at 9cf737f bb-reorder.c, [...]: Fix comment formatting.
Note: checking out '9cf737f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9cf737f... bb-reorder.c, [...]: Fix comment formatting.
Deleted branch temp-test-branch (was 9cf737f).
Fail to build gcc for commit [9cf737f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6264b0a68d820604c6b85a4c093de22bef6382cf] configure.in: Check for srcdir/winsup rather than build directory winsup.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6264b0a]
+---------------------------------------- Current commit hash: [6264b0a] ----------------------------------------+
Building GCC for commit [6264b0a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6264b0a configure.in: Check for srcdir/winsup rather than build directory winsup.
HEAD is now at 6264b0a configure.in: Check for srcdir/winsup rather than build directory winsup.
Note: checking out '6264b0a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6264b0a... configure.in: Check for srcdir/winsup rather than build directory winsup.
Deleted branch temp-test-branch (was 6264b0a).
Fail to build gcc for commit [6264b0a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e784e64956c558965e01fc239371949d3ac98c90] * builtins.c: Add a prototype for fold_builtin_strchr().
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e784e64]
+---------------------------------------- Current commit hash: [e784e64] ----------------------------------------+
Building GCC for commit [e784e64]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e784e64 * builtins.c: Add a prototype for fold_builtin_strchr().
HEAD is now at e784e64 * builtins.c: Add a prototype for fold_builtin_strchr().
Note: checking out 'e784e64'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e784e64... * builtins.c: Add a prototype for fold_builtin_strchr().
Deleted branch temp-test-branch (was e784e64).
Fail to build gcc for commit [e784e64], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[da28a3b97d88f3fc40bdd9e4c29a737d88f030a0] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [da28a3b]
+---------------------------------------- Current commit hash: [da28a3b] ----------------------------------------+
Building GCC for commit [da28a3b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: da28a3b [multiple changes]
HEAD is now at da28a3b [multiple changes]
Note: checking out 'da28a3b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at da28a3b... [multiple changes]
Deleted branch temp-test-branch (was da28a3b).
Fail to build gcc for commit [da28a3b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[41c64ac01272bd3fca0486e618bd1d1ea14a76bd] expmed.c (synth_mult): Add an additional MODE argument for the machine mode of the multiplication.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [41c64ac]
+---------------------------------------- Current commit hash: [41c64ac] ----------------------------------------+
Building GCC for commit [41c64ac]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 41c64ac expmed.c (synth_mult): Add an additional MODE argument for the machine mode of the multiplication.
HEAD is now at 41c64ac expmed.c (synth_mult): Add an additional MODE argument for the machine mode of the multiplication.
Note: checking out '41c64ac'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 41c64ac... expmed.c (synth_mult): Add an additional MODE argument for the machine mode of the multiplication.
Deleted branch temp-test-branch (was 41c64ac).
Fail to build gcc for commit [41c64ac], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5c234cd7f4ce3463ea8a3403dca76654200fe547] objc-act.h (get_object_reference): Rename to get_protocol_reference.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5c234cd]
+---------------------------------------- Current commit hash: [5c234cd] ----------------------------------------+
Building GCC for commit [5c234cd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5c234cd objc-act.h (get_object_reference): Rename to get_protocol_reference.
HEAD is now at 5c234cd objc-act.h (get_object_reference): Rename to get_protocol_reference.
Note: checking out '5c234cd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5c234cd... objc-act.h (get_object_reference): Rename to get_protocol_reference.
Deleted branch temp-test-branch (was 5c234cd).
Fail to build gcc for commit [5c234cd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[61c627ed2c1b7184807d2101ab2d288e9ca4f39b] re PR objc/7993 (private variables cannot be shadowed in subclasses)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [61c627e]
+---------------------------------------- Current commit hash: [61c627e] ----------------------------------------+
Building GCC for commit [61c627e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 61c627e re PR objc/7993 (private variables cannot be shadowed in subclasses)
HEAD is now at 61c627e re PR objc/7993 (private variables cannot be shadowed in subclasses)
Note: checking out '61c627e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 61c627e... re PR objc/7993 (private variables cannot be shadowed in subclasses)
Deleted branch temp-test-branch (was 61c627e).
Fail to build gcc for commit [61c627e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5a5086621e8751f9666cf0a3d5956149202e1487] c-common.def (IF_STMT, [...]): Move to cp-tree.def.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a50866]
+---------------------------------------- Current commit hash: [5a50866] ----------------------------------------+
Building GCC for commit [5a50866]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a50866 c-common.def (IF_STMT, [...]): Move to cp-tree.def.
HEAD is now at 5a50866 c-common.def (IF_STMT, [...]): Move to cp-tree.def.
Note: checking out '5a50866'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a50866... c-common.def (IF_STMT, [...]): Move to cp-tree.def.
Deleted branch temp-test-branch (was 5a50866).
Fail to build gcc for commit [5a50866], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c05e85e236f6848de79ca82ca5cf6ccbc897c84c] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c05e85e]
+---------------------------------------- Current commit hash: [c05e85e] ----------------------------------------+
Building GCC for commit [c05e85e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c05e85e [multiple changes]
HEAD is now at c05e85e [multiple changes]
Note: checking out 'c05e85e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c05e85e... [multiple changes]
Deleted branch temp-test-branch (was c05e85e).
Fail to build gcc for commit [c05e85e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f0638e1d703324110c59579956152f952f2cc3ab] gimplify.c (mostly_copy_tree_r): Don't attempt to copy decls.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f0638e1]
+---------------------------------------- Current commit hash: [f0638e1] ----------------------------------------+
Building GCC for commit [f0638e1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f0638e1 gimplify.c (mostly_copy_tree_r): Don't attempt to copy decls.
HEAD is now at f0638e1 gimplify.c (mostly_copy_tree_r): Don't attempt to copy decls.
Note: checking out 'f0638e1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f0638e1... gimplify.c (mostly_copy_tree_r): Don't attempt to copy decls.
Deleted branch temp-test-branch (was f0638e1).
Fail to build gcc for commit [f0638e1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b25a89339056f59109121ddd7f9f5b7624f287e4] Makefile.in (TAGS): Don't mess with c-parse.[ch].
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b25a893]
+---------------------------------------- Current commit hash: [b25a893] ----------------------------------------+
Building GCC for commit [b25a893]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b25a893 Makefile.in (TAGS): Don't mess with c-parse.[ch].
HEAD is now at b25a893 Makefile.in (TAGS): Don't mess with c-parse.[ch].
Note: checking out 'b25a893'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b25a893... Makefile.in (TAGS): Don't mess with c-parse.[ch].
Deleted branch temp-test-branch (was b25a893).
Fail to build gcc for commit [b25a893], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6ad70bf28ab96fe47d24898f4ec48d21166342e4] abi_check.cc: Add unistd.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ad70bf]
+---------------------------------------- Current commit hash: [6ad70bf] ----------------------------------------+
Building GCC for commit [6ad70bf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ad70bf abi_check.cc: Add unistd.h.
HEAD is now at 6ad70bf abi_check.cc: Add unistd.h.
Note: checking out '6ad70bf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ad70bf... abi_check.cc: Add unistd.h.
Deleted branch temp-test-branch (was 6ad70bf).
Fail to build gcc for commit [6ad70bf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ed5947c9bcae4c500c8e96f2809b4df527234804] * rtl.def (VAR_LOCATION): Make RTX_EXTRA.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ed5947c]
+---------------------------------------- Current commit hash: [ed5947c] ----------------------------------------+
Building GCC for commit [ed5947c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ed5947c * rtl.def (VAR_LOCATION): Make RTX_EXTRA.
HEAD is now at ed5947c * rtl.def (VAR_LOCATION): Make RTX_EXTRA.
Note: checking out 'ed5947c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ed5947c... * rtl.def (VAR_LOCATION): Make RTX_EXTRA.
Deleted branch temp-test-branch (was ed5947c).
Fail to build gcc for commit [ed5947c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5763419e53ddb4f56a511d0c980787d0d1b4e993] Added missing entry.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5763419]
+---------------------------------------- Current commit hash: [5763419] ----------------------------------------+
Building GCC for commit [5763419]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5763419 Added missing entry.
HEAD is now at 5763419 Added missing entry.
Note: checking out '5763419'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5763419... Added missing entry.
Deleted branch temp-test-branch (was 5763419).
Fail to build gcc for commit [5763419], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c073ab616f5692283e12bc93b82a14aad88adf9e] revert accidental checkin
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c073ab6]
+---------------------------------------- Current commit hash: [c073ab6] ----------------------------------------+
Building GCC for commit [c073ab6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c073ab6 revert accidental checkin
HEAD is now at c073ab6 revert accidental checkin
Note: checking out 'c073ab6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c073ab6... revert accidental checkin
Deleted branch temp-test-branch (was c073ab6).
Fail to build gcc for commit [c073ab6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6972898c73f6045f08985b2d54f2b7862a648ff1] gcc.texi, [...]: Update based on printed manual.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6972898]
+---------------------------------------- Current commit hash: [6972898] ----------------------------------------+
Building GCC for commit [6972898]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6972898 gcc.texi, [...]: Update based on printed manual.
HEAD is now at 6972898 gcc.texi, [...]: Update based on printed manual.
Note: checking out '6972898'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6972898... gcc.texi, [...]: Update based on printed manual.
Deleted branch temp-test-branch (was 6972898).
Fail to build gcc for commit [6972898], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f8f456c68aea1927308c9ee9b47246e62dc945c2] gfortran.texi: Use @table @emph instead of @itemize @emph.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f8f456c]
+---------------------------------------- Current commit hash: [f8f456c] ----------------------------------------+
Building GCC for commit [f8f456c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f8f456c gfortran.texi: Use @table @emph instead of @itemize @emph.
HEAD is now at f8f456c gfortran.texi: Use @table @emph instead of @itemize @emph.
Note: checking out 'f8f456c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f8f456c... gfortran.texi: Use @table @emph instead of @itemize @emph.
Deleted branch temp-test-branch (was f8f456c).
Fail to build gcc for commit [f8f456c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[386f10152bb3dcc7e949e36fabb089f27aaa6d45] altivec-3.c: Move call to altivec_check.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [386f101]
+---------------------------------------- Current commit hash: [386f101] ----------------------------------------+
Building GCC for commit [386f101]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 386f101 altivec-3.c: Move call to altivec_check.
HEAD is now at 386f101 altivec-3.c: Move call to altivec_check.
Note: checking out '386f101'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 386f101... altivec-3.c: Move call to altivec_check.
Deleted branch temp-test-branch (was 386f101).
Fail to build gcc for commit [386f101], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7549d7f202636b2fca00a790289cc336eab7a9a4] re PR libstdc++/15046 (Math functions misdetected by cross configuration)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7549d7f]
+---------------------------------------- Current commit hash: [7549d7f] ----------------------------------------+
Building GCC for commit [7549d7f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7549d7f re PR libstdc++/15046 (Math functions misdetected by cross configuration)
HEAD is now at 7549d7f re PR libstdc++/15046 (Math functions misdetected by cross configuration)
Note: checking out '7549d7f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7549d7f... re PR libstdc++/15046 (Math functions misdetected by cross configuration)
Deleted branch temp-test-branch (was 7549d7f).
Fail to build gcc for commit [7549d7f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f411a73a8caf915d2685c5065de6c918de76daad] alias.c (init_alias_analysis): Use ggc_calloc instead of xrealloc.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f411a73a]
+---------------------------------------- Current commit hash: [f411a73a] ----------------------------------------+
Building GCC for commit [f411a73a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f411a73a alias.c (init_alias_analysis): Use ggc_calloc instead of xrealloc.
HEAD is now at f411a73a alias.c (init_alias_analysis): Use ggc_calloc instead of xrealloc.
Note: checking out 'f411a73a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f411a73a... alias.c (init_alias_analysis): Use ggc_calloc instead of xrealloc.
Deleted branch temp-test-branch (was f411a73a).
Fail to build gcc for commit [f411a73a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[623f4556de4ba117aef31e67326fcbf9152dbff6] tree-ssa-live (calculate_live_on_entry): Free saw_def at the end of the function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [623f455]
+---------------------------------------- Current commit hash: [623f455] ----------------------------------------+
Building GCC for commit [623f455]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 623f455 tree-ssa-live (calculate_live_on_entry): Free saw_def at the end of the function.
HEAD is now at 623f455 tree-ssa-live (calculate_live_on_entry): Free saw_def at the end of the function.
Note: checking out '623f455'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 623f455... tree-ssa-live (calculate_live_on_entry): Free saw_def at the end of the function.
Deleted branch temp-test-branch (was 623f455).
Fail to build gcc for commit [623f455], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b9034bbd6d0a84129e2c4abe9938570a0c6b201e] install.texi (Configuration): Update description for --enable-version-specific-runtime-libs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b9034bb]
+---------------------------------------- Current commit hash: [b9034bb] ----------------------------------------+
Building GCC for commit [b9034bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b9034bb install.texi (Configuration): Update description for --enable-version-specific-runtime-libs.
HEAD is now at b9034bb install.texi (Configuration): Update description for --enable-version-specific-runtime-libs.
Note: checking out 'b9034bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b9034bb... install.texi (Configuration): Update description for --enable-version-specific-runtime-libs.
Deleted branch temp-test-branch (was b9034bb).
Fail to build gcc for commit [b9034bb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[13c1cd82670b0be75bf99ba5bd23a7c34460fe65] stor-layout.c (update_alignment_for_field): Use targetm.align_anon_bitfield.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [13c1cd8]
+---------------------------------------- Current commit hash: [13c1cd8] ----------------------------------------+
Building GCC for commit [13c1cd8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 13c1cd8 stor-layout.c (update_alignment_for_field): Use targetm.align_anon_bitfield.
HEAD is now at 13c1cd8 stor-layout.c (update_alignment_for_field): Use targetm.align_anon_bitfield.
Note: checking out '13c1cd8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 13c1cd8... stor-layout.c (update_alignment_for_field): Use targetm.align_anon_bitfield.
Deleted branch temp-test-branch (was 13c1cd8).
Fail to build gcc for commit [13c1cd8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0173bb6f2d715c4c3839c17e26a38bd522e07fa4] c-pragma.h (c_lex_string_translate): Change type to int.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0173bb6]
+---------------------------------------- Current commit hash: [0173bb6] ----------------------------------------+
Building GCC for commit [0173bb6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0173bb6 c-pragma.h (c_lex_string_translate): Change type to int.
HEAD is now at 0173bb6 c-pragma.h (c_lex_string_translate): Change type to int.
Note: checking out '0173bb6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0173bb6... c-pragma.h (c_lex_string_translate): Change type to int.
Deleted branch temp-test-branch (was 0173bb6).
Fail to build gcc for commit [0173bb6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[14bc8dc2806a4dae14ec1fa052fb319cf92c2085] tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Reorganize so that it picks up more opportunities to eliminate ABS expressions...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [14bc8dc]
+---------------------------------------- Current commit hash: [14bc8dc] ----------------------------------------+
Building GCC for commit [14bc8dc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 14bc8dc tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Reorganize so that it picks up more opportunities to eliminate ABS expressions...
HEAD is now at 14bc8dc tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Reorganize so that it picks up more opportunities to eliminate ABS expressions...
Note: checking out '14bc8dc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 14bc8dc... tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Reorganize so that it picks up more opportunities to eliminate ABS expressions...
Deleted branch temp-test-branch (was 14bc8dc).
Fail to build gcc for commit [14bc8dc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[659e82ad0fff564050e3363172ef52a9a948a27f] hashtable.h: Trivial formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [659e82ad]
+---------------------------------------- Current commit hash: [659e82ad] ----------------------------------------+
Building GCC for commit [659e82ad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 659e82ad hashtable.h: Trivial formatting fixes.
HEAD is now at 659e82ad hashtable.h: Trivial formatting fixes.
Note: checking out '659e82ad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 659e82ad... hashtable.h: Trivial formatting fixes.
Deleted branch temp-test-branch (was 659e82ad).
Fail to build gcc for commit [659e82ad], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d42093a1dbfe8be8a96829b8783da5efe8c3d7c8] darwin7.h (MATH_LIBRARY): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d42093a]
+---------------------------------------- Current commit hash: [d42093a] ----------------------------------------+
Building GCC for commit [d42093a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d42093a darwin7.h (MATH_LIBRARY): Remove.
HEAD is now at d42093a darwin7.h (MATH_LIBRARY): Remove.
Note: checking out 'd42093a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d42093a... darwin7.h (MATH_LIBRARY): Remove.
Deleted branch temp-test-branch (was d42093a).
Fail to build gcc for commit [d42093a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4d7694fc06e9543508c3babb8e351174345b122d] function.c (fixup_var_refs): Also adjust the start of sequence after fixing up the insns.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4d7694f]
+---------------------------------------- Current commit hash: [4d7694f] ----------------------------------------+
Building GCC for commit [4d7694f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4d7694f function.c (fixup_var_refs): Also adjust the start of sequence after fixing up the insns.
HEAD is now at 4d7694f function.c (fixup_var_refs): Also adjust the start of sequence after fixing up the insns.
Note: checking out '4d7694f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4d7694f... function.c (fixup_var_refs): Also adjust the start of sequence after fixing up the insns.
Deleted branch temp-test-branch (was 4d7694f).
Fail to build gcc for commit [4d7694f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[94161cec950961a9b8f76db8ef0035dd840d542e] re PR libfortran/15311 (Incorrect handling of A edit descriptor)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [94161ce]
+---------------------------------------- Current commit hash: [94161ce] ----------------------------------------+
Building GCC for commit [94161ce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 94161ce re PR libfortran/15311 (Incorrect handling of A edit descriptor)
HEAD is now at 94161ce re PR libfortran/15311 (Incorrect handling of A edit descriptor)
Note: checking out '94161ce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 94161ce... re PR libfortran/15311 (Incorrect handling of A edit descriptor)
Deleted branch temp-test-branch (was 94161ce).
Fail to build gcc for commit [94161ce], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7031baf4de70d1f280df2c3837861ca042ae79b8] re PR fortran/15211 (ICE with LEN intrinsic)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7031baf]
+---------------------------------------- Current commit hash: [7031baf] ----------------------------------------+
Building GCC for commit [7031baf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7031baf re PR fortran/15211 (ICE with LEN intrinsic)
HEAD is now at 7031baf re PR fortran/15211 (ICE with LEN intrinsic)
Note: checking out '7031baf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7031baf... re PR fortran/15211 (ICE with LEN intrinsic)
Deleted branch temp-test-branch (was 7031baf).
Fail to build gcc for commit [7031baf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9412376a4980aad9f32df8651de907b395dedf16] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9412376]
+---------------------------------------- Current commit hash: [9412376] ----------------------------------------+
Building GCC for commit [9412376]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9412376 Daily bump.
HEAD is now at 9412376 Daily bump.
Note: checking out '9412376'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9412376... Daily bump.
Deleted branch temp-test-branch (was 9412376).
Fail to build gcc for commit [9412376], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[df94fa14b99a0911478d84280f95aa35482172e9] System.java: (getenv0): New method.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [df94fa1]
+---------------------------------------- Current commit hash: [df94fa1] ----------------------------------------+
Building GCC for commit [df94fa1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: df94fa1 System.java: (getenv0): New method.
HEAD is now at df94fa1 System.java: (getenv0): New method.
Note: checking out 'df94fa1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at df94fa1... System.java: (getenv0): New method.
Deleted branch temp-test-branch (was df94fa1).
Fail to build gcc for commit [df94fa1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[60bca1329b31cdbc0feab8d9a2b5f617aee670de] remove stray conflict marker
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [60bca13]
+---------------------------------------- Current commit hash: [60bca13] ----------------------------------------+
Building GCC for commit [60bca13]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 60bca13 remove stray conflict marker
HEAD is now at 60bca13 remove stray conflict marker
Note: checking out '60bca13'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 60bca13... remove stray conflict marker
Deleted branch temp-test-branch (was 60bca13).
Fail to build gcc for commit [60bca13], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[93ae5495f56f08b888269b8fcf175cc7df8f1322] rs6000.h (ASM_CPU_SPEC): Handle -mpowerpc64 and -mcpu for power5 and rs64a.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [93ae549]
+---------------------------------------- Current commit hash: [93ae549] ----------------------------------------+
Building GCC for commit [93ae549]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 93ae549 rs6000.h (ASM_CPU_SPEC): Handle -mpowerpc64 and -mcpu for power5 and rs64a.
HEAD is now at 93ae549 rs6000.h (ASM_CPU_SPEC): Handle -mpowerpc64 and -mcpu for power5 and rs64a.
Note: checking out '93ae549'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 93ae549... rs6000.h (ASM_CPU_SPEC): Handle -mpowerpc64 and -mcpu for power5 and rs64a.
Deleted branch temp-test-branch (was 93ae549).
Fail to build gcc for commit [93ae549], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1eb38ecbd6f28fb4ef0b2b3a497bf56db6a0a2d6] * Makefile.in (distclean): Don't try to remove empty directories.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1eb38ec]
+---------------------------------------- Current commit hash: [1eb38ec] ----------------------------------------+
Building GCC for commit [1eb38ec]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1eb38ec * Makefile.in (distclean): Don't try to remove empty directories.
HEAD is now at 1eb38ec * Makefile.in (distclean): Don't try to remove empty directories.
Note: checking out '1eb38ec'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1eb38ec... * Makefile.in (distclean): Don't try to remove empty directories.
Deleted branch temp-test-branch (was 1eb38ec).
Fail to build gcc for commit [1eb38ec], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a18f61f853d9a2c1c65cf4021e2bdfa785572fad] * tree-sra.c (tree_sra): Update documentation.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a18f61f]
+---------------------------------------- Current commit hash: [a18f61f] ----------------------------------------+
Building GCC for commit [a18f61f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a18f61f * tree-sra.c (tree_sra): Update documentation.
HEAD is now at a18f61f * tree-sra.c (tree_sra): Update documentation.
Note: checking out 'a18f61f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a18f61f... * tree-sra.c (tree_sra): Update documentation.
Deleted branch temp-test-branch (was a18f61f).
Fail to build gcc for commit [a18f61f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7d72d96efe1f576cbeea5e6c59724a8d47f476b9] * gcc.c-torture/execute/991216-3.c: Delete, duplicate of 991216-2.c.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7d72d96]
+---------------------------------------- Current commit hash: [7d72d96] ----------------------------------------+
Building GCC for commit [7d72d96]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7d72d96 * gcc.c-torture/execute/991216-3.c: Delete, duplicate of 991216-2.c.
HEAD is now at 7d72d96 * gcc.c-torture/execute/991216-3.c: Delete, duplicate of 991216-2.c.
Note: checking out '7d72d96'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7d72d96... * gcc.c-torture/execute/991216-3.c: Delete, duplicate of 991216-2.c.
Deleted branch temp-test-branch (was 7d72d96).
Fail to build gcc for commit [7d72d96], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3cc88877dcea023b6c704a81ad658e5d40e8e28c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3cc8887]
+---------------------------------------- Current commit hash: [3cc8887] ----------------------------------------+
Building GCC for commit [3cc8887]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3cc8887 Daily bump.
HEAD is now at 3cc8887 Daily bump.
Note: checking out '3cc8887'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3cc8887... Daily bump.
Deleted branch temp-test-branch (was 3cc8887).
Fail to build gcc for commit [3cc8887], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[eeab4d81a61970e9079dbd9a8033d13e0cc27980] tm.texi (TARGET_ASM_EMIT_UNWIND_LABEL): Add argument to indicate if this label is for eh.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eeab4d8]
+---------------------------------------- Current commit hash: [eeab4d8] ----------------------------------------+
Building GCC for commit [eeab4d8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eeab4d8 tm.texi (TARGET_ASM_EMIT_UNWIND_LABEL): Add argument to indicate if this label is for eh.
HEAD is now at eeab4d8 tm.texi (TARGET_ASM_EMIT_UNWIND_LABEL): Add argument to indicate if this label is for eh.
Note: checking out 'eeab4d8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eeab4d8... tm.texi (TARGET_ASM_EMIT_UNWIND_LABEL): Add argument to indicate if this label is for eh.
Deleted branch temp-test-branch (was eeab4d8).
Fail to build gcc for commit [eeab4d8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[324f9dfb93f95365b8a8b3374cd729476f4c9bcb] call.c, [...]: Fix comment formatting.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [324f9df]
+---------------------------------------- Current commit hash: [324f9df] ----------------------------------------+
Building GCC for commit [324f9df]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 324f9df call.c, [...]: Fix comment formatting.
HEAD is now at 324f9df call.c, [...]: Fix comment formatting.
Note: checking out '324f9df'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 324f9df... call.c, [...]: Fix comment formatting.
Deleted branch temp-test-branch (was 324f9df).
Fail to build gcc for commit [324f9df], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d2032ad8b85b15120621b0ce73711f1792da781f] reg-stack.c (nan): Rename to ...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d2032ad]
+---------------------------------------- Current commit hash: [d2032ad] ----------------------------------------+
Building GCC for commit [d2032ad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d2032ad reg-stack.c (nan): Rename to ...
HEAD is now at d2032ad reg-stack.c (nan): Rename to ...
Note: checking out 'd2032ad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d2032ad... reg-stack.c (nan): Rename to ...
Deleted branch temp-test-branch (was d2032ad).
Fail to build gcc for commit [d2032ad], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9839edf18db53d249327cd6cc128112684d13dfd] pa.c (legitimize_pic_address): Use UNSPEC_DLTIND14R to identify unspec used for loading address from DLT.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9839edf]
+---------------------------------------- Current commit hash: [9839edf] ----------------------------------------+
Building GCC for commit [9839edf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9839edf pa.c (legitimize_pic_address): Use UNSPEC_DLTIND14R to identify unspec used for loading address from DLT.
HEAD is now at 9839edf pa.c (legitimize_pic_address): Use UNSPEC_DLTIND14R to identify unspec used for loading address from DLT.
Note: checking out '9839edf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9839edf... pa.c (legitimize_pic_address): Use UNSPEC_DLTIND14R to identify unspec used for loading address from DLT.
Deleted branch temp-test-branch (was 9839edf).
Fail to build gcc for commit [9839edf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[19aec1956502bdf46a6c859ca0fa7e4666886bca] rtlanal.c (may_trap_p): Mark LTGT as trapping.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [19aec19]
+---------------------------------------- Current commit hash: [19aec19] ----------------------------------------+
Building GCC for commit [19aec19]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 19aec19 rtlanal.c (may_trap_p): Mark LTGT as trapping.
HEAD is now at 19aec19 rtlanal.c (may_trap_p): Mark LTGT as trapping.
Note: checking out '19aec19'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 19aec19... rtlanal.c (may_trap_p): Mark LTGT as trapping.
Deleted branch temp-test-branch (was 19aec19).
Fail to build gcc for commit [19aec19], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1900c4c6bfaf703c107d5a28e55b9525bbd875fa] GtkComponentPeer.java (requestFocus): Implement by calling gtkRequestFocus.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1900c4c]
+---------------------------------------- Current commit hash: [1900c4c] ----------------------------------------+
Building GCC for commit [1900c4c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1900c4c GtkComponentPeer.java (requestFocus): Implement by calling gtkRequestFocus.
HEAD is now at 1900c4c GtkComponentPeer.java (requestFocus): Implement by calling gtkRequestFocus.
Note: checking out '1900c4c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1900c4c... GtkComponentPeer.java (requestFocus): Implement by calling gtkRequestFocus.
Deleted branch temp-test-branch (was 1900c4c).
Fail to build gcc for commit [1900c4c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8754a0f6a09ab97feffc72de50d1bc462fcc7ec2] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8754a0f]
+---------------------------------------- Current commit hash: [8754a0f] ----------------------------------------+
Building GCC for commit [8754a0f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8754a0f Daily bump.
HEAD is now at 8754a0f Daily bump.
Note: checking out '8754a0f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8754a0f... Daily bump.
Deleted branch temp-test-branch (was 8754a0f).
Fail to build gcc for commit [8754a0f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ea0ece094959f7c8f9f180665faee4c57b830b4d] re PR fortran/15477 (gfortran should not have own version number)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ea0ece0]
+---------------------------------------- Current commit hash: [ea0ece0] ----------------------------------------+
Building GCC for commit [ea0ece0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ea0ece0 re PR fortran/15477 (gfortran should not have own version number)
HEAD is now at ea0ece0 re PR fortran/15477 (gfortran should not have own version number)
Note: checking out 'ea0ece0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ea0ece0... re PR fortran/15477 (gfortran should not have own version number)
Deleted branch temp-test-branch (was ea0ece0).
Fail to build gcc for commit [ea0ece0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[11670eebf3c9844fc34793789397fe05d60b4a77] io.c (check_format): As a GNU extension...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [11670ee]
+---------------------------------------- Current commit hash: [11670ee] ----------------------------------------+
Building GCC for commit [11670ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 11670ee io.c (check_format): As a GNU extension...
HEAD is now at 11670ee io.c (check_format): As a GNU extension...
Note: checking out '11670ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 11670ee... io.c (check_format): As a GNU extension...
Deleted branch temp-test-branch (was 11670ee).
Fail to build gcc for commit [11670ee], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[9ef313e31caf3e61eb3b1b0483249d1598bd73cf] std_complex.h (sin(const complex<_Tp>& __z)): Make this function return a value.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9ef313e]
+---------------------------------------- Current commit hash: [9ef313e] ----------------------------------------+
Building GCC for commit [9ef313e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9ef313e std_complex.h (sin(const complex<_Tp>& __z)): Make this function return a value.
HEAD is now at 9ef313e std_complex.h (sin(const complex<_Tp>& __z)): Make this function return a value.
Note: checking out '9ef313e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9ef313e... std_complex.h (sin(const complex<_Tp>& __z)): Make this function return a value.
Deleted branch temp-test-branch (was 9ef313e).
Fail to build gcc for commit [9ef313e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1acd15e832f4d16d642ab5568974f5b83e3ac3d8] compat-common.h (CINT, CDBL): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1acd15e]
+---------------------------------------- Current commit hash: [1acd15e] ----------------------------------------+
Building GCC for commit [1acd15e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1acd15e compat-common.h (CINT, CDBL): Define.
HEAD is now at 1acd15e compat-common.h (CINT, CDBL): Define.
Note: checking out '1acd15e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1acd15e... compat-common.h (CINT, CDBL): Define.
Deleted branch temp-test-branch (was 1acd15e).
Fail to build gcc for commit [1acd15e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ce068299f5f38bc06a50f08f751fc4c23288f36f] tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before return_stmt.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce06829]
+---------------------------------------- Current commit hash: [ce06829] ----------------------------------------+
Building GCC for commit [ce06829]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce06829 tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before return_stmt.
HEAD is now at ce06829 tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before return_stmt.
Note: checking out 'ce06829'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce06829... tree-cfg.c (tree_find_edge_insert_loc): Allow inserting before return_stmt.
Deleted branch temp-test-branch (was ce06829).
Fail to build gcc for commit [ce06829], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a80e0e831f9a087573c8be2f7fccc7f574c99595] 2004-06-18  Paolo Carlini  <pcarlini@suse.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a80e0e8]
+---------------------------------------- Current commit hash: [a80e0e8] ----------------------------------------+
Building GCC for commit [a80e0e8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a80e0e8 2004-06-18  Paolo Carlini  <pcarlini@suse.de>
HEAD is now at a80e0e8 2004-06-18  Paolo Carlini  <pcarlini@suse.de>
Note: checking out 'a80e0e8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a80e0e8... 2004-06-18  Paolo Carlini  <pcarlini@suse.de>
Deleted branch temp-test-branch (was a80e0e8).
Fail to build gcc for commit [a80e0e8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[90c28d48360b5975f18c0d56abbbed0f4407c328] ada-tree.def (DECL_STMT): Deleted.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [90c28d4]
+---------------------------------------- Current commit hash: [90c28d4] ----------------------------------------+
Building GCC for commit [90c28d4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 90c28d4 ada-tree.def (DECL_STMT): Deleted.
HEAD is now at 90c28d4 ada-tree.def (DECL_STMT): Deleted.
Note: checking out '90c28d4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 90c28d4... ada-tree.def (DECL_STMT): Deleted.
Deleted branch temp-test-branch (was 90c28d4).
Fail to build gcc for commit [90c28d4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f746161e4ffa1427f1b2c7b08fafaad3046a9222] re PR c++/14821 (Duplicate namespace alias declaration should not conflict)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f746161]
+---------------------------------------- Current commit hash: [f746161] ----------------------------------------+
Building GCC for commit [f746161]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f746161 re PR c++/14821 (Duplicate namespace alias declaration should not conflict)
HEAD is now at f746161 re PR c++/14821 (Duplicate namespace alias declaration should not conflict)
Note: checking out 'f746161'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f746161... re PR c++/14821 (Duplicate namespace alias declaration should not conflict)
Deleted branch temp-test-branch (was f746161).
Fail to build gcc for commit [f746161], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cfa4cb00a7b0b37cf614e824482260ebeb9ce288] tree-ssa-dom.c (tree_ssa_dominator_optimize): Free nonzero_vars at the end of the function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfa4cb0]
+---------------------------------------- Current commit hash: [cfa4cb0] ----------------------------------------+
Building GCC for commit [cfa4cb0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfa4cb0 tree-ssa-dom.c (tree_ssa_dominator_optimize): Free nonzero_vars at the end of the function.
HEAD is now at cfa4cb0 tree-ssa-dom.c (tree_ssa_dominator_optimize): Free nonzero_vars at the end of the function.
Note: checking out 'cfa4cb0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfa4cb0... tree-ssa-dom.c (tree_ssa_dominator_optimize): Free nonzero_vars at the end of the function.
Deleted branch temp-test-branch (was cfa4cb0).
Fail to build gcc for commit [cfa4cb0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[794c3bee303760a10e5442d23cda23b6c71ed5ea] Add extension directory contents to the class path.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [794c3be]
+---------------------------------------- Current commit hash: [794c3be] ----------------------------------------+
Building GCC for commit [794c3be]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 794c3be Add extension directory contents to the class path.
HEAD is now at 794c3be Add extension directory contents to the class path.
Note: checking out '794c3be'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 794c3be... Add extension directory contents to the class path.
Deleted branch temp-test-branch (was 794c3be).
Fail to build gcc for commit [794c3be], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e804f8229005019d5907146aaee4ff48df081535] cp-mudflap.c (mflang_flush_calls): Fix thinkos resulting from 2004-06-23 change.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e804f82]
+---------------------------------------- Current commit hash: [e804f82] ----------------------------------------+
Building GCC for commit [e804f82]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e804f82 cp-mudflap.c (mflang_flush_calls): Fix thinkos resulting from 2004-06-23 change.
HEAD is now at e804f82 cp-mudflap.c (mflang_flush_calls): Fix thinkos resulting from 2004-06-23 change.
Note: checking out 'e804f82'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e804f82... cp-mudflap.c (mflang_flush_calls): Fix thinkos resulting from 2004-06-23 change.
Deleted branch temp-test-branch (was e804f82).
Fail to build gcc for commit [e804f82], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bf83cc10ca01f0da835a13d9bda9ca52cd251bea] i386-ssetype-1.c: Remove XFAIL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bf83cc1]
+---------------------------------------- Current commit hash: [bf83cc1] ----------------------------------------+
Building GCC for commit [bf83cc1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bf83cc1 i386-ssetype-1.c: Remove XFAIL.
HEAD is now at bf83cc1 i386-ssetype-1.c: Remove XFAIL.
Note: checking out 'bf83cc1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bf83cc1... i386-ssetype-1.c: Remove XFAIL.
Deleted branch temp-test-branch (was bf83cc1).
Fail to build gcc for commit [bf83cc1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fc55c95e84602db63c585c47a2793d51aeb108aa] * doc/sourcebuild.texi: Mention libbanshee and libmudflap.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fc55c95]
+---------------------------------------- Current commit hash: [fc55c95] ----------------------------------------+
Building GCC for commit [fc55c95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fc55c95 * doc/sourcebuild.texi: Mention libbanshee and libmudflap.
HEAD is now at fc55c95 * doc/sourcebuild.texi: Mention libbanshee and libmudflap.
Note: checking out 'fc55c95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fc55c95... * doc/sourcebuild.texi: Mention libbanshee and libmudflap.
Deleted branch temp-test-branch (was fc55c95).
Fail to build gcc for commit [fc55c95], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f75ce96a7c4673b18100bbd9d0f6b8c382901b68] re PR target/15653 (Gcc 3.4 ICE on valid code)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f75ce96]
+---------------------------------------- Current commit hash: [f75ce96] ----------------------------------------+
Building GCC for commit [f75ce96]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f75ce96 re PR target/15653 (Gcc 3.4 ICE on valid code)
HEAD is now at f75ce96 re PR target/15653 (Gcc 3.4 ICE on valid code)
Note: checking out 'f75ce96'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f75ce96... re PR target/15653 (Gcc 3.4 ICE on valid code)
Deleted branch temp-test-branch (was f75ce96).
Fail to build gcc for commit [f75ce96], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f1b90a04e0f8e682a4053b8e0d06c6afb1ee1219] decl.c (grokdeclarator): Restore error messages about __thread.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f1b90a0]
+---------------------------------------- Current commit hash: [f1b90a0] ----------------------------------------+
Building GCC for commit [f1b90a0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f1b90a0 decl.c (grokdeclarator): Restore error messages about __thread.
HEAD is now at f1b90a0 decl.c (grokdeclarator): Restore error messages about __thread.
Note: checking out 'f1b90a0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f1b90a0... decl.c (grokdeclarator): Restore error messages about __thread.
Deleted branch temp-test-branch (was f1b90a0).
Fail to build gcc for commit [f1b90a0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[40bc204a9b045fb4ddcd4412dddf93cdea720a2e] Revert previous inintended changes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [40bc204]
+---------------------------------------- Current commit hash: [40bc204] ----------------------------------------+
Building GCC for commit [40bc204]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 40bc204 Revert previous inintended changes.
HEAD is now at 40bc204 Revert previous inintended changes.
Note: checking out '40bc204'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 40bc204... Revert previous inintended changes.
Deleted branch temp-test-branch (was 40bc204).
Fail to build gcc for commit [40bc204], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6e6e49b10f94aaf10b6e9224e07130ab2d818f14] tree-pretty-print.c (dump_generic_node, [...]): Don't look at TYPE_METHODS unless RECORD_TYPE or UNION_TYPE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6e6e49b]
+---------------------------------------- Current commit hash: [6e6e49b] ----------------------------------------+
Building GCC for commit [6e6e49b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6e6e49b tree-pretty-print.c (dump_generic_node, [...]): Don't look at TYPE_METHODS unless RECORD_TYPE or UNION_TYPE.
HEAD is now at 6e6e49b tree-pretty-print.c (dump_generic_node, [...]): Don't look at TYPE_METHODS unless RECORD_TYPE or UNION_TYPE.
Note: checking out '6e6e49b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6e6e49b... tree-pretty-print.c (dump_generic_node, [...]): Don't look at TYPE_METHODS unless RECORD_TYPE or UNION_TYPE.
Deleted branch temp-test-branch (was 6e6e49b).
Fail to build gcc for commit [6e6e49b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[13f05fd0df4108bbc4de0c6f40d949c975122ea5] configure.ac: Remove --enable-tree-browser option.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [13f05fd]
+---------------------------------------- Current commit hash: [13f05fd] ----------------------------------------+
Building GCC for commit [13f05fd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 13f05fd configure.ac: Remove --enable-tree-browser option.
HEAD is now at 13f05fd configure.ac: Remove --enable-tree-browser option.
Note: checking out '13f05fd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 13f05fd... configure.ac: Remove --enable-tree-browser option.
Deleted branch temp-test-branch (was 13f05fd).
Fail to build gcc for commit [13f05fd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[abe0d774cf58aa24fd3d9f73c2ac913e7dc65e03] loop-iv.c (iv_analyze, [...]): Support for identifying shifts of induction variable.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [abe0d77]
+---------------------------------------- Current commit hash: [abe0d77] ----------------------------------------+
Building GCC for commit [abe0d77]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: abe0d77 loop-iv.c (iv_analyze, [...]): Support for identifying shifts of induction variable.
HEAD is now at abe0d77 loop-iv.c (iv_analyze, [...]): Support for identifying shifts of induction variable.
Note: checking out 'abe0d77'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at abe0d77... loop-iv.c (iv_analyze, [...]): Support for identifying shifts of induction variable.
Deleted branch temp-test-branch (was abe0d77).
Fail to build gcc for commit [abe0d77], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[159d522418cb362957019814c5b6de0035f551cd] Makefile.in: Regenerate with automake 1.8.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [159d522]
+---------------------------------------- Current commit hash: [159d522] ----------------------------------------+
Building GCC for commit [159d522]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 159d522 Makefile.in: Regenerate with automake 1.8.5.
HEAD is now at 159d522 Makefile.in: Regenerate with automake 1.8.5.
Note: checking out '159d522'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 159d522... Makefile.in: Regenerate with automake 1.8.5.
Deleted branch temp-test-branch (was 159d522).
Fail to build gcc for commit [159d522], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d522060b39e1627ebc07734d756b27637c957c53] c-common.c (expand_unordered_cmp): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d522060]
+---------------------------------------- Current commit hash: [d522060] ----------------------------------------+
Building GCC for commit [d522060]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d522060 c-common.c (expand_unordered_cmp): Delete.
HEAD is now at d522060 c-common.c (expand_unordered_cmp): Delete.
Note: checking out 'd522060'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d522060... c-common.c (expand_unordered_cmp): Delete.
Deleted branch temp-test-branch (was d522060).
Fail to build gcc for commit [d522060], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d962e073a077fe4066b937412d0f6d435f2f4f92] hash_map: Trivial formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d962e07]
+---------------------------------------- Current commit hash: [d962e07] ----------------------------------------+
Building GCC for commit [d962e07]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d962e07 hash_map: Trivial formatting fixes.
HEAD is now at d962e07 hash_map: Trivial formatting fixes.
Note: checking out 'd962e07'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d962e07... hash_map: Trivial formatting fixes.
Deleted branch temp-test-branch (was d962e07).
Fail to build gcc for commit [d962e07], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[60cadaea5e337dfe59c9c42b4d79333520bb931d] * crontab: Add GCC 3.5 snapshots, currenty run on Sundays.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [60cadae]
+---------------------------------------- Current commit hash: [60cadae] ----------------------------------------+
Building GCC for commit [60cadae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 60cadae * crontab: Add GCC 3.5 snapshots, currenty run on Sundays.
HEAD is now at 60cadae * crontab: Add GCC 3.5 snapshots, currenty run on Sundays.
Note: checking out '60cadae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 60cadae... * crontab: Add GCC 3.5 snapshots, currenty run on Sundays.
Deleted branch temp-test-branch (was 60cadae).
Fail to build gcc for commit [60cadae], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b1243dd57bc4692e15fa8eaa8e6e566aaa65d289] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b1243dd]
+---------------------------------------- Current commit hash: [b1243dd] ----------------------------------------+
Building GCC for commit [b1243dd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b1243dd Daily bump.
HEAD is now at b1243dd Daily bump.
Note: checking out 'b1243dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b1243dd... Daily bump.
Deleted branch temp-test-branch (was b1243dd).
Fail to build gcc for commit [b1243dd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c8619b9056bcb98633301e3c13abb42fa4e027fa] * doc/extend.texi (Function Attributes): Alphabetize.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c8619b9]
+---------------------------------------- Current commit hash: [c8619b9] ----------------------------------------+
Building GCC for commit [c8619b9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c8619b9 * doc/extend.texi (Function Attributes): Alphabetize.
HEAD is now at c8619b9 * doc/extend.texi (Function Attributes): Alphabetize.
Note: checking out 'c8619b9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c8619b9... * doc/extend.texi (Function Attributes): Alphabetize.
Deleted branch temp-test-branch (was c8619b9).
Fail to build gcc for commit [c8619b9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[28bad6d14ded53978deea30a09d2a27b0cf35188] m68k.c (CONST_METHOD): Add MVZ, MVS.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [28bad6d]
+---------------------------------------- Current commit hash: [28bad6d] ----------------------------------------+
Building GCC for commit [28bad6d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 28bad6d m68k.c (CONST_METHOD): Add MVZ, MVS.
HEAD is now at 28bad6d m68k.c (CONST_METHOD): Add MVZ, MVS.
Note: checking out '28bad6d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 28bad6d... m68k.c (CONST_METHOD): Add MVZ, MVS.
Deleted branch temp-test-branch (was 28bad6d).
Fail to build gcc for commit [28bad6d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[54b4ba60f20d3870a79467caa3b604971225d388] re PR fortran/13930 (derived type with intent(in) attribute not accepted)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [54b4ba6]
+---------------------------------------- Current commit hash: [54b4ba6] ----------------------------------------+
Building GCC for commit [54b4ba6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 54b4ba6 re PR fortran/13930 (derived type with intent(in) attribute not accepted)
HEAD is now at 54b4ba6 re PR fortran/13930 (derived type with intent(in) attribute not accepted)
Note: checking out '54b4ba6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 54b4ba6... re PR fortran/13930 (derived type with intent(in) attribute not accepted)
Deleted branch temp-test-branch (was 54b4ba6).
Fail to build gcc for commit [54b4ba6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a40de696ac0207908f22b2b50330e22e86e45329] fold-const.c (fold_checksum_tree <case 't'>): Only look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a40de69]
+---------------------------------------- Current commit hash: [a40de69] ----------------------------------------+
Building GCC for commit [a40de69]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a40de69 fold-const.c (fold_checksum_tree <case 't'>): Only look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.
HEAD is now at a40de69 fold-const.c (fold_checksum_tree <case 't'>): Only look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.
Note: checking out 'a40de69'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a40de69... fold-const.c (fold_checksum_tree <case 't'>): Only look at TREE_VALUES if the EXPR is an ENUMERAL_TYPE.
Deleted branch temp-test-branch (was a40de69).
Fail to build gcc for commit [a40de69], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3b56276ea5044cf66b9c03b5702813399f9e3746] abi.html: Update links.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3b56276]
+---------------------------------------- Current commit hash: [3b56276] ----------------------------------------+
Building GCC for commit [3b56276]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3b56276 abi.html: Update links.
HEAD is now at 3b56276 abi.html: Update links.
Note: checking out '3b56276'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3b56276... abi.html: Update links.
Deleted branch temp-test-branch (was 3b56276).
Fail to build gcc for commit [3b56276], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0fb4f4b86ab649201b02f5ebac88b17a1ab1eb1a] target-supports.exp (check_iconv_available): Fix fallout from 2004-05-28 patch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0fb4f4b]
+---------------------------------------- Current commit hash: [0fb4f4b] ----------------------------------------+
Building GCC for commit [0fb4f4b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0fb4f4b target-supports.exp (check_iconv_available): Fix fallout from 2004-05-28 patch.
HEAD is now at 0fb4f4b target-supports.exp (check_iconv_available): Fix fallout from 2004-05-28 patch.
Note: checking out '0fb4f4b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0fb4f4b... target-supports.exp (check_iconv_available): Fix fallout from 2004-05-28 patch.
Deleted branch temp-test-branch (was 0fb4f4b).
Fail to build gcc for commit [0fb4f4b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bb9a388dad84486a075d822e4bed05a74faab780] * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): 	Use DECL_UID for the key, not DECL_ASSEMBLER_NAME. 	(cgraph_function_possibly_inlined_p): Use the decl itself for 	the key, not DECL_ASSEMBLER_NAME. 	(change_decl_assembler_name): No need to muck with the hash tables. 	(cgraph_node_for_identifier, cgraph_varpool_node_for_identifier): 	Delete. 	* cgraphunit.c (cgraph_mark_inline_edge): Use the decl itself 	for the key, not DECL_ASSEMBLER_NAME. 	* cgraph.h: Remove prototypes of deleted functions. 	* varasm.c (mark_referenced): Just set TREE_SYMBOL_REFERENCED. 	(mark_decl_referenced): New function. 	* tree.h: Prototype mark_decl_referenced. 	* final.c (output_addr_const) <case SYMBOL_REF>: Call 	mark_decl_referenced before assemble_name. 	* c-decl.c (finish_decl): Use mark_decl_referenced. cp: 	* decl.c (cp_finish_decl): Use mark_decl_referenced. 	* decl2.c (maybe_make_one_only): Likewise. 	* method.c (use_thunk): Likewise.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bb9a388]
+---------------------------------------- Current commit hash: [bb9a388] ----------------------------------------+
Building GCC for commit [bb9a388]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bb9a388 * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): 	Use DECL_UID for the key, not DECL_ASSEMBLER_NAME. 	(cgraph_function_possibly_inlined_p): Use the decl itself for 	the key, not DECL_ASSEMBLER_NAME. 	(change_decl_assembler_name): No need to muck with the hash tables. 	(cgraph_node_for_identifier, cgraph_varpool_node_for_identifier): 	Delete. 	* cgraphunit.c (cgraph_mark_inline_edge): Use the decl itself 	for the key, not DECL_ASSEMBLER_NAME. 	* cgraph.h: Remove prototypes of deleted functions. 	* varasm.c (mark_referenced): Just set TREE_SYMBOL_REFERENCED. 	(mark_decl_referenced): New function. 	* tree.h: Prototype mark_decl_referenced. 	* final.c (output_addr_const) <case SYMBOL_REF>: Call 	mark_decl_referenced before assemble_name. 	* c-decl.c (finish_decl): Use mark_decl_referenced. cp: 	* decl.c (cp_finish_decl): Use mark_decl_referenced. 	* decl2.c (maybe_make_one_only): Likewise. 	* method.c (use_thunk): Likewise.
HEAD is now at bb9a388 * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node)
Note: checking out 'bb9a388'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bb9a388... * cgraph.c (hash_node, eq_node, cgraph_node, cgraph_remove_node) 	(cgraph_varpool_hash_node, eq_cgraph_varpool_node) 	(cgraph_varpool_node): 	Use DECL_UID for the key, not DECL_ASSEMBLER_NAME. 	(cgraph_function_possibly_inlined_p): Use the decl itself for 	the key, not DECL_ASSEMBLER_NAME. 	(change_decl_assembler_name): No need to muck with the hash tables. 	(cgraph_node_for_identifier, cgraph_varpool_node_for_identifier): 	Delete. 	* cgraphunit.c (cgraph_mark_inline_edge): Use the decl itself 	for the key, not DECL_ASSEMBLER_NAME. 	* cgraph.h: Remove prototypes of deleted functions. 	* varasm.c (mark_referenced): Just set TREE_SYMBOL_REFERENCED. 	(mark_decl_referenced): New function. 	* tree.h: Prototype mark_decl_referenced. 	* final.c (output_addr_const) <case SYMBOL_REF>: Call 	mark_decl_referenced before assemble_name. 	* c-decl.c (finish_decl): Use mark_decl_referenced. cp: 	* decl.c (cp_finish_decl): Use mark_decl_referenced. 	* decl2.c (maybe_make_one_only): Likewise. 	* method.c (use_thunk): Likewise.
Deleted branch temp-test-branch (was bb9a388).
Fail to build gcc for commit [bb9a388], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a13c75880a4f9da78ef498f8cf7f006b314aa35c] PR fortran/15665 Fixup ChangeLog from my previous commit
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a13c758]
+---------------------------------------- Current commit hash: [a13c758] ----------------------------------------+
Building GCC for commit [a13c758]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a13c758 PR fortran/15665 Fixup ChangeLog from my previous commit
HEAD is now at a13c758 PR fortran/15665 Fixup ChangeLog from my previous commit
Note: checking out 'a13c758'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a13c758... PR fortran/15665 Fixup ChangeLog from my previous commit
Deleted branch temp-test-branch (was a13c758).
Fail to build gcc for commit [a13c758], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[34eb8991ffc7d23522a2764821e03e0a774a2979] tree-into-ssa.c (prepare_operand_for_rename): New argument is_use.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [34eb899]
+---------------------------------------- Current commit hash: [34eb899] ----------------------------------------+
Building GCC for commit [34eb899]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 34eb899 tree-into-ssa.c (prepare_operand_for_rename): New argument is_use.
HEAD is now at 34eb899 tree-into-ssa.c (prepare_operand_for_rename): New argument is_use.
Note: checking out '34eb899'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 34eb899... tree-into-ssa.c (prepare_operand_for_rename): New argument is_use.
Deleted branch temp-test-branch (was 34eb899).
Fail to build gcc for commit [34eb899], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c3e8c6b83815b90a3c5e578909205757f2ab170a] * trans-types.c: Fix spelling & layout in comments.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c3e8c6b]
+---------------------------------------- Current commit hash: [c3e8c6b] ----------------------------------------+
Building GCC for commit [c3e8c6b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c3e8c6b * trans-types.c: Fix spelling & layout in comments.
HEAD is now at c3e8c6b * trans-types.c: Fix spelling & layout in comments.
Note: checking out 'c3e8c6b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c3e8c6b... * trans-types.c: Fix spelling & layout in comments.
Deleted branch temp-test-branch (was c3e8c6b).
Fail to build gcc for commit [c3e8c6b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1ffae6283039532568e776e7a55d07b05c7aa62c] * tree-mudflap.c: Formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ffae62]
+---------------------------------------- Current commit hash: [1ffae62] ----------------------------------------+
Building GCC for commit [1ffae62]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ffae62 * tree-mudflap.c: Formatting fixes.
HEAD is now at 1ffae62 * tree-mudflap.c: Formatting fixes.
Note: checking out '1ffae62'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ffae62... * tree-mudflap.c: Formatting fixes.
Deleted branch temp-test-branch (was 1ffae62).
Fail to build gcc for commit [1ffae62], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[67fc0c0f596944a4bc88cb8d8061bf4c8753c03f] Add PR number in:
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [67fc0c0]
+---------------------------------------- Current commit hash: [67fc0c0] ----------------------------------------+
Building GCC for commit [67fc0c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 67fc0c0 Add PR number in:
HEAD is now at 67fc0c0 Add PR number in:
Note: checking out '67fc0c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 67fc0c0... Add PR number in:
Deleted branch temp-test-branch (was 67fc0c0).
Fail to build gcc for commit [67fc0c0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d05aa0afd8969e6c6e58f63795ffb0ffd89b5378] re PR target/15301 ([3.3/3.4 only] gcc does not pass __m128 arguments correctly)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d05aa0a]
+---------------------------------------- Current commit hash: [d05aa0a] ----------------------------------------+
Building GCC for commit [d05aa0a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d05aa0a re PR target/15301 ([3.3/3.4 only] gcc does not pass __m128 arguments correctly)
HEAD is now at d05aa0a re PR target/15301 ([3.3/3.4 only] gcc does not pass __m128 arguments correctly)
Note: checking out 'd05aa0a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d05aa0a... re PR target/15301 ([3.3/3.4 only] gcc does not pass __m128 arguments correctly)
Deleted branch temp-test-branch (was d05aa0a).
Fail to build gcc for commit [d05aa0a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3bcb4e37d15296c7aad59f8591876ccfa28f6c31] gimplify.c (gimplify_modify_expr): Don't force a temporary of an aggregate_value_p type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3bcb4e3]
+---------------------------------------- Current commit hash: [3bcb4e3] ----------------------------------------+
Building GCC for commit [3bcb4e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3bcb4e3 gimplify.c (gimplify_modify_expr): Don't force a temporary of an aggregate_value_p type.
HEAD is now at 3bcb4e3 gimplify.c (gimplify_modify_expr): Don't force a temporary of an aggregate_value_p type.
Note: checking out '3bcb4e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3bcb4e3... gimplify.c (gimplify_modify_expr): Don't force a temporary of an aggregate_value_p type.
Deleted branch temp-test-branch (was 3bcb4e3).
Fail to build gcc for commit [3bcb4e3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b] function.c (free_after_compilation): Do not free computed_goto_common*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb4e1c0]
+---------------------------------------- Current commit hash: [eb4e1c0] ----------------------------------------+
Building GCC for commit [eb4e1c0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb4e1c0 function.c (free_after_compilation): Do not free computed_goto_common*.
HEAD is now at eb4e1c0 function.c (free_after_compilation): Do not free computed_goto_common*.
Note: checking out 'eb4e1c0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb4e1c0... function.c (free_after_compilation): Do not free computed_goto_common*.
Deleted branch temp-test-branch (was eb4e1c0).
Fail to build gcc for commit [eb4e1c0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[811d7e77459bb2926e5928b2ad47caf6eaf258fc] fix conflict markers
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [811d7e7]
+---------------------------------------- Current commit hash: [811d7e7] ----------------------------------------+
Building GCC for commit [811d7e7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 811d7e7 fix conflict markers
HEAD is now at 811d7e7 fix conflict markers
Note: checking out '811d7e7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 811d7e7... fix conflict markers
Deleted branch temp-test-branch (was 811d7e7).
Fail to build gcc for commit [811d7e7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b7e6a6b3f511cc8aabb80a4460c417fcac90c2e7] trans-decl.c (gfc_get_extern_function_decl): Set DECL_IS_PURE only for functions.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b7e6a6b]
+---------------------------------------- Current commit hash: [b7e6a6b] ----------------------------------------+
Building GCC for commit [b7e6a6b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b7e6a6b trans-decl.c (gfc_get_extern_function_decl): Set DECL_IS_PURE only for functions.
HEAD is now at b7e6a6b trans-decl.c (gfc_get_extern_function_decl): Set DECL_IS_PURE only for functions.
Note: checking out 'b7e6a6b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b7e6a6b... trans-decl.c (gfc_get_extern_function_decl): Set DECL_IS_PURE only for functions.
Deleted branch temp-test-branch (was b7e6a6b).
Fail to build gcc for commit [b7e6a6b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[498c0f2757190a22826576174616ab2403e2f4f6] re PR c++/14791 (13070 does not fix -Wformat with fprintf)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [498c0f2]
+---------------------------------------- Current commit hash: [498c0f2] ----------------------------------------+
Building GCC for commit [498c0f2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 498c0f2 re PR c++/14791 (13070 does not fix -Wformat with fprintf)
HEAD is now at 498c0f2 re PR c++/14791 (13070 does not fix -Wformat with fprintf)
Note: checking out '498c0f2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 498c0f2... re PR c++/14791 (13070 does not fix -Wformat with fprintf)
Deleted branch temp-test-branch (was 498c0f2).
Fail to build gcc for commit [498c0f2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8e657c46b4a82b1fc4e4487fad9d9e9be07da2bf] Fix function name in last entry.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8e657c4]
+---------------------------------------- Current commit hash: [8e657c4] ----------------------------------------+
Building GCC for commit [8e657c4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8e657c4 Fix function name in last entry.
HEAD is now at 8e657c4 Fix function name in last entry.
Note: checking out '8e657c4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8e657c4... Fix function name in last entry.
Deleted branch temp-test-branch (was 8e657c4).
Fail to build gcc for commit [8e657c4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6b045785002561aa9bef6a0e9654b385e04de5e0] arm.c (arm_default_short_enums): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6b04578]
+---------------------------------------- Current commit hash: [6b04578] ----------------------------------------+
Building GCC for commit [6b04578]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6b04578 arm.c (arm_default_short_enums): New function.
HEAD is now at 6b04578 arm.c (arm_default_short_enums): New function.
Note: checking out '6b04578'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6b04578... arm.c (arm_default_short_enums): New function.
Deleted branch temp-test-branch (was 6b04578).
Fail to build gcc for commit [6b04578], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[322c24252ef6bd43aa646c7a7ebf015939e26991] * random.c (random_seed): Use correct variable.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [322c242]
+---------------------------------------- Current commit hash: [322c242] ----------------------------------------+
Building GCC for commit [322c242]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 322c242 * random.c (random_seed): Use correct variable.
HEAD is now at 322c242 * random.c (random_seed): Use correct variable.
Note: checking out '322c242'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 322c242... * random.c (random_seed): Use correct variable.
Deleted branch temp-test-branch (was 322c242).
Fail to build gcc for commit [322c242], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0e60562abe8389976483f16432c90a2c8226db77] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0e60562]
+---------------------------------------- Current commit hash: [0e60562] ----------------------------------------+
Building GCC for commit [0e60562]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0e60562 Daily bump.
HEAD is now at 0e60562 Daily bump.
Note: checking out '0e60562'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0e60562... Daily bump.
Deleted branch temp-test-branch (was 0e60562).
Fail to build gcc for commit [0e60562], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0fb2ea01912a8a8859cb53caa6a7e33b9b8c9333] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0fb2ea0]
+---------------------------------------- Current commit hash: [0fb2ea0] ----------------------------------------+
Building GCC for commit [0fb2ea0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0fb2ea0 [multiple changes]
HEAD is now at 0fb2ea0 [multiple changes]
Note: checking out '0fb2ea0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0fb2ea0... [multiple changes]
Deleted branch temp-test-branch (was 0fb2ea0).
Fail to build gcc for commit [0fb2ea0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0fe0c61499096286867bcee0df3dfbba3d3f7cba] re PR middle-end/15825 (if-cvt optimisation patch noce_try_sign_mask breaks apple-ppc-darwin port)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0fe0c61]
+---------------------------------------- Current commit hash: [0fe0c61] ----------------------------------------+
Building GCC for commit [0fe0c61]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0fe0c61 re PR middle-end/15825 (if-cvt optimisation patch noce_try_sign_mask breaks apple-ppc-darwin port)
HEAD is now at 0fe0c61 re PR middle-end/15825 (if-cvt optimisation patch noce_try_sign_mask breaks apple-ppc-darwin port)
Note: checking out '0fe0c61'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0fe0c61... re PR middle-end/15825 (if-cvt optimisation patch noce_try_sign_mask breaks apple-ppc-darwin port)
Deleted branch temp-test-branch (was 0fe0c61).
Fail to build gcc for commit [0fe0c61], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e56261981bc8ad88515fda18d846bf61bf6c2353] ddg.h, [...]: New files.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e562619]
+---------------------------------------- Current commit hash: [e562619] ----------------------------------------+
Building GCC for commit [e562619]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e562619 ddg.h, [...]: New files.
HEAD is now at e562619 ddg.h, [...]: New files.
Note: checking out 'e562619'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e562619... ddg.h, [...]: New files.
Deleted branch temp-test-branch (was e562619).
Fail to build gcc for commit [e562619], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4adf3e34b2ece6f4caac9d42dd4f636b8fc342b3] * config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_EABI__.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4adf3e3]
+---------------------------------------- Current commit hash: [4adf3e3] ----------------------------------------+
Building GCC for commit [4adf3e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4adf3e3 * config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_EABI__.
HEAD is now at 4adf3e3 * config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_EABI__.
Note: checking out '4adf3e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4adf3e3... * config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __ARM_EABI__.
Deleted branch temp-test-branch (was 4adf3e3).
Fail to build gcc for commit [4adf3e3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e370de6e30762a5fb49cd39832c6ed98a60bd82b] cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e370de6]
+---------------------------------------- Current commit hash: [e370de6] ----------------------------------------+
Building GCC for commit [e370de6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e370de6 cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
HEAD is now at e370de6 cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
Note: checking out 'e370de6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e370de6... cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
Deleted branch temp-test-branch (was e370de6).
Fail to build gcc for commit [e370de6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[571325db5977ad68205f88d6e4d86b1ffaeaaeec] re PR tree-optimization/14466 (missed PHI optimization (different types))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [571325d]
+---------------------------------------- Current commit hash: [571325d] ----------------------------------------+
Building GCC for commit [571325d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 571325d re PR tree-optimization/14466 (missed PHI optimization (different types))
HEAD is now at 571325d re PR tree-optimization/14466 (missed PHI optimization (different types))
Note: checking out '571325d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 571325d... re PR tree-optimization/14466 (missed PHI optimization (different types))
Deleted branch temp-test-branch (was 571325d).
Fail to build gcc for commit [571325d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a0543ff31cf117a8b2bcb7f8da9a69495d9f9412] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a0543ff]
+---------------------------------------- Current commit hash: [a0543ff] ----------------------------------------+
Building GCC for commit [a0543ff]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a0543ff Daily bump.
HEAD is now at a0543ff Daily bump.
Note: checking out 'a0543ff'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a0543ff... Daily bump.
Deleted branch temp-test-branch (was a0543ff).
Fail to build gcc for commit [a0543ff], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cb44ab824bd0902002bbf1caa66c05b56829630c] decl.c (variable_decl): Always apply default initializer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cb44ab8]
+---------------------------------------- Current commit hash: [cb44ab8] ----------------------------------------+
Building GCC for commit [cb44ab8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cb44ab8 decl.c (variable_decl): Always apply default initializer.
HEAD is now at cb44ab8 decl.c (variable_decl): Always apply default initializer.
Note: checking out 'cb44ab8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cb44ab8... decl.c (variable_decl): Always apply default initializer.
Deleted branch temp-test-branch (was cb44ab8).
Fail to build gcc for commit [cb44ab8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[347b63a2c9e48740e8d79c9be8d620d22e1eb40f] linux.h (ASM_PREFERRED_EH_DATA_FORMAT): Remove definition.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [347b63a]
+---------------------------------------- Current commit hash: [347b63a] ----------------------------------------+
Building GCC for commit [347b63a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 347b63a linux.h (ASM_PREFERRED_EH_DATA_FORMAT): Remove definition.
HEAD is now at 347b63a linux.h (ASM_PREFERRED_EH_DATA_FORMAT): Remove definition.
Note: checking out '347b63a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 347b63a... linux.h (ASM_PREFERRED_EH_DATA_FORMAT): Remove definition.
Deleted branch temp-test-branch (was 347b63a).
Fail to build gcc for commit [347b63a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[be1ba3d170d2119394c4700e320240264513d64e] * gimplify.c (gimplify_body): Watch for body vanishing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [be1ba3d]
+---------------------------------------- Current commit hash: [be1ba3d] ----------------------------------------+
Building GCC for commit [be1ba3d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: be1ba3d * gimplify.c (gimplify_body): Watch for body vanishing.
HEAD is now at be1ba3d * gimplify.c (gimplify_body): Watch for body vanishing.
Note: checking out 'be1ba3d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at be1ba3d... * gimplify.c (gimplify_body): Watch for body vanishing.
Deleted branch temp-test-branch (was be1ba3d).
Fail to build gcc for commit [be1ba3d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3c7ad43e58196cebcb3e912b4c35b38bf74a1e19] arm.c (thumb_force_lr_save): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3c7ad43]
+---------------------------------------- Current commit hash: [3c7ad43] ----------------------------------------+
Building GCC for commit [3c7ad43]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3c7ad43 arm.c (thumb_force_lr_save): New function.
HEAD is now at 3c7ad43 arm.c (thumb_force_lr_save): New function.
Note: checking out '3c7ad43'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3c7ad43... arm.c (thumb_force_lr_save): New function.
Deleted branch temp-test-branch (was 3c7ad43).
Fail to build gcc for commit [3c7ad43], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[62d1db179e700aeb45e805aa81de54036745f93e] Make-lang.in (cp/lex.o): Do not depend on cp/lex.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [62d1db1]
+---------------------------------------- Current commit hash: [62d1db1] ----------------------------------------+
Building GCC for commit [62d1db1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 62d1db1 Make-lang.in (cp/lex.o): Do not depend on cp/lex.h.
HEAD is now at 62d1db1 Make-lang.in (cp/lex.o): Do not depend on cp/lex.h.
Note: checking out '62d1db1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 62d1db1... Make-lang.in (cp/lex.o): Do not depend on cp/lex.h.
Deleted branch temp-test-branch (was 62d1db1).
Fail to build gcc for commit [62d1db1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0c1a1ecd8062d98df568b076d71868cb022ccc50] re PR c++/14668 (no warning anymore for reevaluation of declaration)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0c1a1ec]
+---------------------------------------- Current commit hash: [0c1a1ec] ----------------------------------------+
Building GCC for commit [0c1a1ec]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0c1a1ec re PR c++/14668 (no warning anymore for reevaluation of declaration)
HEAD is now at 0c1a1ec re PR c++/14668 (no warning anymore for reevaluation of declaration)
Note: checking out '0c1a1ec'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0c1a1ec... re PR c++/14668 (no warning anymore for reevaluation of declaration)
Deleted branch temp-test-branch (was 0c1a1ec).
Fail to build gcc for commit [0c1a1ec], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5a4db26d013a854edefdd4bb34d01a86f4b43968] std_bitset.h: Minor formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5a4db26]
+---------------------------------------- Current commit hash: [5a4db26] ----------------------------------------+
Building GCC for commit [5a4db26]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5a4db26 std_bitset.h: Minor formatting fixes.
HEAD is now at 5a4db26 std_bitset.h: Minor formatting fixes.
Note: checking out '5a4db26'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5a4db26... std_bitset.h: Minor formatting fixes.
Deleted branch temp-test-branch (was 5a4db26).
Fail to build gcc for commit [5a4db26], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f1c3e0a60cd1fd42147cb79c8ee19d6a0f224303] configure.in: Support --enable-version-specific-runtime-libs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f1c3e0a]
+---------------------------------------- Current commit hash: [f1c3e0a] ----------------------------------------+
Building GCC for commit [f1c3e0a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f1c3e0a configure.in: Support --enable-version-specific-runtime-libs.
HEAD is now at f1c3e0a configure.in: Support --enable-version-specific-runtime-libs.
Note: checking out 'f1c3e0a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f1c3e0a... configure.in: Support --enable-version-specific-runtime-libs.
Deleted branch temp-test-branch (was f1c3e0a).
Fail to build gcc for commit [f1c3e0a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2c6b27c369a9d2ab7f7116add931089b9e8f7b69] i386.c (construct_container): Do not produce BLKmode registers.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2c6b27c3]
+---------------------------------------- Current commit hash: [2c6b27c3] ----------------------------------------+
Building GCC for commit [2c6b27c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2c6b27c3 i386.c (construct_container): Do not produce BLKmode registers.
HEAD is now at 2c6b27c3 i386.c (construct_container): Do not produce BLKmode registers.
Note: checking out '2c6b27c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2c6b27c3... i386.c (construct_container): Do not produce BLKmode registers.
Deleted branch temp-test-branch (was 2c6b27c3).
Fail to build gcc for commit [2c6b27c3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[50431bc4280a683141da4c51375ef07636083b7b] Makefile.in (FLAGS_H): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [50431bc]
+---------------------------------------- Current commit hash: [50431bc] ----------------------------------------+
Building GCC for commit [50431bc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 50431bc Makefile.in (FLAGS_H): New.
HEAD is now at 50431bc Makefile.in (FLAGS_H): New.
Note: checking out '50431bc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 50431bc... Makefile.in (FLAGS_H): New.
Deleted branch temp-test-branch (was 50431bc).
Fail to build gcc for commit [50431bc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[a926b253fc0fde013bba32537907417e6364e70a] re PR middle-end/16026 (ICE in function.c:4804, assign_parms, when -mpowerpc64 & half-word operation)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a926b25]
+---------------------------------------- Current commit hash: [a926b25] ----------------------------------------+
Building GCC for commit [a926b25]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a926b25 re PR middle-end/16026 (ICE in function.c:4804, assign_parms, when -mpowerpc64 & half-word operation)
HEAD is now at a926b25 re PR middle-end/16026 (ICE in function.c:4804, assign_parms, when -mpowerpc64 & half-word operation)
Note: checking out 'a926b25'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a926b25... re PR middle-end/16026 (ICE in function.c:4804, assign_parms, when -mpowerpc64 & half-word operation)
Deleted branch temp-test-branch (was a926b25).
Fail to build gcc for commit [a926b25], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5305f6d718b92844c271f2f4bce64fa25e224fa5] * c-typeck.c (common_type): Correct comment.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5305f6d]
+---------------------------------------- Current commit hash: [5305f6d] ----------------------------------------+
Building GCC for commit [5305f6d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5305f6d * c-typeck.c (common_type): Correct comment.
HEAD is now at 5305f6d * c-typeck.c (common_type): Correct comment.
Note: checking out '5305f6d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5305f6d... * c-typeck.c (common_type): Correct comment.
Deleted branch temp-test-branch (was 5305f6d).
Fail to build gcc for commit [5305f6d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[70315fcdde3a60e23d39586a9b5a237ff9334a9e] s390.c (s390_expand_movstr, [...]): Do not use expand_start_loop and expand_end_loop, instead build the loop manually.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [70315fc]
+---------------------------------------- Current commit hash: [70315fc] ----------------------------------------+
Building GCC for commit [70315fc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 70315fc s390.c (s390_expand_movstr, [...]): Do not use expand_start_loop and expand_end_loop, instead build the loop manually.
HEAD is now at 70315fc s390.c (s390_expand_movstr, [...]): Do not use expand_start_loop and expand_end_loop, instead build the loop manually.
Note: checking out '70315fc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 70315fc... s390.c (s390_expand_movstr, [...]): Do not use expand_start_loop and expand_end_loop, instead build the loop manually.
Deleted branch temp-test-branch (was 70315fc).
Fail to build gcc for commit [70315fc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[74c2dbf7a17c27d606e21dc6be52de40d7e17f4b] BeanInfoEmbryo.java, [...]: Rename enum to e because enum is a keyword in Java 1.5.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [74c2dbf]
+---------------------------------------- Current commit hash: [74c2dbf] ----------------------------------------+
Building GCC for commit [74c2dbf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 74c2dbf BeanInfoEmbryo.java, [...]: Rename enum to e because enum is a keyword in Java 1.5.
HEAD is now at 74c2dbf BeanInfoEmbryo.java, [...]: Rename enum to e because enum is a keyword in Java 1.5.
Note: checking out '74c2dbf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 74c2dbf... BeanInfoEmbryo.java, [...]: Rename enum to e because enum is a keyword in Java 1.5.
Deleted branch temp-test-branch (was 74c2dbf).
Fail to build gcc for commit [74c2dbf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8750f9cdec153095cc47c41b887bc86fda4a0e3e] re PR fortran/15750 (IOLENGTH form of INQUIRE statement not implemented)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8750f9c]
+---------------------------------------- Current commit hash: [8750f9c] ----------------------------------------+
Building GCC for commit [8750f9c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8750f9c re PR fortran/15750 (IOLENGTH form of INQUIRE statement not implemented)
HEAD is now at 8750f9c re PR fortran/15750 (IOLENGTH form of INQUIRE statement not implemented)
Note: checking out '8750f9c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8750f9c... re PR fortran/15750 (IOLENGTH form of INQUIRE statement not implemented)
Deleted branch temp-test-branch (was 8750f9c).
Fail to build gcc for commit [8750f9c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb] gimplify.c (sort_case_labels): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0f1f696]
+---------------------------------------- Current commit hash: [0f1f696] ----------------------------------------+
Building GCC for commit [0f1f696]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0f1f696 gimplify.c (sort_case_labels): New.
HEAD is now at 0f1f696 gimplify.c (sort_case_labels): New.
Note: checking out '0f1f696'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0f1f696... gimplify.c (sort_case_labels): New.
Deleted branch temp-test-branch (was 0f1f696).
Fail to build gcc for commit [0f1f696], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f648d1e451851a392ec157b60cbfcb898c6d8138] Fix whitespace from previous checking
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f648d1e]
+---------------------------------------- Current commit hash: [f648d1e] ----------------------------------------+
Building GCC for commit [f648d1e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f648d1e Fix whitespace from previous checking
HEAD is now at f648d1e Fix whitespace from previous checking
Note: checking out 'f648d1e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f648d1e... Fix whitespace from previous checking
Deleted branch temp-test-branch (was f648d1e).
Fail to build gcc for commit [f648d1e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[771b9ca31fd14342715c581d690d584d0e1df3cb] CompilerProcess.java: Fixed javadoc to by XHTML compliant.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [771b9ca]
+---------------------------------------- Current commit hash: [771b9ca] ----------------------------------------+
Building GCC for commit [771b9ca]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 771b9ca CompilerProcess.java: Fixed javadoc to by XHTML compliant.
HEAD is now at 771b9ca CompilerProcess.java: Fixed javadoc to by XHTML compliant.
Note: checking out '771b9ca'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 771b9ca... CompilerProcess.java: Fixed javadoc to by XHTML compliant.
Deleted branch temp-test-branch (was 771b9ca).
Fail to build gcc for commit [771b9ca], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[de6f27a82e25b500f5c63f0cf7123c6a0b1669fe] arm.h (ARM_LEGITIMIZE_RELOAD_ADDRESS): Soft-float need not imply FPA.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de6f27a]
+---------------------------------------- Current commit hash: [de6f27a] ----------------------------------------+
Building GCC for commit [de6f27a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de6f27a arm.h (ARM_LEGITIMIZE_RELOAD_ADDRESS): Soft-float need not imply FPA.
HEAD is now at de6f27a arm.h (ARM_LEGITIMIZE_RELOAD_ADDRESS): Soft-float need not imply FPA.
Note: checking out 'de6f27a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de6f27a... arm.h (ARM_LEGITIMIZE_RELOAD_ADDRESS): Soft-float need not imply FPA.
Deleted branch temp-test-branch (was de6f27a).
Fail to build gcc for commit [de6f27a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7c9fee34e5688d79d96db0e2b2e56d7273cb4335] linker-map.gnu (GLIBCXX_3.4.1): Add.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7c9fee3]
+---------------------------------------- Current commit hash: [7c9fee3] ----------------------------------------+
Building GCC for commit [7c9fee3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7c9fee3 linker-map.gnu (GLIBCXX_3.4.1): Add.
HEAD is now at 7c9fee3 linker-map.gnu (GLIBCXX_3.4.1): Add.
Note: checking out '7c9fee3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7c9fee3... linker-map.gnu (GLIBCXX_3.4.1): Add.
Deleted branch temp-test-branch (was 7c9fee3).
Fail to build gcc for commit [7c9fee3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0ef54a47cf6012a588dc89ce63d2cf8d3106414f] unwind-dw2-fde.c (get_cie_encoding): Handle dwarf3 CIE format.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0ef54a4]
+---------------------------------------- Current commit hash: [0ef54a4] ----------------------------------------+
Building GCC for commit [0ef54a4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0ef54a4 unwind-dw2-fde.c (get_cie_encoding): Handle dwarf3 CIE format.
HEAD is now at 0ef54a4 unwind-dw2-fde.c (get_cie_encoding): Handle dwarf3 CIE format.
Note: checking out '0ef54a4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0ef54a4... unwind-dw2-fde.c (get_cie_encoding): Handle dwarf3 CIE format.
Deleted branch temp-test-branch (was 0ef54a4).
Fail to build gcc for commit [0ef54a4], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[42fcd7bb7ad33da94b8eeb4c92461639cc6a1f7c] configure.in: Handle multilibs, support --enable-version-specific-runtime-libs.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42fcd7b]
+---------------------------------------- Current commit hash: [42fcd7b] ----------------------------------------+
Building GCC for commit [42fcd7b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42fcd7b configure.in: Handle multilibs, support --enable-version-specific-runtime-libs.
HEAD is now at 42fcd7b configure.in: Handle multilibs, support --enable-version-specific-runtime-libs.
Note: checking out '42fcd7b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42fcd7b... configure.in: Handle multilibs, support --enable-version-specific-runtime-libs.
Deleted branch temp-test-branch (was 42fcd7b).
Fail to build gcc for commit [42fcd7b], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[17abdabcf3d4261dbebcc88cfaa1810b20811fe9] Layout interfaces during preparation, not initialization.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [17abdab]
+---------------------------------------- Current commit hash: [17abdab] ----------------------------------------+
Building GCC for commit [17abdab]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 17abdab Layout interfaces during preparation, not initialization.
HEAD is now at 17abdab Layout interfaces during preparation, not initialization.
Note: checking out '17abdab'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 17abdab... Layout interfaces during preparation, not initialization.
Deleted branch temp-test-branch (was 17abdab).
Fail to build gcc for commit [17abdab], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[078c8b08a0a0d7db27f491a4212957c967619f67] sh.c (dump_table): New argument start.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [078c8b0]
+---------------------------------------- Current commit hash: [078c8b0] ----------------------------------------+
Building GCC for commit [078c8b0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 078c8b0 sh.c (dump_table): New argument start.
HEAD is now at 078c8b0 sh.c (dump_table): New argument start.
Note: checking out '078c8b0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 078c8b0... sh.c (dump_table): New argument start.
Deleted branch temp-test-branch (was 078c8b0).
Fail to build gcc for commit [078c8b0], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[048d99365055be4021508378e90a90987df38283] tree-ssa.c (raise_value): Removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [048d993]
+---------------------------------------- Current commit hash: [048d993] ----------------------------------------+
Building GCC for commit [048d993]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 048d993 tree-ssa.c (raise_value): Removed.
HEAD is now at 048d993 tree-ssa.c (raise_value): Removed.
Note: checking out '048d993'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 048d993... tree-ssa.c (raise_value): Removed.
Deleted branch temp-test-branch (was 048d993).
Fail to build gcc for commit [048d993], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6de9cd9a886ea695aa892c3c7c07818a7b7e9e6f] Merge tree-ssa-20020619-branch into mainline.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6de9cd9]
+---------------------------------------- Current commit hash: [6de9cd9] ----------------------------------------+
Building GCC for commit [6de9cd9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6de9cd9 Merge tree-ssa-20020619-branch into mainline.
HEAD is now at 6de9cd9 Merge tree-ssa-20020619-branch into mainline.
Note: checking out '6de9cd9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6de9cd9... Merge tree-ssa-20020619-branch into mainline.
Deleted branch temp-test-branch (was 6de9cd9).
Fail to build gcc for commit [6de9cd9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[79bba51c2833a33d574533bf16ea63d97d201736] re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [79bba51]
+---------------------------------------- Current commit hash: [79bba51] ----------------------------------------+
Building GCC for commit [79bba51]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 79bba51 re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
HEAD is now at 79bba51 re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
Note: checking out '79bba51'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 79bba51... re PR bootstrap/15546 (Bootstrap stage3: Undefined references to basic_string)
Deleted branch temp-test-branch (was 79bba51).
Fail to build gcc for commit [79bba51], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5c61a8637793dd25f01d7e58f775d19f0ade7493] re PR libstdc++/15412 (_GLIBCXX_ symbols symbols defined and used in different namespaces)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5c61a86]
+---------------------------------------- Current commit hash: [5c61a86] ----------------------------------------+
Building GCC for commit [5c61a86]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5c61a86 re PR libstdc++/15412 (_GLIBCXX_ symbols symbols defined and used in different namespaces)
HEAD is now at 5c61a86 re PR libstdc++/15412 (_GLIBCXX_ symbols symbols defined and used in different namespaces)
Note: checking out '5c61a86'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5c61a86... re PR libstdc++/15412 (_GLIBCXX_ symbols symbols defined and used in different namespaces)
Deleted branch temp-test-branch (was 5c61a86).
Fail to build gcc for commit [5c61a86], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[093c7153029151d28e4f60d9204d0edc31e7e3a2] c-common.c (flag_objc_sjlj_exceptions): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [093c715]
+---------------------------------------- Current commit hash: [093c715] ----------------------------------------+
Building GCC for commit [093c715]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 093c715 c-common.c (flag_objc_sjlj_exceptions): New.
HEAD is now at 093c715 c-common.c (flag_objc_sjlj_exceptions): New.
Note: checking out '093c715'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 093c715... c-common.c (flag_objc_sjlj_exceptions): New.
Deleted branch temp-test-branch (was 093c715).
Fail to build gcc for commit [093c715], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[7619c085c5a7c57e5ce7da32a290bfed82d006b2] c-common.h (warn_cast_qual, [...]): Remove explicit declarations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7619c08]
+---------------------------------------- Current commit hash: [7619c08] ----------------------------------------+
Building GCC for commit [7619c08]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7619c08 c-common.h (warn_cast_qual, [...]): Remove explicit declarations.
HEAD is now at 7619c08 c-common.h (warn_cast_qual, [...]): Remove explicit declarations.
Note: checking out '7619c08'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7619c08... c-common.h (warn_cast_qual, [...]): Remove explicit declarations.
Deleted branch temp-test-branch (was 7619c08).
Fail to build gcc for commit [7619c08], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b1c5b5a09b545dabdd4a10d67f31d93779af95db] istream.tcc (ignore): Correctly deal with n == numeric_limits<streamsize>::max().
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b1c5b5a]
+---------------------------------------- Current commit hash: [b1c5b5a] ----------------------------------------+
Building GCC for commit [b1c5b5a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b1c5b5a istream.tcc (ignore): Correctly deal with n == numeric_limits<streamsize>::max().
HEAD is now at b1c5b5a istream.tcc (ignore): Correctly deal with n == numeric_limits<streamsize>::max().
Note: checking out 'b1c5b5a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b1c5b5a... istream.tcc (ignore): Correctly deal with n == numeric_limits<streamsize>::max().
Deleted branch temp-test-branch (was b1c5b5a).
Fail to build gcc for commit [b1c5b5a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[979837429d2eae3649dfa49b4cccde99f018a84f] re PR fortran/15314 (ICE caused by array initializer in derived type definition)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9798374]
+---------------------------------------- Current commit hash: [9798374] ----------------------------------------+
Building GCC for commit [9798374]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9798374 re PR fortran/15314 (ICE caused by array initializer in derived type definition)
HEAD is now at 9798374 re PR fortran/15314 (ICE caused by array initializer in derived type definition)
Note: checking out '9798374'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9798374... re PR fortran/15314 (ICE caused by array initializer in derived type definition)
Deleted branch temp-test-branch (was 9798374).
Fail to build gcc for commit [9798374], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0429bc77591e0a2826390f5a2545e8a752dfb35b] Makefile.am: the correct directory for gettext include files is given by @INCINTL@.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0429bc7]
+---------------------------------------- Current commit hash: [0429bc7] ----------------------------------------+
Building GCC for commit [0429bc7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0429bc7 Makefile.am: the correct directory for gettext include files is given by @INCINTL@.
HEAD is now at 0429bc7 Makefile.am: the correct directory for gettext include files is given by @INCINTL@.
Note: checking out '0429bc7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0429bc7... Makefile.am: the correct directory for gettext include files is given by @INCINTL@.
Deleted branch temp-test-branch (was 0429bc7).
Fail to build gcc for commit [0429bc7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[576df3214c16163b65f82064f035fd375d0c02aa] 1.cc: Tweak instantiations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [576df32]
+---------------------------------------- Current commit hash: [576df32] ----------------------------------------+
Building GCC for commit [576df32]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 576df32 1.cc: Tweak instantiations.
HEAD is now at 576df32 1.cc: Tweak instantiations.
Note: checking out '576df32'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 576df32... 1.cc: Tweak instantiations.
Deleted branch temp-test-branch (was 576df32).
Fail to build gcc for commit [576df32], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[18cf0da278ff255a2f60a1ed2bef3cece298ab05] * pt.c (mark_decl_instantiated): Don't call defer_fn.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [18cf0da]
+---------------------------------------- Current commit hash: [18cf0da] ----------------------------------------+
Building GCC for commit [18cf0da]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 18cf0da * pt.c (mark_decl_instantiated): Don't call defer_fn.
HEAD is now at 18cf0da * pt.c (mark_decl_instantiated): Don't call defer_fn.
Note: checking out '18cf0da'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 18cf0da... * pt.c (mark_decl_instantiated): Don't call defer_fn.
Deleted branch temp-test-branch (was 18cf0da).
Fail to build gcc for commit [18cf0da], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f0d59f2e4329ac3ddf2e5c1af8025c88325053b4] gimplify.c (append_to_compound_expr): Deleted.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f0d59f2]
+---------------------------------------- Current commit hash: [f0d59f2] ----------------------------------------+
Building GCC for commit [f0d59f2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f0d59f2 gimplify.c (append_to_compound_expr): Deleted.
HEAD is now at f0d59f2 gimplify.c (append_to_compound_expr): Deleted.
Note: checking out 'f0d59f2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f0d59f2... gimplify.c (append_to_compound_expr): Deleted.
Deleted branch temp-test-branch (was f0d59f2).
Fail to build gcc for commit [f0d59f2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cc605afe381aeb3a32bd2bf39c0415d6c5f243c0] * gcc_update: boehm-gc/configure.in -> configure.ac.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cc605af]
+---------------------------------------- Current commit hash: [cc605af] ----------------------------------------+
Building GCC for commit [cc605af]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cc605af * gcc_update: boehm-gc/configure.in -> configure.ac.
HEAD is now at cc605af * gcc_update: boehm-gc/configure.in -> configure.ac.
Note: checking out 'cc605af'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cc605af... * gcc_update: boehm-gc/configure.in -> configure.ac.
Deleted branch temp-test-branch (was cc605af).
Fail to build gcc for commit [cc605af], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[2be480afc8ad19a2d0331502be0e73cde57ee09b] tree-mudflap.c (mx_register_decls): Add third (type) argument to synthesized __mf_unregister call.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2be480a]
+---------------------------------------- Current commit hash: [2be480a] ----------------------------------------+
Building GCC for commit [2be480a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2be480a tree-mudflap.c (mx_register_decls): Add third (type) argument to synthesized __mf_unregister call.
HEAD is now at 2be480a tree-mudflap.c (mx_register_decls): Add third (type) argument to synthesized __mf_unregister call.
Note: checking out '2be480a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2be480a... tree-mudflap.c (mx_register_decls): Add third (type) argument to synthesized __mf_unregister call.
Deleted branch temp-test-branch (was 2be480a).
Fail to build gcc for commit [2be480a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[42f806e5a0bbc3f5a02394893343e7e6ce1e94f2] re PR target/14478 ([3.3 only] rs6000 geu/ltu patterns generate incorrect code)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42f806e]
+---------------------------------------- Current commit hash: [42f806e] ----------------------------------------+
Building GCC for commit [42f806e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42f806e re PR target/14478 ([3.3 only] rs6000 geu/ltu patterns generate incorrect code)
HEAD is now at 42f806e re PR target/14478 ([3.3 only] rs6000 geu/ltu patterns generate incorrect code)
Note: checking out '42f806e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42f806e... re PR target/14478 ([3.3 only] rs6000 geu/ltu patterns generate incorrect code)
Deleted branch temp-test-branch (was 42f806e).
Fail to build gcc for commit [42f806e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d01a8ee025fac8ecd9619c3a868d1979d64bc7b6] parse.y (set_nested_class_simple_name_value): Removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d01a8ee]
+---------------------------------------- Current commit hash: [d01a8ee] ----------------------------------------+
Building GCC for commit [d01a8ee]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d01a8ee parse.y (set_nested_class_simple_name_value): Removed.
HEAD is now at d01a8ee parse.y (set_nested_class_simple_name_value): Removed.
Note: checking out 'd01a8ee'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d01a8ee... parse.y (set_nested_class_simple_name_value): Removed.
Deleted branch temp-test-branch (was d01a8ee).
Fail to build gcc for commit [d01a8ee], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[076e544330cef5b05f16bc351b9d87ea6a931b95] configure.ac: New name of configure.in.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [076e544]
+---------------------------------------- Current commit hash: [076e544] ----------------------------------------+
Building GCC for commit [076e544]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 076e544 configure.ac: New name of configure.in.
HEAD is now at 076e544 configure.ac: New name of configure.in.
Note: checking out '076e544'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 076e544... configure.ac: New name of configure.in.
Deleted branch temp-test-branch (was 076e544).
Fail to build gcc for commit [076e544], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[85ff6f624e23ae016b859f4829dd6f177b24c8b7] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [85ff6f6]
+---------------------------------------- Current commit hash: [85ff6f6] ----------------------------------------+
Building GCC for commit [85ff6f6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 85ff6f6 [multiple changes]
HEAD is now at 85ff6f6 [multiple changes]
Note: checking out '85ff6f6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 85ff6f6... [multiple changes]
Deleted branch temp-test-branch (was 85ff6f6).
Fail to build gcc for commit [85ff6f6], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[72e89c7cf045425f882dac9c2e723e73add96100] tweak
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [72e89c7]
+---------------------------------------- Current commit hash: [72e89c7] ----------------------------------------+
Building GCC for commit [72e89c7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 72e89c7 tweak
HEAD is now at 72e89c7 tweak
Note: checking out '72e89c7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 72e89c7... tweak
Deleted branch temp-test-branch (was 72e89c7).
Fail to build gcc for commit [72e89c7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[07f266aecd773341be6f62935bcf8a6e935d5528] * config/s390/s390.h (DEFAULT_MAIN_RETURN): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [07f266a]
+---------------------------------------- Current commit hash: [07f266a] ----------------------------------------+
Building GCC for commit [07f266a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 07f266a * config/s390/s390.h (DEFAULT_MAIN_RETURN): Remove.
HEAD is now at 07f266a * config/s390/s390.h (DEFAULT_MAIN_RETURN): Remove.
Note: checking out '07f266a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 07f266a... * config/s390/s390.h (DEFAULT_MAIN_RETURN): Remove.
Deleted branch temp-test-branch (was 07f266a).
Fail to build gcc for commit [07f266a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0d0bc03606fc5c4d655130b9f060b018412187cf] function.cc: New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0d0bc03]
+---------------------------------------- Current commit hash: [0d0bc03] ----------------------------------------+
Building GCC for commit [0d0bc03]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0d0bc03 function.cc: New.
HEAD is now at 0d0bc03 function.cc: New.
Note: checking out '0d0bc03'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0d0bc03... function.cc: New.
Deleted branch temp-test-branch (was 0d0bc03).
Fail to build gcc for commit [0d0bc03], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[044b389201cf912c8b94e7e228cb136493d967ca] re PR target/15084 (-O/-O2 generate wrong code on structure modification)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [044b389]
+---------------------------------------- Current commit hash: [044b389] ----------------------------------------+
Building GCC for commit [044b389]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 044b389 re PR target/15084 (-O/-O2 generate wrong code on structure modification)
HEAD is now at 044b389 re PR target/15084 (-O/-O2 generate wrong code on structure modification)
Note: checking out '044b389'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 044b389... re PR target/15084 (-O/-O2 generate wrong code on structure modification)
Deleted branch temp-test-branch (was 044b389).
Fail to build gcc for commit [044b389], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[fc9c8ce15a97920e6bf0fedaa6c50631acff1a31] * dwarf2out.c (output_call_frame_info): Support dwarf3 cie entries.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fc9c8ce]
+---------------------------------------- Current commit hash: [fc9c8ce] ----------------------------------------+
Building GCC for commit [fc9c8ce]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fc9c8ce * dwarf2out.c (output_call_frame_info): Support dwarf3 cie entries.
HEAD is now at fc9c8ce * dwarf2out.c (output_call_frame_info): Support dwarf3 cie entries.
Note: checking out 'fc9c8ce'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fc9c8ce... * dwarf2out.c (output_call_frame_info): Support dwarf3 cie entries.
Deleted branch temp-test-branch (was fc9c8ce).
Fail to build gcc for commit [fc9c8ce], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f12f786b8679b37570b3509ae1c11453830c47b0] arith.c (gfc_arith_power): Complex number raised to 0 power is 1.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f12f786]
+---------------------------------------- Current commit hash: [f12f786] ----------------------------------------+
Building GCC for commit [f12f786]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f12f786 arith.c (gfc_arith_power): Complex number raised to 0 power is 1.
HEAD is now at f12f786 arith.c (gfc_arith_power): Complex number raised to 0 power is 1.
Note: checking out 'f12f786'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f12f786... arith.c (gfc_arith_power): Complex number raised to 0 power is 1.
Deleted branch temp-test-branch (was f12f786).
Fail to build gcc for commit [f12f786], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f] locale_facets.tcc (time_get<>::_M_extract_name): Don't use the 'magic number' 10 in the computation of __minlen...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ce2a46a]
+---------------------------------------- Current commit hash: [ce2a46a] ----------------------------------------+
Building GCC for commit [ce2a46a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ce2a46a locale_facets.tcc (time_get<>::_M_extract_name): Don't use the 'magic number' 10 in the computation of __minlen...
HEAD is now at ce2a46a locale_facets.tcc (time_get<>::_M_extract_name): Don't use the 'magic number' 10 in the computation of __minlen...
Note: checking out 'ce2a46a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ce2a46a... locale_facets.tcc (time_get<>::_M_extract_name): Don't use the 'magic number' 10 in the computation of __minlen...
Deleted branch temp-test-branch (was ce2a46a).
Fail to build gcc for commit [ce2a46a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e72f28d00a920022fd3beeb291075ebb06ed82fd] acinclude.m4 (lt_cv_deplibs_check_method): Use pass_all on sh*.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e72f28d]
+---------------------------------------- Current commit hash: [e72f28d] ----------------------------------------+
Building GCC for commit [e72f28d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e72f28d acinclude.m4 (lt_cv_deplibs_check_method): Use pass_all on sh*.
HEAD is now at e72f28d acinclude.m4 (lt_cv_deplibs_check_method): Use pass_all on sh*.
Note: checking out 'e72f28d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e72f28d... acinclude.m4 (lt_cv_deplibs_check_method): Use pass_all on sh*.
Deleted branch temp-test-branch (was e72f28d).
Fail to build gcc for commit [e72f28d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3bce843ee30206917ccdfbf283c73e19a2ce633c] tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things are available everywhere too.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3bce843]
+---------------------------------------- Current commit hash: [3bce843] ----------------------------------------+
Building GCC for commit [3bce843]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3bce843 tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things are available everywhere too.
HEAD is now at 3bce843 tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things are available everywhere too.
Note: checking out '3bce843'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3bce843... tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things are available everywhere too.
Deleted branch temp-test-branch (was 3bce843).
Fail to build gcc for commit [3bce843], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[058b15c1dc2199a810e4f8793993dc4ede61bb0a] cp-tree.def (NEW_EXPR): Add a fourth slot.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [058b15c]
+---------------------------------------- Current commit hash: [058b15c] ----------------------------------------+
Building GCC for commit [058b15c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 058b15c cp-tree.def (NEW_EXPR): Add a fourth slot.
HEAD is now at 058b15c cp-tree.def (NEW_EXPR): Add a fourth slot.
Note: checking out '058b15c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 058b15c... cp-tree.def (NEW_EXPR): Add a fourth slot.
Deleted branch temp-test-branch (was 058b15c).
Fail to build gcc for commit [058b15c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[bd0a5aab91e49e2c36aab756bca6c1d4676a5db6] * lang-specs.h: Add missing initializers for .ii.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bd0a5aa]
+---------------------------------------- Current commit hash: [bd0a5aa] ----------------------------------------+
Building GCC for commit [bd0a5aa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bd0a5aa * lang-specs.h: Add missing initializers for .ii.
HEAD is now at bd0a5aa * lang-specs.h: Add missing initializers for .ii.
Note: checking out 'bd0a5aa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bd0a5aa... * lang-specs.h: Add missing initializers for .ii.
Deleted branch temp-test-branch (was bd0a5aa).
Fail to build gcc for commit [bd0a5aa], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5088b05874bc5a93099751efb19abe213ce2d0d1] c-common.def (RETURN_STMT): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5088b05]
+---------------------------------------- Current commit hash: [5088b05] ----------------------------------------+
Building GCC for commit [5088b05]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5088b05 c-common.def (RETURN_STMT): Remove.
HEAD is now at 5088b05 c-common.def (RETURN_STMT): Remove.
Note: checking out '5088b05'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5088b05... c-common.def (RETURN_STMT): Remove.
Deleted branch temp-test-branch (was 5088b05).
Fail to build gcc for commit [5088b05], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b08eae928826bd8474cd30a33949af242dfc400c] * gfortran.fortran-torture/execute/contained_3.f90: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b08eae9]
+---------------------------------------- Current commit hash: [b08eae9] ----------------------------------------+
Building GCC for commit [b08eae9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b08eae9 * gfortran.fortran-torture/execute/contained_3.f90: New test.
HEAD is now at b08eae9 * gfortran.fortran-torture/execute/contained_3.f90: New test.
Note: checking out 'b08eae9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b08eae9... * gfortran.fortran-torture/execute/contained_3.f90: New test.
Deleted branch temp-test-branch (was b08eae9).
Fail to build gcc for commit [b08eae9], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[deb3d52fec87690fed1a14aa4f8666a59f0fcc14] ObjectOutputStream.java: Add DEBUG statements everywhere.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [deb3d52]
+---------------------------------------- Current commit hash: [deb3d52] ----------------------------------------+
Building GCC for commit [deb3d52]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: deb3d52 ObjectOutputStream.java: Add DEBUG statements everywhere.
HEAD is now at deb3d52 ObjectOutputStream.java: Add DEBUG statements everywhere.
Note: checking out 'deb3d52'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at deb3d52... ObjectOutputStream.java: Add DEBUG statements everywhere.
Deleted branch temp-test-branch (was deb3d52).
Fail to build gcc for commit [deb3d52], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[421563d59a5d6d21a90066d79dda8ac825e578e3] c-incpath.c (add_path): Canonicalize paths to use '/' if HAVE_DOS_BASED_FILESYSTEM.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [421563d]
+---------------------------------------- Current commit hash: [421563d] ----------------------------------------+
Building GCC for commit [421563d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 421563d c-incpath.c (add_path): Canonicalize paths to use '/' if HAVE_DOS_BASED_FILESYSTEM.
HEAD is now at 421563d c-incpath.c (add_path): Canonicalize paths to use '/' if HAVE_DOS_BASED_FILESYSTEM.
Note: checking out '421563d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 421563d... c-incpath.c (add_path): Canonicalize paths to use '/' if HAVE_DOS_BASED_FILESYSTEM.
Deleted branch temp-test-branch (was 421563d).
Fail to build gcc for commit [421563d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5e96277660887473bdc8b1953fcc35aedd092e3a] loop-invariant.c: New file.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5e96277]
+---------------------------------------- Current commit hash: [5e96277] ----------------------------------------+
Building GCC for commit [5e96277]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5e96277 loop-invariant.c: New file.
HEAD is now at 5e96277 loop-invariant.c: New file.
Note: checking out '5e96277'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5e96277... loop-invariant.c: New file.
Deleted branch temp-test-branch (was 5e96277).
Fail to build gcc for commit [5e96277], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e17b3578a3b043e0ee9a8493224287e79f9bb2c9] re PR c++/15701 (ICE with friends and template template parameter)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e17b357]
+---------------------------------------- Current commit hash: [e17b357] ----------------------------------------+
Building GCC for commit [e17b357]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e17b357 re PR c++/15701 (ICE with friends and template template parameter)
HEAD is now at e17b357 re PR c++/15701 (ICE with friends and template template parameter)
Note: checking out 'e17b357'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e17b357... re PR c++/15701 (ICE with friends and template template parameter)
Deleted branch temp-test-branch (was e17b357).
Fail to build gcc for commit [e17b357], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[84b8b0e04d42732ea65d452aa74e3575f75de10b] c-common.h (has_c_linkage): New interface.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [84b8b0e]
+---------------------------------------- Current commit hash: [84b8b0e] ----------------------------------------+
Building GCC for commit [84b8b0e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 84b8b0e c-common.h (has_c_linkage): New interface.
HEAD is now at 84b8b0e c-common.h (has_c_linkage): New interface.
Note: checking out '84b8b0e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 84b8b0e... c-common.h (has_c_linkage): New interface.
Deleted branch temp-test-branch (was 84b8b0e).
Fail to build gcc for commit [84b8b0e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6ef44cfd0bb7d3cd4d534748d424a171f761b792] 2004-06-01  Michael Koch  <konqueror@gmx.de>
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ef44cf]
+---------------------------------------- Current commit hash: [6ef44cf] ----------------------------------------+
Building GCC for commit [6ef44cf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ef44cf 2004-06-01  Michael Koch  <konqueror@gmx.de>
HEAD is now at 6ef44cf 2004-06-01  Michael Koch  <konqueror@gmx.de>
Note: checking out '6ef44cf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ef44cf... 2004-06-01  Michael Koch  <konqueror@gmx.de>
Deleted branch temp-test-branch (was 6ef44cf).
Fail to build gcc for commit [6ef44cf], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0b817eb02d8c970b3041591f58a4a7c4253ed855] Makefile.am (AM_MAKEFLAGS): Pass RUNTESTFLAGS.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b817eb]
+---------------------------------------- Current commit hash: [0b817eb] ----------------------------------------+
Building GCC for commit [0b817eb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b817eb Makefile.am (AM_MAKEFLAGS): Pass RUNTESTFLAGS.
HEAD is now at 0b817eb Makefile.am (AM_MAKEFLAGS): Pass RUNTESTFLAGS.
Note: checking out '0b817eb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b817eb... Makefile.am (AM_MAKEFLAGS): Pass RUNTESTFLAGS.
Deleted branch temp-test-branch (was 0b817eb).
Fail to build gcc for commit [0b817eb], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[c872077c88496940e82e8f52988d98a94c9c5d29] re PR bootstrap/13334 (Bootstrap failure: libiberty/fibheap.c: LONG_MIN undeclared)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c872077]
+---------------------------------------- Current commit hash: [c872077] ----------------------------------------+
Building GCC for commit [c872077]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c872077 re PR bootstrap/13334 (Bootstrap failure: libiberty/fibheap.c: LONG_MIN undeclared)
HEAD is now at c872077 re PR bootstrap/13334 (Bootstrap failure: libiberty/fibheap.c: LONG_MIN undeclared)
Note: checking out 'c872077'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c872077... re PR bootstrap/13334 (Bootstrap failure: libiberty/fibheap.c: LONG_MIN undeclared)
Deleted branch temp-test-branch (was c872077).
Fail to build gcc for commit [c872077], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ae5cbc332f60a4f9bcca56c4739410c9b2d3abf9] name-lookup.c (check_for_out_of_scope_variable): Avoid ICE by returning when TREE_TYPE is error_mark_node.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ae5cbc3]
+---------------------------------------- Current commit hash: [ae5cbc3] ----------------------------------------+
Building GCC for commit [ae5cbc3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ae5cbc3 name-lookup.c (check_for_out_of_scope_variable): Avoid ICE by returning when TREE_TYPE is error_mark_node.
HEAD is now at ae5cbc3 name-lookup.c (check_for_out_of_scope_variable): Avoid ICE by returning when TREE_TYPE is error_mark_node.
Note: checking out 'ae5cbc3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ae5cbc3... name-lookup.c (check_for_out_of_scope_variable): Avoid ICE by returning when TREE_TYPE is error_mark_node.
Deleted branch temp-test-branch (was ae5cbc3).
Fail to build gcc for commit [ae5cbc3], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[f472590a2abf807ef1574f109b44d6c9c120b9c1] tree-into-ssa.c (def_blocks_free): XFREE bitmaps allocated with BITMAP_XMALLOC.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f472590]
+---------------------------------------- Current commit hash: [f472590] ----------------------------------------+
Building GCC for commit [f472590]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f472590 tree-into-ssa.c (def_blocks_free): XFREE bitmaps allocated with BITMAP_XMALLOC.
HEAD is now at f472590 tree-into-ssa.c (def_blocks_free): XFREE bitmaps allocated with BITMAP_XMALLOC.
Note: checking out 'f472590'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f472590... tree-into-ssa.c (def_blocks_free): XFREE bitmaps allocated with BITMAP_XMALLOC.
Deleted branch temp-test-branch (was f472590).
Fail to build gcc for commit [f472590], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[52ceb03971fb7f878b8a610fa97b07a4de510057] cxxabi.h: Remove duplicated and useless public and private keywords in class declarations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [52ceb03]
+---------------------------------------- Current commit hash: [52ceb03] ----------------------------------------+
Building GCC for commit [52ceb03]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 52ceb03 cxxabi.h: Remove duplicated and useless public and private keywords in class declarations.
HEAD is now at 52ceb03 cxxabi.h: Remove duplicated and useless public and private keywords in class declarations.
Note: checking out '52ceb03'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 52ceb03... cxxabi.h: Remove duplicated and useless public and private keywords in class declarations.
Deleted branch temp-test-branch (was 52ceb03).
Fail to build gcc for commit [52ceb03], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[07a1f7953e64b6b3c8edabbe412099968bce7ab5] final.c (shorten_branches): Free uid_shuid before reallocating it.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [07a1f79]
+---------------------------------------- Current commit hash: [07a1f79] ----------------------------------------+
Building GCC for commit [07a1f79]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 07a1f79 final.c (shorten_branches): Free uid_shuid before reallocating it.
HEAD is now at 07a1f79 final.c (shorten_branches): Free uid_shuid before reallocating it.
Note: checking out '07a1f79'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 07a1f79... final.c (shorten_branches): Free uid_shuid before reallocating it.
Deleted branch temp-test-branch (was 07a1f79).
Fail to build gcc for commit [07a1f79], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[3972995b195de4ecd0055f63351987a128546208] Forgot to save ChangeLog before committing May 20 patch
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3972995]
+---------------------------------------- Current commit hash: [3972995] ----------------------------------------+
Building GCC for commit [3972995]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3972995 Forgot to save ChangeLog before committing May 20 patch
HEAD is now at 3972995 Forgot to save ChangeLog before committing May 20 patch
Note: checking out '3972995'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3972995... Forgot to save ChangeLog before committing May 20 patch
Deleted branch temp-test-branch (was 3972995).
Fail to build gcc for commit [3972995], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[4185ae53974032b6760938b7818099cb7dddd28f] target-def.h (TARGET_CXX_GUARD_TYPE, [...]): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4185ae5]
+---------------------------------------- Current commit hash: [4185ae5] ----------------------------------------+
Building GCC for commit [4185ae5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4185ae5 target-def.h (TARGET_CXX_GUARD_TYPE, [...]): Define.
HEAD is now at 4185ae5 target-def.h (TARGET_CXX_GUARD_TYPE, [...]): Define.
Note: checking out '4185ae5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4185ae5... target-def.h (TARGET_CXX_GUARD_TYPE, [...]): Define.
Deleted branch temp-test-branch (was 4185ae5).
Fail to build gcc for commit [4185ae5], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1616280e701452fe2ee16e6e9ae88bd13de68bed] ZipFile.getInputStream returns null if entry not found.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1616280]
+---------------------------------------- Current commit hash: [1616280] ----------------------------------------+
Building GCC for commit [1616280]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1616280 ZipFile.getInputStream returns null if entry not found.
HEAD is now at 1616280 ZipFile.getInputStream returns null if entry not found.
Note: checking out '1616280'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1616280... ZipFile.getInputStream returns null if entry not found.
Deleted branch temp-test-branch (was 1616280).
Fail to build gcc for commit [1616280], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ee17cbda2e69d9d19d4664cef4f96ff180ca8c5b] re PR fortran/15051 (Incorrect error for empty interface block)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ee17cbd]
+---------------------------------------- Current commit hash: [ee17cbd] ----------------------------------------+
Building GCC for commit [ee17cbd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ee17cbd re PR fortran/15051 (Incorrect error for empty interface block)
HEAD is now at ee17cbd re PR fortran/15051 (Incorrect error for empty interface block)
Note: checking out 'ee17cbd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ee17cbd... re PR fortran/15051 (Incorrect error for empty interface block)
Deleted branch temp-test-branch (was ee17cbd).
Fail to build gcc for commit [ee17cbd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b767fc11d8fc76782a969535772caf9f6df95d68] s390.c (struct machine_function): New member last_restore_gpr.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b767fc1]
+---------------------------------------- Current commit hash: [b767fc1] ----------------------------------------+
Building GCC for commit [b767fc1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b767fc1 s390.c (struct machine_function): New member last_restore_gpr.
HEAD is now at b767fc1 s390.c (struct machine_function): New member last_restore_gpr.
Note: checking out 'b767fc1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b767fc1... s390.c (struct machine_function): New member last_restore_gpr.
Deleted branch temp-test-branch (was b767fc1).
Fail to build gcc for commit [b767fc1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[394ef95eafc76d2b28c833cec76984953f3308d3] re PR libstdc++/15361 (bitset<>::_Find_next fails)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [394ef95]
+---------------------------------------- Current commit hash: [394ef95] ----------------------------------------+
Building GCC for commit [394ef95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 394ef95 re PR libstdc++/15361 (bitset<>::_Find_next fails)
HEAD is now at 394ef95 re PR libstdc++/15361 (bitset<>::_Find_next fails)
Note: checking out '394ef95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 394ef95... re PR libstdc++/15361 (bitset<>::_Find_next fails)
Deleted branch temp-test-branch (was 394ef95).
Fail to build gcc for commit [394ef95], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[5da9128adac1e5d2ae93d1c20b8c202225ae6355] Makefile.in (top_builddir): Define to .
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5da9128]
+---------------------------------------- Current commit hash: [5da9128] ----------------------------------------+
Building GCC for commit [5da9128]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5da9128 Makefile.in (top_builddir): Define to .
HEAD is now at 5da9128 Makefile.in (top_builddir): Define to .
Note: checking out '5da9128'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5da9128... Makefile.in (top_builddir): Define to .
Deleted branch temp-test-branch (was 5da9128).
Fail to build gcc for commit [5da9128], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e9a757769b395ef082be82777e68bfe8a8a79f90] re PR c/15444 (Bad warning message in printf format checking)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e9a7577]
+---------------------------------------- Current commit hash: [e9a7577] ----------------------------------------+
Building GCC for commit [e9a7577]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e9a7577 re PR c/15444 (Bad warning message in printf format checking)
HEAD is now at e9a7577 re PR c/15444 (Bad warning message in printf format checking)
Note: checking out 'e9a7577'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e9a7577... re PR c/15444 (Bad warning message in printf format checking)
Deleted branch temp-test-branch (was e9a7577).
Fail to build gcc for commit [e9a7577], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[cdc9d80325162532ebca615589415808243f5877] * tree.h: Fix comment typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cdc9d80]
+---------------------------------------- Current commit hash: [cdc9d80] ----------------------------------------+
Building GCC for commit [cdc9d80]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cdc9d80 * tree.h: Fix comment typo.
HEAD is now at cdc9d80 * tree.h: Fix comment typo.
Note: checking out 'cdc9d80'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cdc9d80... * tree.h: Fix comment typo.
Deleted branch temp-test-branch (was cdc9d80).
Fail to build gcc for commit [cdc9d80], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[428d4d7660cb092c281734b56d62dce45d7b599a] prefix.c (update_path): Replace PREFIX with KEY only when it matches a full directory name in PATH.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [428d4d7]
+---------------------------------------- Current commit hash: [428d4d7] ----------------------------------------+
Building GCC for commit [428d4d7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 428d4d7 prefix.c (update_path): Replace PREFIX with KEY only when it matches a full directory name in PATH.
HEAD is now at 428d4d7 prefix.c (update_path): Replace PREFIX with KEY only when it matches a full directory name in PATH.
Note: checking out '428d4d7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 428d4d7... prefix.c (update_path): Replace PREFIX with KEY only when it matches a full directory name in PATH.
Deleted branch temp-test-branch (was 428d4d7).
Fail to build gcc for commit [428d4d7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[062583ea1ced97a69fd5df986dada75c33c940d8] decl.c (struct binding_level): Add GTY marker.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [062583e]
+---------------------------------------- Current commit hash: [062583e] ----------------------------------------+
Building GCC for commit [062583e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 062583e decl.c (struct binding_level): Add GTY marker.
HEAD is now at 062583e decl.c (struct binding_level): Add GTY marker.
Note: checking out '062583e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 062583e... decl.c (struct binding_level): Add GTY marker.
Deleted branch temp-test-branch (was 062583e).
Fail to build gcc for commit [062583e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[909087e0cfa28372c9aca47a86aa51af91b12684] re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [909087e]
+---------------------------------------- Current commit hash: [909087e] ----------------------------------------+
Building GCC for commit [909087e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 909087e re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
HEAD is now at 909087e re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
Note: checking out '909087e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 909087e... re PR libfortran/15234 (libgfortran doesn't compile on Tru64 UNIX V4.0F)
Deleted branch temp-test-branch (was 909087e).
Fail to build gcc for commit [909087e], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d1238423cd03725a2beb98ffb157c4e5022ef3cf] natSystem.cc (getenv0): Don't assume environment variable is Latin 1 coded.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d123842]
+---------------------------------------- Current commit hash: [d123842] ----------------------------------------+
Building GCC for commit [d123842]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d123842 natSystem.cc (getenv0): Don't assume environment variable is Latin 1 coded.
HEAD is now at d123842 natSystem.cc (getenv0): Don't assume environment variable is Latin 1 coded.
Note: checking out 'd123842'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d123842... natSystem.cc (getenv0): Don't assume environment variable is Latin 1 coded.
Deleted branch temp-test-branch (was d123842).
Fail to build gcc for commit [d123842], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[42dfcf84c26960bcc9c0d2f77f9c9ab4ce424927] gthr-win32.h (__GTHREAD_MUTEX_INIT_DEFAULT): Adjust.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [42dfcf8]
+---------------------------------------- Current commit hash: [42dfcf8] ----------------------------------------+
Building GCC for commit [42dfcf8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 42dfcf8 gthr-win32.h (__GTHREAD_MUTEX_INIT_DEFAULT): Adjust.
HEAD is now at 42dfcf8 gthr-win32.h (__GTHREAD_MUTEX_INIT_DEFAULT): Adjust.
Note: checking out '42dfcf8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 42dfcf8... gthr-win32.h (__GTHREAD_MUTEX_INIT_DEFAULT): Adjust.
Deleted branch temp-test-branch (was 42dfcf8).
Fail to build gcc for commit [42dfcf8], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0919ed7222874f28a047d4ace01e15efd7edfe7d] New, from PR 14498.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0919ed7]
+---------------------------------------- Current commit hash: [0919ed7] ----------------------------------------+
Building GCC for commit [0919ed7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0919ed7 New, from PR 14498.
HEAD is now at 0919ed7 New, from PR 14498.
Note: checking out '0919ed7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0919ed7... New, from PR 14498.
Deleted branch temp-test-branch (was 0919ed7).
Fail to build gcc for commit [0919ed7], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e1d2bd1e44971a4becd718272277361b4f64fcad] re PR target/15948 (THUMB: ICE with non-commutative cbranch)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e1d2bd1]
+---------------------------------------- Current commit hash: [e1d2bd1] ----------------------------------------+
Building GCC for commit [e1d2bd1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e1d2bd1 re PR target/15948 (THUMB: ICE with non-commutative cbranch)
HEAD is now at e1d2bd1 re PR target/15948 (THUMB: ICE with non-commutative cbranch)
Note: checking out 'e1d2bd1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e1d2bd1... re PR target/15948 (THUMB: ICE with non-commutative cbranch)
Deleted branch temp-test-branch (was e1d2bd1).
Fail to build gcc for commit [e1d2bd1], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097] tree-ssa.c (kill_redundant_phi_nodes): More correctly handle PHIs where the destination or an argument is marked with...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [daa2b95]
+---------------------------------------- Current commit hash: [daa2b95] ----------------------------------------+
Building GCC for commit [daa2b95]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: daa2b95 tree-ssa.c (kill_redundant_phi_nodes): More correctly handle PHIs where the destination or an argument is marked with...
HEAD is now at daa2b95 tree-ssa.c (kill_redundant_phi_nodes): More correctly handle PHIs where the destination or an argument is marked with...
Note: checking out 'daa2b95'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at daa2b95... tree-ssa.c (kill_redundant_phi_nodes): More correctly handle PHIs where the destination or an argument is marked with...
Deleted branch temp-test-branch (was daa2b95).
Fail to build gcc for commit [daa2b95], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1cc3d0854a26a83a3ac513e9d034fbba17a2ca94] * gcc.dg/noreturn-1.c (foo5): Update function does return lineno.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1cc3d08]
+---------------------------------------- Current commit hash: [1cc3d08] ----------------------------------------+
Building GCC for commit [1cc3d08]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1cc3d08 * gcc.dg/noreturn-1.c (foo5): Update function does return lineno.
HEAD is now at 1cc3d08 * gcc.dg/noreturn-1.c (foo5): Update function does return lineno.
Note: checking out '1cc3d08'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1cc3d08... * gcc.dg/noreturn-1.c (foo5): Update function does return lineno.
Deleted branch temp-test-branch (was 1cc3d08).
Fail to build gcc for commit [1cc3d08], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[70c39ccb6aa591494b4bebcbf13f190eabecff30] Fix formatting.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [70c39cc]
+---------------------------------------- Current commit hash: [70c39cc] ----------------------------------------+
Building GCC for commit [70c39cc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 70c39cc Fix formatting.
HEAD is now at 70c39cc Fix formatting.
Note: checking out '70c39cc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 70c39cc... Fix formatting.
Deleted branch temp-test-branch (was 70c39cc).
Fail to build gcc for commit [70c39cc], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[8eb14e2ebfcc6230fdb1f04bd40da1e8452af0e9] fix broken CL entry
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8eb14e2]
+---------------------------------------- Current commit hash: [8eb14e2] ----------------------------------------+
Building GCC for commit [8eb14e2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8eb14e2 fix broken CL entry
HEAD is now at 8eb14e2 fix broken CL entry
Note: checking out '8eb14e2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8eb14e2... fix broken CL entry
Deleted branch temp-test-branch (was 8eb14e2).
Fail to build gcc for commit [8eb14e2], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d1fe6168c0c4a9c5bba9e04afea5aad5cc7dc2bb] m68k.h (EXTRA_CONSTRAINT): add 'U' for register offset addressing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d1fe616]
+---------------------------------------- Current commit hash: [d1fe616] ----------------------------------------+
Building GCC for commit [d1fe616]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d1fe616 m68k.h (EXTRA_CONSTRAINT): add 'U' for register offset addressing.
HEAD is now at d1fe616 m68k.h (EXTRA_CONSTRAINT): add 'U' for register offset addressing.
Note: checking out 'd1fe616'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d1fe616... m68k.h (EXTRA_CONSTRAINT): add 'U' for register offset addressing.
Deleted branch temp-test-branch (was d1fe616).
Fail to build gcc for commit [d1fe616], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[e584e50152ea99c4f44f48a79a308cba7645c241] * trans-const.c (gfc_conv_mpf_to_tree): Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e584e50]
+---------------------------------------- Current commit hash: [e584e50] ----------------------------------------+
Building GCC for commit [e584e50]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e584e50 * trans-const.c (gfc_conv_mpf_to_tree): Fix typo.
HEAD is now at e584e50 * trans-const.c (gfc_conv_mpf_to_tree): Fix typo.
Note: checking out 'e584e50'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e584e50... * trans-const.c (gfc_conv_mpf_to_tree): Fix typo.
Deleted branch temp-test-branch (was e584e50).
Fail to build gcc for commit [e584e50], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[1ea7e6ad84d890cc6d002e9e698055de85a28cfd] c-common.c, [...]: Fix comment typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ea7e6a]
+---------------------------------------- Current commit hash: [1ea7e6a] ----------------------------------------+
Building GCC for commit [1ea7e6a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ea7e6a c-common.c, [...]: Fix comment typos.
HEAD is now at 1ea7e6a c-common.c, [...]: Fix comment typos.
Note: checking out '1ea7e6a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ea7e6a... c-common.c, [...]: Fix comment typos.
Deleted branch temp-test-branch (was 1ea7e6a).
Fail to build gcc for commit [1ea7e6a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca] Fix typos (missing closing parentheses)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d55b55a]
+---------------------------------------- Current commit hash: [d55b55a] ----------------------------------------+
Building GCC for commit [d55b55a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d55b55a Fix typos (missing closing parentheses)
HEAD is now at d55b55a Fix typos (missing closing parentheses)
Note: checking out 'd55b55a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d55b55a... Fix typos (missing closing parentheses)
Deleted branch temp-test-branch (was d55b55a).
Fail to build gcc for commit [d55b55a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[132da1a5aa17e496019e1603ce3d59fe1e61d44d] c-typeck.c (comptypes, [...]): Remove flags parameter.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [132da1a]
+---------------------------------------- Current commit hash: [132da1a] ----------------------------------------+
Building GCC for commit [132da1a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 132da1a c-typeck.c (comptypes, [...]): Remove flags parameter.
HEAD is now at 132da1a c-typeck.c (comptypes, [...]): Remove flags parameter.
Note: checking out '132da1a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 132da1a... c-typeck.c (comptypes, [...]): Remove flags parameter.
Deleted branch temp-test-branch (was 132da1a).
Fail to build gcc for commit [132da1a], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[0aea6467d5022e3858bfed5ce5d24aa877bfed1a] Multiple fixes: PRs 14692, 15274 and 15463
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0aea646]
+---------------------------------------- Current commit hash: [0aea646] ----------------------------------------+
Building GCC for commit [0aea646]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0aea646 Multiple fixes: PRs 14692, 15274 and 15463
HEAD is now at 0aea646 Multiple fixes: PRs 14692, 15274 and 15463
Note: checking out '0aea646'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0aea646... Multiple fixes: PRs 14692, 15274 and 15463
Deleted branch temp-test-branch (was 0aea646).
Fail to build gcc for commit [0aea646], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[662ef0f5c62f781c4d20406ee11333c63bac8eef] re PR fortran/12841 (passing null to a subroutine)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [662ef0f]
+---------------------------------------- Current commit hash: [662ef0f] ----------------------------------------+
Building GCC for commit [662ef0f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 662ef0f re PR fortran/12841 (passing null to a subroutine)
HEAD is now at 662ef0f re PR fortran/12841 (passing null to a subroutine)
Note: checking out '662ef0f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 662ef0f... re PR fortran/12841 (passing null to a subroutine)
Deleted branch temp-test-branch (was 662ef0f).
Fail to build gcc for commit [662ef0f], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[6bc709c1c5cf974a180d9fe141594aee17285e8a] re PR target/15383 (__float128 function name is used for long double)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6bc709c]
+---------------------------------------- Current commit hash: [6bc709c] ----------------------------------------+
Building GCC for commit [6bc709c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6bc709c re PR target/15383 (__float128 function name is used for long double)
HEAD is now at 6bc709c re PR target/15383 (__float128 function name is used for long double)
Note: checking out '6bc709c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6bc709c... re PR target/15383 (__float128 function name is used for long double)
Deleted branch temp-test-branch (was 6bc709c).
Fail to build gcc for commit [6bc709c], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[44a4b8db079e3cb2ca6f059289b34d521ef8ada5] * javax/swing/plaf/basic/BasicMenuUI.java:
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [44a4b8d]
+---------------------------------------- Current commit hash: [44a4b8d] ----------------------------------------+
Building GCC for commit [44a4b8d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 44a4b8d * javax/swing/plaf/basic/BasicMenuUI.java:
HEAD is now at 44a4b8d * javax/swing/plaf/basic/BasicMenuUI.java:
Note: checking out '44a4b8d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 44a4b8d... * javax/swing/plaf/basic/BasicMenuUI.java:
Deleted branch temp-test-branch (was 44a4b8d).
Fail to build gcc for commit [44a4b8d], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[b8850dd24642e8db12cb09726aaad3295c0b10c4] common.opt (ftree-loop-optimize): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b8850dd]
+---------------------------------------- Current commit hash: [b8850dd] ----------------------------------------+
Building GCC for commit [b8850dd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b8850dd common.opt (ftree-loop-optimize): Remove.
HEAD is now at b8850dd common.opt (ftree-loop-optimize): Remove.
Note: checking out 'b8850dd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b8850dd... common.opt (ftree-loop-optimize): Remove.
Deleted branch temp-test-branch (was b8850dd).
Fail to build gcc for commit [b8850dd], skip this commit. Return 125.
Bisecting: 564 revisions left to test after this (roughly 9 steps)
[ac1a20aec53364d77f3bdff94a2a0a06840e0fe9] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ac1a20a]
+---------------------------------------- Current commit hash: [ac1a20a] ----------------------------------------+
GCC for commit [ac1a20a] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-ac1a20a/bin/gcc with -O1:
1
Output of /tmp/gcc-ac1a20a/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at ac1a20a... Daily bump.
[32m[     info][0m Current commit [ac1a20a] is good. Return value: 0

Bisecting: 563 revisions left to test after this (roughly 9 steps)
[2ec5cdadd47eaa80ba29800a6136aa245c1f067c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2ec5cda]
+---------------------------------------- Current commit hash: [2ec5cda] ----------------------------------------+
Building GCC for commit [2ec5cda]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2ec5cda Daily bump.
HEAD is now at 2ec5cda Daily bump.
Note: checking out '2ec5cda'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2ec5cda... Daily bump.
Deleted branch temp-test-branch (was 2ec5cda).
Fail to build gcc for commit [2ec5cda], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[c15190ecef2cdd2ff2df390e2cb5197ea585c9de] re PR testsuite/10819 (testsuite creates CR+LF on compiler version lines in test summary files)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c15190e]
+---------------------------------------- Current commit hash: [c15190e] ----------------------------------------+
Building GCC for commit [c15190e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c15190e re PR testsuite/10819 (testsuite creates CR+LF on compiler version lines in test summary files)
HEAD is now at c15190e re PR testsuite/10819 (testsuite creates CR+LF on compiler version lines in test summary files)
Note: checking out 'c15190e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c15190e... re PR testsuite/10819 (testsuite creates CR+LF on compiler version lines in test summary files)
Deleted branch temp-test-branch (was c15190e).
Fail to build gcc for commit [c15190e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[a3e14d3983d8215c01b29154edbe1927dcfe79af] abi.html (libgcc_s): Additions suggested by Matthias Klose.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a3e14d3]
+---------------------------------------- Current commit hash: [a3e14d3] ----------------------------------------+
Building GCC for commit [a3e14d3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a3e14d3 abi.html (libgcc_s): Additions suggested by Matthias Klose.
HEAD is now at a3e14d3 abi.html (libgcc_s): Additions suggested by Matthias Klose.
Note: checking out 'a3e14d3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a3e14d3... abi.html (libgcc_s): Additions suggested by Matthias Klose.
Deleted branch temp-test-branch (was a3e14d3).
Fail to build gcc for commit [a3e14d3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[794532221c938e911c0dbb11875140882a86275f] re PR other/15194 (Fastjar configure needlessly fails without long long)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7945322]
+---------------------------------------- Current commit hash: [7945322] ----------------------------------------+
Building GCC for commit [7945322]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7945322 re PR other/15194 (Fastjar configure needlessly fails without long long)
HEAD is now at 7945322 re PR other/15194 (Fastjar configure needlessly fails without long long)
Note: checking out '7945322'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7945322... re PR other/15194 (Fastjar configure needlessly fails without long long)
Deleted branch temp-test-branch (was 7945322).
Fail to build gcc for commit [7945322], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[c1c52409c7f80e9656eb8a1a9e09f7f29f1c866a] * intrinsic.c (add_subroutines): Use add_sym_3s for random_seed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c1c5240]
+---------------------------------------- Current commit hash: [c1c5240] ----------------------------------------+
Building GCC for commit [c1c5240]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c1c5240 * intrinsic.c (add_subroutines): Use add_sym_3s for random_seed.
HEAD is now at c1c5240 * intrinsic.c (add_subroutines): Use add_sym_3s for random_seed.
Note: checking out 'c1c5240'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c1c5240... * intrinsic.c (add_subroutines): Use add_sym_3s for random_seed.
Deleted branch temp-test-branch (was c1c5240).
Fail to build gcc for commit [c1c5240], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[0e7b565cbf161851bc77eb48d5618dff3434d497] Fix format in (and bug number):
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0e7b565]
+---------------------------------------- Current commit hash: [0e7b565] ----------------------------------------+
Building GCC for commit [0e7b565]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0e7b565 Fix format in (and bug number):
HEAD is now at 0e7b565 Fix format in (and bug number):
Note: checking out '0e7b565'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0e7b565... Fix format in (and bug number):
Deleted branch temp-test-branch (was 0e7b565).
Fail to build gcc for commit [0e7b565], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[68ca19239c5b844c4f9b82776d2c18d991b880bb] t-rs6000: Remove the disabling -Werror.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [68ca192]
+---------------------------------------- Current commit hash: [68ca192] ----------------------------------------+
Building GCC for commit [68ca192]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 68ca192 t-rs6000: Remove the disabling -Werror.
HEAD is now at 68ca192 t-rs6000: Remove the disabling -Werror.
Note: checking out '68ca192'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 68ca192... t-rs6000: Remove the disabling -Werror.
Deleted branch temp-test-branch (was 68ca192).
Fail to build gcc for commit [68ca192], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[e2296cc21da00e27eaa1add49748c495fc7a0876] * gfortran.fortran-torture/execute/der_init_3.f90: Fix syntax error.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e2296cc]
+---------------------------------------- Current commit hash: [e2296cc] ----------------------------------------+
Building GCC for commit [e2296cc]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e2296cc * gfortran.fortran-torture/execute/der_init_3.f90: Fix syntax error.
HEAD is now at e2296cc * gfortran.fortran-torture/execute/der_init_3.f90: Fix syntax error.
Note: checking out 'e2296cc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e2296cc... * gfortran.fortran-torture/execute/der_init_3.f90: Fix syntax error.
Deleted branch temp-test-branch (was e2296cc).
Fail to build gcc for commit [e2296cc], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[4dfcdad172a0959dbbbbe5084b393ba8995c67dd] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4dfcdad]
+---------------------------------------- Current commit hash: [4dfcdad] ----------------------------------------+
Building GCC for commit [4dfcdad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4dfcdad [multiple changes]
HEAD is now at 4dfcdad [multiple changes]
Note: checking out '4dfcdad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4dfcdad... [multiple changes]
Deleted branch temp-test-branch (was 4dfcdad).
Fail to build gcc for commit [4dfcdad], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[838d430929f683ab4315032d9dda8e1d5f2be8e2] concurrence.h (__gnu_cxx::lock): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [838d430]
+---------------------------------------- Current commit hash: [838d430] ----------------------------------------+
Building GCC for commit [838d430]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 838d430 concurrence.h (__gnu_cxx::lock): New.
HEAD is now at 838d430 concurrence.h (__gnu_cxx::lock): New.
Note: checking out '838d430'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 838d430... concurrence.h (__gnu_cxx::lock): New.
Deleted branch temp-test-branch (was 838d430).
Fail to build gcc for commit [838d430], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[cfb6b4b8c3c01be5a1d43695c9d2988838f2254a] re PR java/13948 (GCJ segmentation fault while compiling GL4Java .class files)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cfb6b4b]
+---------------------------------------- Current commit hash: [cfb6b4b] ----------------------------------------+
Building GCC for commit [cfb6b4b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cfb6b4b re PR java/13948 (GCJ segmentation fault while compiling GL4Java .class files)
HEAD is now at cfb6b4b re PR java/13948 (GCJ segmentation fault while compiling GL4Java .class files)
Note: checking out 'cfb6b4b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cfb6b4b... re PR java/13948 (GCJ segmentation fault while compiling GL4Java .class files)
Deleted branch temp-test-branch (was cfb6b4b).
Fail to build gcc for commit [cfb6b4b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[3953b22e753306e566430affbdacb1fe18f0cf2c] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3953b22]
+---------------------------------------- Current commit hash: [3953b22] ----------------------------------------+
Building GCC for commit [3953b22]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3953b22 Daily bump.
HEAD is now at 3953b22 Daily bump.
Note: checking out '3953b22'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3953b22... Daily bump.
Deleted branch temp-test-branch (was 3953b22).
Fail to build gcc for commit [3953b22], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d601c996f8b9b16383ec49f4a294e09e3bec83c4] * builtins.def (__builtin_expect):  Mark the function as const&nothrow.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d601c99]
+---------------------------------------- Current commit hash: [d601c99] ----------------------------------------+
Building GCC for commit [d601c99]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d601c99 * builtins.def (__builtin_expect):  Mark the function as const&nothrow.
HEAD is now at d601c99 * builtins.def (__builtin_expect):  Mark the function as const&nothrow.
Note: checking out 'd601c99'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d601c99... * builtins.def (__builtin_expect):  Mark the function as const&nothrow.
Deleted branch temp-test-branch (was d601c99).
Fail to build gcc for commit [d601c99], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[fb89e8bd0619dc59d72cc2d4bf7a8b17c699564a] dump-parse-tree.c (gfc_show_array_ref): Print colon only for ranges when dumping array references.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fb89e8b]
+---------------------------------------- Current commit hash: [fb89e8b] ----------------------------------------+
Building GCC for commit [fb89e8b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fb89e8b dump-parse-tree.c (gfc_show_array_ref): Print colon only for ranges when dumping array references.
HEAD is now at fb89e8b dump-parse-tree.c (gfc_show_array_ref): Print colon only for ranges when dumping array references.
Note: checking out 'fb89e8b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fb89e8b... dump-parse-tree.c (gfc_show_array_ref): Print colon only for ranges when dumping array references.
Deleted branch temp-test-branch (was fb89e8b).
Fail to build gcc for commit [fb89e8b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[de29c8bc564fc70a942f13f114eea4430b105e08] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de29c8b]
+---------------------------------------- Current commit hash: [de29c8b] ----------------------------------------+
Building GCC for commit [de29c8b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de29c8b Daily bump.
HEAD is now at de29c8b Daily bump.
Note: checking out 'de29c8b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de29c8b... Daily bump.
Deleted branch temp-test-branch (was de29c8b).
Fail to build gcc for commit [de29c8b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[61f0ccffa36f96fc1a1f20fd8d4ec2bfb911140d] arm.h (TARGET_APCS_32): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [61f0ccf]
+---------------------------------------- Current commit hash: [61f0ccf] ----------------------------------------+
Building GCC for commit [61f0ccf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 61f0ccf arm.h (TARGET_APCS_32): Delete.
HEAD is now at 61f0ccf arm.h (TARGET_APCS_32): Delete.
Note: checking out '61f0ccf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 61f0ccf... arm.h (TARGET_APCS_32): Delete.
Deleted branch temp-test-branch (was 61f0ccf).
Fail to build gcc for commit [61f0ccf], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[325c36911589375105e5437c513bf880aeffdc75] c-common.c (lang_gimplify_stmt): Remove next_p argument.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [325c369]
+---------------------------------------- Current commit hash: [325c369] ----------------------------------------+
Building GCC for commit [325c369]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 325c369 c-common.c (lang_gimplify_stmt): Remove next_p argument.
HEAD is now at 325c369 c-common.c (lang_gimplify_stmt): Remove next_p argument.
Note: checking out '325c369'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 325c369... c-common.c (lang_gimplify_stmt): Remove next_p argument.
Deleted branch temp-test-branch (was 325c369).
Fail to build gcc for commit [325c369], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[0cc3dda8302dcb7e042fccd493b1810118450f93] * config/arm/arm.c (arm_output_epilogue): Remove excess checks.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0cc3dda]
+---------------------------------------- Current commit hash: [0cc3dda] ----------------------------------------+
Building GCC for commit [0cc3dda]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0cc3dda * config/arm/arm.c (arm_output_epilogue): Remove excess checks.
HEAD is now at 0cc3dda * config/arm/arm.c (arm_output_epilogue): Remove excess checks.
Note: checking out '0cc3dda'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0cc3dda... * config/arm/arm.c (arm_output_epilogue): Remove excess checks.
Deleted branch temp-test-branch (was 0cc3dda).
Fail to build gcc for commit [0cc3dda], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d0b25f9a2b786f80b5a794f99732b7653afb1ec4] * convert.h: Add include guards
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d0b25f9]
+---------------------------------------- Current commit hash: [d0b25f9] ----------------------------------------+
Building GCC for commit [d0b25f9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d0b25f9 * convert.h: Add include guards
HEAD is now at d0b25f9 * convert.h: Add include guards
Note: checking out 'd0b25f9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d0b25f9... * convert.h: Add include guards
Deleted branch temp-test-branch (was d0b25f9).
Fail to build gcc for commit [d0b25f9], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[2ac23d05c0467d9a3b49ec8795ae783626c73914] mips.c (mips_use_dfa_pipeline_interface): Add R3000.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2ac23d0]
+---------------------------------------- Current commit hash: [2ac23d0] ----------------------------------------+
Building GCC for commit [2ac23d0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2ac23d0 mips.c (mips_use_dfa_pipeline_interface): Add R3000.
HEAD is now at 2ac23d0 mips.c (mips_use_dfa_pipeline_interface): Add R3000.
Note: checking out '2ac23d0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2ac23d0... mips.c (mips_use_dfa_pipeline_interface): Add R3000.
Deleted branch temp-test-branch (was 2ac23d0).
Fail to build gcc for commit [2ac23d0], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[0792ab197b3956a2631a7b46f773ba11045357bc] expmed.c (synth_mult): Mask bits of the multiplier to the machine mode of the multiplication.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0792ab1]
+---------------------------------------- Current commit hash: [0792ab1] ----------------------------------------+
Building GCC for commit [0792ab1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0792ab1 expmed.c (synth_mult): Mask bits of the multiplier to the machine mode of the multiplication.
HEAD is now at 0792ab1 expmed.c (synth_mult): Mask bits of the multiplier to the machine mode of the multiplication.
Note: checking out '0792ab1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0792ab1... expmed.c (synth_mult): Mask bits of the multiplier to the machine mode of the multiplication.
Deleted branch temp-test-branch (was 0792ab1).
Fail to build gcc for commit [0792ab1], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[43d95aeec1b9a4b12a47abd6b3b9ad50fe74e08a] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [43d95ae]
+---------------------------------------- Current commit hash: [43d95ae] ----------------------------------------+
Building GCC for commit [43d95ae]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 43d95ae Daily bump.
HEAD is now at 43d95ae Daily bump.
Note: checking out '43d95ae'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 43d95ae... Daily bump.
Deleted branch temp-test-branch (was 43d95ae).
Fail to build gcc for commit [43d95ae], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9ac926b19711f9c51b3bad33c6e6348af5c8796b] Added .cvsignore entry for autom4te.cache to boehm-gc, libffi and libmudflap.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9ac926b]
+---------------------------------------- Current commit hash: [9ac926b] ----------------------------------------+
Building GCC for commit [9ac926b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9ac926b Added .cvsignore entry for autom4te.cache to boehm-gc, libffi and libmudflap.
HEAD is now at 9ac926b Added .cvsignore entry for autom4te.cache to boehm-gc, libffi and
Note: checking out '9ac926b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9ac926b... Added .cvsignore entry for autom4te.cache to boehm-gc, libffi and libmudflap.
Deleted branch temp-test-branch (was 9ac926b).
Fail to build gcc for commit [9ac926b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[65355d53c368e290265d38f822b1bbb8b3d23c69] c-gimplify.c (gimplify_decl_stmt): Update gimplify_type_sizes call.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [65355d5]
+---------------------------------------- Current commit hash: [65355d5] ----------------------------------------+
Building GCC for commit [65355d5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 65355d5 c-gimplify.c (gimplify_decl_stmt): Update gimplify_type_sizes call.
HEAD is now at 65355d5 c-gimplify.c (gimplify_decl_stmt): Update gimplify_type_sizes call.
Note: checking out '65355d5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 65355d5... c-gimplify.c (gimplify_decl_stmt): Update gimplify_type_sizes call.
Deleted branch temp-test-branch (was 65355d5).
Fail to build gcc for commit [65355d5], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[bfefd4d5906bb0ab37cd58049b1aa6cc48e07e4a] altivec.h (vec_ctf, [...]): Remove type checks for integral parameters and literals from '..._args_eq' macros.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bfefd4d]
+---------------------------------------- Current commit hash: [bfefd4d] ----------------------------------------+
Building GCC for commit [bfefd4d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bfefd4d altivec.h (vec_ctf, [...]): Remove type checks for integral parameters and literals from '..._args_eq' macros.
HEAD is now at bfefd4d altivec.h (vec_ctf, [...]): Remove type checks for integral parameters and literals from '..._args_eq' macros.
Note: checking out 'bfefd4d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bfefd4d... altivec.h (vec_ctf, [...]): Remove type checks for integral parameters and literals from '..._args_eq' macros.
Deleted branch temp-test-branch (was bfefd4d).
Fail to build gcc for commit [bfefd4d], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[b4117c306105c7e3279bbbabab1dd361a3b35b62] Makefile.def, [...]: Remove all mention of libf2c.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b4117c3]
+---------------------------------------- Current commit hash: [b4117c3] ----------------------------------------+
Building GCC for commit [b4117c3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b4117c3 Makefile.def, [...]: Remove all mention of libf2c.
HEAD is now at b4117c3 Makefile.def, [...]: Remove all mention of libf2c.
Note: checking out 'b4117c3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b4117c3... Makefile.def, [...]: Remove all mention of libf2c.
Deleted branch temp-test-branch (was b4117c3).
Fail to build gcc for commit [b4117c3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[353c3b7e16645aa9e2be04e80707e256965642e4] trans-common.c (find_equivalence): Find multiple rules.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [353c3b7]
+---------------------------------------- Current commit hash: [353c3b7] ----------------------------------------+
Building GCC for commit [353c3b7]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 353c3b7 trans-common.c (find_equivalence): Find multiple rules.
HEAD is now at 353c3b7 trans-common.c (find_equivalence): Find multiple rules.
Note: checking out '353c3b7'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 353c3b7... trans-common.c (find_equivalence): Find multiple rules.
Deleted branch temp-test-branch (was 353c3b7).
Fail to build gcc for commit [353c3b7], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[815c519159b70c32e1cf201a53fce22260a9e1fd] parse.y (create_class): Correct diagnostic message about java.lang.Object extending anything else.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [815c519]
+---------------------------------------- Current commit hash: [815c519] ----------------------------------------+
Building GCC for commit [815c519]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 815c519 parse.y (create_class): Correct diagnostic message about java.lang.Object extending anything else.
HEAD is now at 815c519 parse.y (create_class): Correct diagnostic message about java.lang.Object extending anything else.
Note: checking out '815c519'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 815c519... parse.y (create_class): Correct diagnostic message about java.lang.Object extending anything else.
Deleted branch temp-test-branch (was 815c519).
Fail to build gcc for commit [815c519], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[715f8bb802ecb1ab114f8b904fa376f40ccb50c7] sparc.h: Correct comment about availability of little endian option.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [715f8bb]
+---------------------------------------- Current commit hash: [715f8bb] ----------------------------------------+
Building GCC for commit [715f8bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 715f8bb sparc.h: Correct comment about availability of little endian option.
HEAD is now at 715f8bb sparc.h: Correct comment about availability of little endian option.
Note: checking out '715f8bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 715f8bb... sparc.h: Correct comment about availability of little endian option.
Deleted branch temp-test-branch (was 715f8bb).
Fail to build gcc for commit [715f8bb], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[f6bf7bb617bc7d39715803f8915c6b77316eac25] Radar #: 3701874
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f6bf7bb]
+---------------------------------------- Current commit hash: [f6bf7bb] ----------------------------------------+
Building GCC for commit [f6bf7bb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f6bf7bb Radar #: 3701874
HEAD is now at f6bf7bb Radar #: 3701874
Note: checking out 'f6bf7bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f6bf7bb... Radar #: 3701874
Deleted branch temp-test-branch (was f6bf7bb).
Fail to build gcc for commit [f6bf7bb], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[27d14326c700db52c1cbc2b61e1875165aac78d4] MPN.java, Arc2D.java: Fixed javadocs all over.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [27d1432]
+---------------------------------------- Current commit hash: [27d1432] ----------------------------------------+
Building GCC for commit [27d1432]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 27d1432 MPN.java, Arc2D.java: Fixed javadocs all over.
HEAD is now at 27d1432 MPN.java, Arc2D.java: Fixed javadocs all over.
Note: checking out '27d1432'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 27d1432... MPN.java, Arc2D.java: Fixed javadocs all over.
Deleted branch temp-test-branch (was 27d1432).
Fail to build gcc for commit [27d1432], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[cae80939b64ac547c253fbb53f4c91c67d9e8ad5] re PR rtl-optimization/14782 (produces an unaligned data access at -O2)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cae8093]
+---------------------------------------- Current commit hash: [cae8093] ----------------------------------------+
Building GCC for commit [cae8093]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cae8093 re PR rtl-optimization/14782 (produces an unaligned data access at -O2)
HEAD is now at cae8093 re PR rtl-optimization/14782 (produces an unaligned data access at -O2)
Note: checking out 'cae8093'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cae8093... re PR rtl-optimization/14782 (produces an unaligned data access at -O2)
Deleted branch temp-test-branch (was cae8093).
Fail to build gcc for commit [cae8093], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[a308828af32b834538eb9b2b9c3833aab6898790] All right, I'm in!  Working on apple-ppc-branch for now, mostly testing.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a308828]
+---------------------------------------- Current commit hash: [a308828] ----------------------------------------+
Building GCC for commit [a308828]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a308828 All right, I'm in!  Working on apple-ppc-branch for now, mostly testing.
HEAD is now at a308828 All right, I'm in!  Working on apple-ppc-branch for now, mostly testing.
Note: checking out 'a308828'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a308828... All right, I'm in!  Working on apple-ppc-branch for now, mostly testing.
Deleted branch temp-test-branch (was a308828).
Fail to build gcc for commit [a308828], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[84c672b950e3427d9abb5b74d635e586bda74c4e] tree-ssa-phiopt.c (value_replacement): Handle the case where the desired edge out of COND_BLOCK reaches OTHER_BLOCK...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [84c672b]
+---------------------------------------- Current commit hash: [84c672b] ----------------------------------------+
Building GCC for commit [84c672b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 84c672b tree-ssa-phiopt.c (value_replacement): Handle the case where the desired edge out of COND_BLOCK reaches OTHER_BLOCK...
HEAD is now at 84c672b tree-ssa-phiopt.c (value_replacement): Handle the case where the desired edge out of COND_BLOCK reaches OTHER_BLOCK...
Note: checking out '84c672b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 84c672b... tree-ssa-phiopt.c (value_replacement): Handle the case where the desired edge out of COND_BLOCK reaches OTHER_BLOCK...
Deleted branch temp-test-branch (was 84c672b).
Fail to build gcc for commit [84c672b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[789550d1160af7a82194959803c027828ba5723e] Fixed 2005-05-25 entry to mention that rtlhooks-def.h was added.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [789550d]
+---------------------------------------- Current commit hash: [789550d] ----------------------------------------+
Building GCC for commit [789550d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 789550d Fixed 2005-05-25 entry to mention that rtlhooks-def.h was added.
HEAD is now at 789550d Fixed 2005-05-25 entry to mention that rtlhooks-def.h was added.
Note: checking out '789550d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 789550d... Fixed 2005-05-25 entry to mention that rtlhooks-def.h was added.
Deleted branch temp-test-branch (was 789550d).
Fail to build gcc for commit [789550d], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[979bf9a120b592b4b7002424a44bf4b9b0854596] java-gimplify.c (java_gimplify_block): set TREE_USED on the new block.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [979bf9a]
+---------------------------------------- Current commit hash: [979bf9a] ----------------------------------------+
Building GCC for commit [979bf9a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 979bf9a java-gimplify.c (java_gimplify_block): set TREE_USED on the new block.
HEAD is now at 979bf9a java-gimplify.c (java_gimplify_block): set TREE_USED on the new block.
Note: checking out '979bf9a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 979bf9a... java-gimplify.c (java_gimplify_block): set TREE_USED on the new block.
Deleted branch temp-test-branch (was 979bf9a).
Fail to build gcc for commit [979bf9a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ed7f23690a8c1cf8295cf151719d7b07f7b68bce] PR java/1207, java/16178
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ed7f236]
+---------------------------------------- Current commit hash: [ed7f236] ----------------------------------------+
Building GCC for commit [ed7f236]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ed7f236 PR java/1207, java/16178
HEAD is now at ed7f236 PR java/1207, java/16178
Note: checking out 'ed7f236'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ed7f236... PR java/1207, java/16178
Deleted branch temp-test-branch (was ed7f236).
Fail to build gcc for commit [ed7f236], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[2e24fa83ab8d4c5c532e98f0fd005e4f20c833fc] * tree-ssa-pre.c (compute_antic): Keep BB_VISITED flag zeroed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2e24fa8]
+---------------------------------------- Current commit hash: [2e24fa8] ----------------------------------------+
Building GCC for commit [2e24fa8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2e24fa8 * tree-ssa-pre.c (compute_antic): Keep BB_VISITED flag zeroed.
HEAD is now at 2e24fa8 * tree-ssa-pre.c (compute_antic): Keep BB_VISITED flag zeroed.
Note: checking out '2e24fa8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2e24fa8... * tree-ssa-pre.c (compute_antic): Keep BB_VISITED flag zeroed.
Deleted branch temp-test-branch (was 2e24fa8).
Fail to build gcc for commit [2e24fa8], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[1ab3a0ade68ce42d89502f7eae5674df245de360] re PR libstdc++/16210 ([3.4 only] gratuitously omits "long long" I/O)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ab3a0a]
+---------------------------------------- Current commit hash: [1ab3a0a] ----------------------------------------+
Building GCC for commit [1ab3a0a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ab3a0a re PR libstdc++/16210 ([3.4 only] gratuitously omits "long long" I/O)
HEAD is now at 1ab3a0a re PR libstdc++/16210 ([3.4 only] gratuitously omits "long long" I/O)
Note: checking out '1ab3a0a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ab3a0a... re PR libstdc++/16210 ([3.4 only] gratuitously omits "long long" I/O)
Deleted branch temp-test-branch (was 1ab3a0a).
Fail to build gcc for commit [1ab3a0a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ebca59c355524893ef3facf6ad12074e4661348e] re PR target/15941 (new fails gcc.dg/compat/struct-by-value-11 and gcc.dg/compat/struct-by-value-1)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ebca59c]
+---------------------------------------- Current commit hash: [ebca59c] ----------------------------------------+
Building GCC for commit [ebca59c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ebca59c re PR target/15941 (new fails gcc.dg/compat/struct-by-value-11 and gcc.dg/compat/struct-by-value-1)
HEAD is now at ebca59c re PR target/15941 (new fails gcc.dg/compat/struct-by-value-11 and gcc.dg/compat/struct-by-value-1)
Note: checking out 'ebca59c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ebca59c... re PR target/15941 (new fails gcc.dg/compat/struct-by-value-11 and gcc.dg/compat/struct-by-value-1)
Deleted branch temp-test-branch (was ebca59c).
Fail to build gcc for commit [ebca59c], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[6ef30017a0e7c6855a1e679f6934f65260845b5d] re PR tree-optimization/15089 (local register variable with a specified register is bad)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ef3001]
+---------------------------------------- Current commit hash: [6ef3001] ----------------------------------------+
Building GCC for commit [6ef3001]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ef3001 re PR tree-optimization/15089 (local register variable with a specified register is bad)
HEAD is now at 6ef3001 re PR tree-optimization/15089 (local register variable with a specified register is bad)
Note: checking out '6ef3001'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ef3001... re PR tree-optimization/15089 (local register variable with a specified register is bad)
Deleted branch temp-test-branch (was 6ef3001).
Fail to build gcc for commit [6ef3001], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[fea6ecb7464fd19e3981a6297a30ecc7981de4b2] re PR libstdc++/15565 ([3.4 only] SLES9: leading + sign for unsigned int with showpos)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fea6ecb]
+---------------------------------------- Current commit hash: [fea6ecb] ----------------------------------------+
Building GCC for commit [fea6ecb]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fea6ecb re PR libstdc++/15565 ([3.4 only] SLES9: leading + sign for unsigned int with showpos)
HEAD is now at fea6ecb re PR libstdc++/15565 ([3.4 only] SLES9: leading + sign for unsigned int with showpos)
Note: checking out 'fea6ecb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fea6ecb... re PR libstdc++/15565 ([3.4 only] SLES9: leading + sign for unsigned int with showpos)
Deleted branch temp-test-branch (was fea6ecb).
Fail to build gcc for commit [fea6ecb], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[6c875a31e1d906f9821e558cd4da65fe39e2160d] tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP rather than iterating through the blocks testing...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6c875a3]
+---------------------------------------- Current commit hash: [6c875a3] ----------------------------------------+
Building GCC for commit [6c875a3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6c875a3 tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP rather than iterating through the blocks testing...
HEAD is now at 6c875a3 tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP rather than iterating through the blocks testing...
Note: checking out '6c875a3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6c875a3... tree-into-ssa.c (compute_global_livein): Use EXECUTE_IF_SET_IN_BITMAP rather than iterating through the blocks testing...
Deleted branch temp-test-branch (was 6c875a3).
Fail to build gcc for commit [6c875a3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[7465ed07083691bf03e737e8709afa0e20c5f82f] tree-eh.c (decide_copy_try_finally): Fix scaling of copy and switch estimates.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7465ed0]
+---------------------------------------- Current commit hash: [7465ed0] ----------------------------------------+
Building GCC for commit [7465ed0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7465ed0 tree-eh.c (decide_copy_try_finally): Fix scaling of copy and switch estimates.
HEAD is now at 7465ed0 tree-eh.c (decide_copy_try_finally): Fix scaling of copy and switch estimates.
Note: checking out '7465ed0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7465ed0... tree-eh.c (decide_copy_try_finally): Fix scaling of copy and switch estimates.
Deleted branch temp-test-branch (was 7465ed0).
Fail to build gcc for commit [7465ed0], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[187f073476404d31fb0c72ef3767168238bafbc6] format.c: (parse_format_list): No comma is required after P descriptor.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [187f073]
+---------------------------------------- Current commit hash: [187f073] ----------------------------------------+
Building GCC for commit [187f073]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 187f073 format.c: (parse_format_list): No comma is required after P descriptor.
HEAD is now at 187f073 format.c: (parse_format_list): No comma is required after P descriptor.
Note: checking out '187f073'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 187f073... format.c: (parse_format_list): No comma is required after P descriptor.
Deleted branch temp-test-branch (was 187f073).
Fail to build gcc for commit [187f073], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d6dc556b315b8e1b99922eda0319548ecb5233e9] builtins.c (expand_builtin_strstr, [...]): Replace calls to build with calls to build2, build3 or omit_one_operand.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d6dc556]
+---------------------------------------- Current commit hash: [d6dc556] ----------------------------------------+
Building GCC for commit [d6dc556]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d6dc556 builtins.c (expand_builtin_strstr, [...]): Replace calls to build with calls to build2, build3 or omit_one_operand.
HEAD is now at d6dc556 builtins.c (expand_builtin_strstr, [...]): Replace calls to build with calls to build2, build3 or omit_one_operand.
Note: checking out 'd6dc556'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d6dc556... builtins.c (expand_builtin_strstr, [...]): Replace calls to build with calls to build2, build3 or omit_one_operand.
Deleted branch temp-test-branch (was d6dc556).
Fail to build gcc for commit [d6dc556], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9fc4d79ba4e0abc41cb6ee48debc6a2308f22a75] Make-lang.in, [...]: Update copyright years and boilerplate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9fc4d79]
+---------------------------------------- Current commit hash: [9fc4d79] ----------------------------------------+
Building GCC for commit [9fc4d79]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9fc4d79 Make-lang.in, [...]: Update copyright years and boilerplate.
HEAD is now at 9fc4d79 Make-lang.in, [...]: Update copyright years and boilerplate.
Note: checking out '9fc4d79'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9fc4d79... Make-lang.in, [...]: Update copyright years and boilerplate.
Deleted branch temp-test-branch (was 9fc4d79).
Fail to build gcc for commit [9fc4d79], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ed2e7facb5baeca99a77e2c4efecdb5518890c27] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ed2e7fa]
+---------------------------------------- Current commit hash: [ed2e7fa] ----------------------------------------+
Building GCC for commit [ed2e7fa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ed2e7fa Daily bump.
HEAD is now at ed2e7fa Daily bump.
Note: checking out 'ed2e7fa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ed2e7fa... Daily bump.
Deleted branch temp-test-branch (was ed2e7fa).
Fail to build gcc for commit [ed2e7fa], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[eb6127a4f9e593f6f00a8f3b5c4c50967f9340f6] * gimplify.c: Remove unneeded forward declarations.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb6127a]
+---------------------------------------- Current commit hash: [eb6127a] ----------------------------------------+
Building GCC for commit [eb6127a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb6127a * gimplify.c: Remove unneeded forward declarations.
HEAD is now at eb6127a * gimplify.c: Remove unneeded forward declarations.
Note: checking out 'eb6127a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb6127a... * gimplify.c: Remove unneeded forward declarations.
Deleted branch temp-test-branch (was eb6127a).
Fail to build gcc for commit [eb6127a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[148907eaa6e6cf62e8e253d6124dbd24f653dccc] configure.in: Test the ability to symlink directories.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [148907e]
+---------------------------------------- Current commit hash: [148907e] ----------------------------------------+
Building GCC for commit [148907e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 148907e configure.in: Test the ability to symlink directories.
HEAD is now at 148907e configure.in: Test the ability to symlink directories.
Note: checking out '148907e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 148907e... configure.in: Test the ability to symlink directories.
Deleted branch temp-test-branch (was 148907e).
Fail to build gcc for commit [148907e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ae0d0d592f01a1d71ee5941b241b9af75c66ef23] XGraphics.java (drawImage): Use `XOffScreenImage', not `XGraphicsConfiguration.XOffScreenImage'.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ae0d0d5]
+---------------------------------------- Current commit hash: [ae0d0d5] ----------------------------------------+
Building GCC for commit [ae0d0d5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ae0d0d5 XGraphics.java (drawImage): Use `XOffScreenImage', not `XGraphicsConfiguration.XOffScreenImage'.
HEAD is now at ae0d0d5 XGraphics.java (drawImage): Use `XOffScreenImage', not `XGraphicsConfiguration.XOffScreenImage'.
Note: checking out 'ae0d0d5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ae0d0d5... XGraphics.java (drawImage): Use `XOffScreenImage', not `XGraphicsConfiguration.XOffScreenImage'.
Deleted branch temp-test-branch (was ae0d0d5).
Fail to build gcc for commit [ae0d0d5], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9e51cf9da473db64da0af8587a27dab945890990] c-common.h (c_begin_if_stmt, [...]): Remove decls.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9e51cf9]
+---------------------------------------- Current commit hash: [9e51cf9] ----------------------------------------+
Building GCC for commit [9e51cf9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9e51cf9 c-common.h (c_begin_if_stmt, [...]): Remove decls.
HEAD is now at 9e51cf9 c-common.h (c_begin_if_stmt, [...]): Remove decls.
Note: checking out '9e51cf9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9e51cf9... c-common.h (c_begin_if_stmt, [...]): Remove decls.
Deleted branch temp-test-branch (was 9e51cf9).
Fail to build gcc for commit [9e51cf9], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[5c33bb6218a90bcab5fe88ddd0864a50be9014de] std_bitset.h: Trivial formatting fixes.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5c33bb6]
+---------------------------------------- Current commit hash: [5c33bb6] ----------------------------------------+
Building GCC for commit [5c33bb6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5c33bb6 std_bitset.h: Trivial formatting fixes.
HEAD is now at 5c33bb6 std_bitset.h: Trivial formatting fixes.
Note: checking out '5c33bb6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5c33bb6... std_bitset.h: Trivial formatting fixes.
Deleted branch temp-test-branch (was 5c33bb6).
Fail to build gcc for commit [5c33bb6], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[17192884645f6c9e6135af2e691418734bdb6aac] tree.h (PHI_CHAIN): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1719288]
+---------------------------------------- Current commit hash: [1719288] ----------------------------------------+
Building GCC for commit [1719288]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1719288 tree.h (PHI_CHAIN): New.
HEAD is now at 1719288 tree.h (PHI_CHAIN): New.
Note: checking out '1719288'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1719288... tree.h (PHI_CHAIN): New.
Deleted branch temp-test-branch (was 1719288).
Fail to build gcc for commit [1719288], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[aa7cb8c39ed27ca73f1cd6526da0abe4a114bbcd] Add a blank.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aa7cb8c]
+---------------------------------------- Current commit hash: [aa7cb8c] ----------------------------------------+
Building GCC for commit [aa7cb8c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aa7cb8c Add a blank.
HEAD is now at aa7cb8c Add a blank.
Note: checking out 'aa7cb8c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aa7cb8c... Add a blank.
Deleted branch temp-test-branch (was aa7cb8c).
Fail to build gcc for commit [aa7cb8c], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d9c75fe042245114199810c6bae601bba0aeb87f] cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d9c75fe]
+---------------------------------------- Current commit hash: [d9c75fe] ----------------------------------------+
Building GCC for commit [d9c75fe]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d9c75fe cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
HEAD is now at d9c75fe cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
Note: checking out 'd9c75fe'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d9c75fe... cfglayout.c (fixup_reorder_chain): Handle case where the destination of E_FALL is EXIT_BLOCK_PTR.
Deleted branch temp-test-branch (was d9c75fe).
Fail to build gcc for commit [d9c75fe], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[5e7752d2accb473545101b7d6096bbe599eb864c] * cp-tree.h (enum cp_storage_class): Remove trailing comma.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5e7752d]
+---------------------------------------- Current commit hash: [5e7752d] ----------------------------------------+
Building GCC for commit [5e7752d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5e7752d * cp-tree.h (enum cp_storage_class): Remove trailing comma.
HEAD is now at 5e7752d * cp-tree.h (enum cp_storage_class): Remove trailing comma.
Note: checking out '5e7752d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5e7752d... * cp-tree.h (enum cp_storage_class): Remove trailing comma.
Deleted branch temp-test-branch (was 5e7752d).
Fail to build gcc for commit [5e7752d], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[6bf3d92c78fc0736054b7dc42b5414b3caec08fe] asm5.c: New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6bf3d92]
+---------------------------------------- Current commit hash: [6bf3d92] ----------------------------------------+
Building GCC for commit [6bf3d92]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6bf3d92 asm5.c: New.
HEAD is now at 6bf3d92 asm5.c: New.
Note: checking out '6bf3d92'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6bf3d92... asm5.c: New.
Deleted branch temp-test-branch (was 6bf3d92).
Fail to build gcc for commit [6bf3d92], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[000aa32a49ae77b3703599eb9a66b9f7d0ab7032] io.h (flush): Add prototype.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [000aa32]
+---------------------------------------- Current commit hash: [000aa32] ----------------------------------------+
Building GCC for commit [000aa32]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 000aa32 io.h (flush): Add prototype.
HEAD is now at 000aa32 io.h (flush): Add prototype.
Note: checking out '000aa32'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 000aa32... io.h (flush): Add prototype.
Deleted branch temp-test-branch (was 000aa32).
Fail to build gcc for commit [000aa32], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[161b0a84ef14b9eeef2ba1d865a5056a0a7d3130] df.c (df_reg_clobber_gen): Removed.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [161b0a8]
+---------------------------------------- Current commit hash: [161b0a8] ----------------------------------------+
Building GCC for commit [161b0a8]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 161b0a8 df.c (df_reg_clobber_gen): Removed.
HEAD is now at 161b0a8 df.c (df_reg_clobber_gen): Removed.
Note: checking out '161b0a8'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 161b0a8... df.c (df_reg_clobber_gen): Removed.
Deleted branch temp-test-branch (was 161b0a8).
Fail to build gcc for commit [161b0a8], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[33c94679bde917193e6af8644598cc85b3df1645] Makefile.in (tree-vn.o): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [33c9467]
+---------------------------------------- Current commit hash: [33c9467] ----------------------------------------+
Building GCC for commit [33c9467]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 33c9467 Makefile.in (tree-vn.o): New.
HEAD is now at 33c9467 Makefile.in (tree-vn.o): New.
Note: checking out '33c9467'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 33c9467... Makefile.in (tree-vn.o): New.
Deleted branch temp-test-branch (was 33c9467).
Fail to build gcc for commit [33c9467], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[e867970356883ea35b8863edf179a3bd3f0cd69c] * combine.c (distribute_notes): Comment typo fix.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e867970]
+---------------------------------------- Current commit hash: [e867970] ----------------------------------------+
Building GCC for commit [e867970]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e867970 * combine.c (distribute_notes): Comment typo fix.
HEAD is now at e867970 * combine.c (distribute_notes): Comment typo fix.
Note: checking out 'e867970'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e867970... * combine.c (distribute_notes): Comment typo fix.
Deleted branch temp-test-branch (was e867970).
Fail to build gcc for commit [e867970], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[a2824db366a429dd08c368dc56620a92d4a6542b] Enable tree browser for all front ends.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a2824db]
+---------------------------------------- Current commit hash: [a2824db] ----------------------------------------+
Building GCC for commit [a2824db]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a2824db Enable tree browser for all front ends.
HEAD is now at a2824db Enable tree browser for all front ends.
Note: checking out 'a2824db'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a2824db... Enable tree browser for all front ends.
Deleted branch temp-test-branch (was a2824db).
Fail to build gcc for commit [a2824db], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[2966b00e88d24531be8ff24ac6c82d5cf70ae116] * config/arm/arm.c (arm_output_epilogue): Remove redundant code.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2966b00]
+---------------------------------------- Current commit hash: [2966b00] ----------------------------------------+
Building GCC for commit [2966b00]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2966b00 * config/arm/arm.c (arm_output_epilogue): Remove redundant code.
HEAD is now at 2966b00 * config/arm/arm.c (arm_output_epilogue): Remove redundant code.
Note: checking out '2966b00'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2966b00... * config/arm/arm.c (arm_output_epilogue): Remove redundant code.
Deleted branch temp-test-branch (was 2966b00).
Fail to build gcc for commit [2966b00], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[719df717e2b92a90e53f2ecbfdca858440d08fd0] * gcc.dg/loop-4.c: New test.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [719df71]
+---------------------------------------- Current commit hash: [719df71] ----------------------------------------+
Building GCC for commit [719df71]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 719df71 * gcc.dg/loop-4.c: New test.
HEAD is now at 719df71 * gcc.dg/loop-4.c: New test.
Note: checking out '719df71'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 719df71... * gcc.dg/loop-4.c: New test.
Deleted branch temp-test-branch (was 719df71).
Fail to build gcc for commit [719df71], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[4bb4ae964aaf3ef1dd86d2b595a022a9961aee5b] * stringpool.c: Add comments to PCH saving/restoring routines.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4bb4ae9]
+---------------------------------------- Current commit hash: [4bb4ae9] ----------------------------------------+
Building GCC for commit [4bb4ae9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4bb4ae9 * stringpool.c: Add comments to PCH saving/restoring routines.
HEAD is now at 4bb4ae9 * stringpool.c: Add comments to PCH saving/restoring routines.
Note: checking out '4bb4ae9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4bb4ae9... * stringpool.c: Add comments to PCH saving/restoring routines.
Deleted branch temp-test-branch (was 4bb4ae9).
Fail to build gcc for commit [4bb4ae9], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[eb8163abfbde8250b9b7450860f06f65356993ca] BytesToUnicode.java (getDecoder): Pass original encoding name to iconv.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [eb8163a]
+---------------------------------------- Current commit hash: [eb8163a] ----------------------------------------+
Building GCC for commit [eb8163a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: eb8163a BytesToUnicode.java (getDecoder): Pass original encoding name to iconv.
HEAD is now at eb8163a BytesToUnicode.java (getDecoder): Pass original encoding name to iconv.
Note: checking out 'eb8163a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at eb8163a... BytesToUnicode.java (getDecoder): Pass original encoding name to iconv.
Deleted branch temp-test-branch (was eb8163a).
Fail to build gcc for commit [eb8163a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[25178498408d82ead8eab484067152398acb7335] re PR target/15178 (Solaris 9/x86 fails linking after stage 3)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2517849]
+---------------------------------------- Current commit hash: [2517849] ----------------------------------------+
Building GCC for commit [2517849]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2517849 re PR target/15178 (Solaris 9/x86 fails linking after stage 3)
HEAD is now at 2517849 re PR target/15178 (Solaris 9/x86 fails linking after stage 3)
Note: checking out '2517849'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2517849... re PR target/15178 (Solaris 9/x86 fails linking after stage 3)
Deleted branch temp-test-branch (was 2517849).
Fail to build gcc for commit [2517849], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[76d2b81de4304f1acf7008f91c15f9fd404a6912] rs6000.c (legitimate_offset_address_p): Make global, rename rs6000_legitimate_offset_address_p.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [76d2b81]
+---------------------------------------- Current commit hash: [76d2b81] ----------------------------------------+
Building GCC for commit [76d2b81]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 76d2b81 rs6000.c (legitimate_offset_address_p): Make global, rename rs6000_legitimate_offset_address_p.
HEAD is now at 76d2b81 rs6000.c (legitimate_offset_address_p): Make global, rename rs6000_legitimate_offset_address_p.
Note: checking out '76d2b81'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 76d2b81... rs6000.c (legitimate_offset_address_p): Make global, rename rs6000_legitimate_offset_address_p.
Deleted branch temp-test-branch (was 76d2b81).
Fail to build gcc for commit [76d2b81], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9264db16997eea54e44c44a4869845f94f6102f7] * tree-ssa-copy.c (cprop_into_successor_phis): Fix typo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9264db1]
+---------------------------------------- Current commit hash: [9264db1] ----------------------------------------+
Building GCC for commit [9264db1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9264db1 * tree-ssa-copy.c (cprop_into_successor_phis): Fix typo.
HEAD is now at 9264db1 * tree-ssa-copy.c (cprop_into_successor_phis): Fix typo.
Note: checking out '9264db1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9264db1... * tree-ssa-copy.c (cprop_into_successor_phis): Fix typo.
Deleted branch temp-test-branch (was 9264db1).
Fail to build gcc for commit [9264db1], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[80dddedcaf316e1a1f3346c9cbda719b40fd28a5] std_istream.h (ignore(streamsize __n = 1, int_type __delim = traits_type::eof())): Split into...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [80ddded]
+---------------------------------------- Current commit hash: [80ddded] ----------------------------------------+
Building GCC for commit [80ddded]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 80ddded std_istream.h (ignore(streamsize __n = 1, int_type __delim = traits_type::eof())): Split into...
HEAD is now at 80ddded std_istream.h (ignore(streamsize __n = 1, int_type __delim = traits_type::eof())): Split into...
Note: checking out '80ddded'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 80ddded... std_istream.h (ignore(streamsize __n = 1, int_type __delim = traits_type::eof())): Split into...
Deleted branch temp-test-branch (was 80ddded).
Fail to build gcc for commit [80ddded], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[093ff71e715f8192ce276ed1e4adf38e657781f7] re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [093ff71]
+---------------------------------------- Current commit hash: [093ff71] ----------------------------------------+
GCC for commit [093ff71] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-093ff71/bin/gcc with -O1:
0
Output of /tmp/gcc-093ff71/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 093ff71... re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
[32m[     info][0m Current commit [093ff71] is bad. Return value: 1

Bisecting: 563 revisions left to test after this (roughly 9 steps)
[59fa6e39c6387a101c2d5c323045b5e7d55f0732] Credit Feng Wang  <fengwang@nudt.edu.cn> in ChangeLog.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [59fa6e3]
+---------------------------------------- Current commit hash: [59fa6e3] ----------------------------------------+
Building GCC for commit [59fa6e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 59fa6e3 Credit Feng Wang  <fengwang@nudt.edu.cn> in ChangeLog.
HEAD is now at 59fa6e3 Credit Feng Wang  <fengwang@nudt.edu.cn> in ChangeLog.
Note: checking out '59fa6e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 59fa6e3... Credit Feng Wang  <fengwang@nudt.edu.cn> in ChangeLog.
Deleted branch temp-test-branch (was 59fa6e3).
Fail to build gcc for commit [59fa6e3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[4b260c20138daad0b7507cdd555025bb84bf2000] abi.html: New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4b260c2]
+---------------------------------------- Current commit hash: [4b260c2] ----------------------------------------+
Building GCC for commit [4b260c2]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4b260c2 abi.html: New.
HEAD is now at 4b260c2 abi.html: New.
Note: checking out '4b260c2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4b260c2... abi.html: New.
Deleted branch temp-test-branch (was 4b260c2).
Fail to build gcc for commit [4b260c2], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[da4f9e3b4db0404582e4328bd33a7977f3e8dccc] array.c (gfc_insert_constructor): Avoid redundant call to mpz_comp.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [da4f9e3]
+---------------------------------------- Current commit hash: [da4f9e3] ----------------------------------------+
Building GCC for commit [da4f9e3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: da4f9e3 array.c (gfc_insert_constructor): Avoid redundant call to mpz_comp.
HEAD is now at da4f9e3 array.c (gfc_insert_constructor): Avoid redundant call to mpz_comp.
Note: checking out 'da4f9e3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at da4f9e3... array.c (gfc_insert_constructor): Avoid redundant call to mpz_comp.
Deleted branch temp-test-branch (was da4f9e3).
Fail to build gcc for commit [da4f9e3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[61ada8ae18a600c8ace28058fe592ce9842f6237] c-typeck.c, [...]: Fix comment typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [61ada8a]
+---------------------------------------- Current commit hash: [61ada8a] ----------------------------------------+
Building GCC for commit [61ada8a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 61ada8a c-typeck.c, [...]: Fix comment typos.
HEAD is now at 61ada8a c-typeck.c, [...]: Fix comment typos.
Note: checking out '61ada8a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 61ada8a... c-typeck.c, [...]: Fix comment typos.
Deleted branch temp-test-branch (was 61ada8a).
Fail to build gcc for commit [61ada8a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[7e14028056eafe6486281fb96d17d2f873f6248f] re PR tree-optimization/15454 (tree-ccp generates wrong code for nested functions)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7e14028]
+---------------------------------------- Current commit hash: [7e14028] ----------------------------------------+
Building GCC for commit [7e14028]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7e14028 re PR tree-optimization/15454 (tree-ccp generates wrong code for nested functions)
HEAD is now at 7e14028 re PR tree-optimization/15454 (tree-ccp generates wrong code for nested functions)
Note: checking out '7e14028'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7e14028... re PR tree-optimization/15454 (tree-ccp generates wrong code for nested functions)
Deleted branch temp-test-branch (was 7e14028).
Fail to build gcc for commit [7e14028], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[af72267c7201ac7b0c3e4a90721bfc9bac0e4787] gimplify.c (lookup_tmp_var): Set TREE_READONLY in is_formal case.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [af72267]
+---------------------------------------- Current commit hash: [af72267] ----------------------------------------+
Building GCC for commit [af72267]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: af72267 gimplify.c (lookup_tmp_var): Set TREE_READONLY in is_formal case.
HEAD is now at af72267 gimplify.c (lookup_tmp_var): Set TREE_READONLY in is_formal case.
Note: checking out 'af72267'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at af72267... gimplify.c (lookup_tmp_var): Set TREE_READONLY in is_formal case.
Deleted branch temp-test-branch (was af72267).
Fail to build gcc for commit [af72267], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[f69a11209a5eb346e0e79ea95060d7c22999c210] re PR target/15302 ([3.3/3.4 only] gcc not consistent for passing structures with complex in them)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f69a112]
+---------------------------------------- Current commit hash: [f69a112] ----------------------------------------+
Building GCC for commit [f69a112]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f69a112 re PR target/15302 ([3.3/3.4 only] gcc not consistent for passing structures with complex in them)
HEAD is now at f69a112 re PR target/15302 ([3.3/3.4 only] gcc not consistent for passing structures with complex in them)
Note: checking out 'f69a112'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f69a112... re PR target/15302 ([3.3/3.4 only] gcc not consistent for passing structures with complex in them)
Deleted branch temp-test-branch (was f69a112).
Fail to build gcc for commit [f69a112], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[75822272d9f74ec95289fe8dd74944c383c14348] tree-dfa.c (get_virtual_var): Merge real/imaginary parts with handled_component_p handling.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [7582227]
+---------------------------------------- Current commit hash: [7582227] ----------------------------------------+
Building GCC for commit [7582227]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 7582227 tree-dfa.c (get_virtual_var): Merge real/imaginary parts with handled_component_p handling.
HEAD is now at 7582227 tree-dfa.c (get_virtual_var): Merge real/imaginary parts with handled_component_p handling.
Note: checking out '7582227'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 7582227... tree-dfa.c (get_virtual_var): Merge real/imaginary parts with handled_component_p handling.
Deleted branch temp-test-branch (was 7582227).
Fail to build gcc for commit [7582227], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[11ed191c4f03b96e9731aead38d1b467af69c178] Makefile.in (tree-dump.o): Depend on tree-iterator.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [11ed191]
+---------------------------------------- Current commit hash: [11ed191] ----------------------------------------+
Building GCC for commit [11ed191]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 11ed191 Makefile.in (tree-dump.o): Depend on tree-iterator.h.
HEAD is now at 11ed191 Makefile.in (tree-dump.o): Depend on tree-iterator.h.
Note: checking out '11ed191'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 11ed191... Makefile.in (tree-dump.o): Depend on tree-iterator.h.
Deleted branch temp-test-branch (was 11ed191).
Fail to build gcc for commit [11ed191], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[efaa45e648f2955a132089c7ca4bd0c3092ff000] * dbxout.h: Add include guards
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [efaa45e]
+---------------------------------------- Current commit hash: [efaa45e] ----------------------------------------+
Building GCC for commit [efaa45e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: efaa45e * dbxout.h: Add include guards
HEAD is now at efaa45e * dbxout.h: Add include guards
Note: checking out 'efaa45e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at efaa45e... * dbxout.h: Add include guards
Deleted branch temp-test-branch (was efaa45e).
Fail to build gcc for commit [efaa45e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ff98621c682005e2a224f62c1aa5028353a5357e] re PR c++/16036 (Spurious "may be used uninitialized in this function" warning)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ff98621]
+---------------------------------------- Current commit hash: [ff98621] ----------------------------------------+
Building GCC for commit [ff98621]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ff98621 re PR c++/16036 (Spurious "may be used uninitialized in this function" warning)
HEAD is now at ff98621 re PR c++/16036 (Spurious "may be used uninitialized in this function" warning)
Note: checking out 'ff98621'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ff98621... re PR c++/16036 (Spurious "may be used uninitialized in this function" warning)
Deleted branch temp-test-branch (was ff98621).
Fail to build gcc for commit [ff98621], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[084c663c9911a6649407b9956d9d2d59499cd03c] Renaming of target specific files for clarity
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [084c663]
+---------------------------------------- Current commit hash: [084c663] ----------------------------------------+
Building GCC for commit [084c663]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 084c663 Renaming of target specific files for clarity
HEAD is now at 084c663 Renaming of target specific files for clarity
Note: checking out '084c663'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 084c663... Renaming of target specific files for clarity
Deleted branch temp-test-branch (was 084c663).
Fail to build gcc for commit [084c663], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9fd47435098270dd5687b9bbaa34d1b9ecb494e7] calls.c (initialize_argument_information): Forbid sibcalls if a callee-copied argument is stored in the current function's...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9fd4743]
+---------------------------------------- Current commit hash: [9fd4743] ----------------------------------------+
Building GCC for commit [9fd4743]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9fd4743 calls.c (initialize_argument_information): Forbid sibcalls if a callee-copied argument is stored in the current function's...
HEAD is now at 9fd4743 calls.c (initialize_argument_information): Forbid sibcalls if a callee-copied argument is stored in the current function's...
Note: checking out '9fd4743'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9fd4743... calls.c (initialize_argument_information): Forbid sibcalls if a callee-copied argument is stored in the current function's...
Deleted branch temp-test-branch (was 9fd4743).
Fail to build gcc for commit [9fd4743], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[fff34d356a721134207d6545fc134a412af8f885] c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fff34d3]
+---------------------------------------- Current commit hash: [fff34d3] ----------------------------------------+
Building GCC for commit [fff34d3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fff34d3 c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.
HEAD is now at fff34d3 c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.
Note: checking out 'fff34d3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fff34d3... c-gimplify.c (gimplify_for_stmt): Use gimplify_and_add.
Deleted branch temp-test-branch (was fff34d3).
Fail to build gcc for commit [fff34d3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[6ca77e6fa4577b378a564bf95276e62158e2b4b6] VMClassLoader.java (init): Add extensions directory only if it actually exists.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6ca77e6]
+---------------------------------------- Current commit hash: [6ca77e6] ----------------------------------------+
Building GCC for commit [6ca77e6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6ca77e6 VMClassLoader.java (init): Add extensions directory only if it actually exists.
HEAD is now at 6ca77e6 VMClassLoader.java (init): Add extensions directory only if it actually exists.
Note: checking out '6ca77e6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6ca77e6... VMClassLoader.java (init): Add extensions directory only if it actually exists.
Deleted branch temp-test-branch (was 6ca77e6).
Fail to build gcc for commit [6ca77e6], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[1cd29ad23586b888af0c47d11c33b6f6b50481c6] * gnu/awt/xlib/XCanvasPeer.java (setVisible): Implement unmap.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1cd29ad]
+---------------------------------------- Current commit hash: [1cd29ad] ----------------------------------------+
Building GCC for commit [1cd29ad]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1cd29ad * gnu/awt/xlib/XCanvasPeer.java (setVisible): Implement unmap.
HEAD is now at 1cd29ad * gnu/awt/xlib/XCanvasPeer.java (setVisible): Implement unmap.
Note: checking out '1cd29ad'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1cd29ad... * gnu/awt/xlib/XCanvasPeer.java (setVisible): Implement unmap.
Deleted branch temp-test-branch (was 1cd29ad).
Fail to build gcc for commit [1cd29ad], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[776dc15d3809dbd893c878907960ad4ea556604d] opts.sh: Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [776dc15]
+---------------------------------------- Current commit hash: [776dc15] ----------------------------------------+
Building GCC for commit [776dc15]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 776dc15 opts.sh: Delete.
HEAD is now at 776dc15 opts.sh: Delete.
Note: checking out '776dc15'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 776dc15... opts.sh: Delete.
Deleted branch temp-test-branch (was 776dc15).
Fail to build gcc for commit [776dc15], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[3db4a9b428b760809fdff522272b95c378949e9b] re PR tree-optimization/16115 (double-destruction problem with argument passing via temporary (breaks auto_ptr))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3db4a9b]
+---------------------------------------- Current commit hash: [3db4a9b] ----------------------------------------+
Building GCC for commit [3db4a9b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3db4a9b re PR tree-optimization/16115 (double-destruction problem with argument passing via temporary (breaks auto_ptr))
HEAD is now at 3db4a9b re PR tree-optimization/16115 (double-destruction problem with argument passing via temporary (breaks auto_ptr))
Note: checking out '3db4a9b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3db4a9b... re PR tree-optimization/16115 (double-destruction problem with argument passing via temporary (breaks auto_ptr))
Deleted branch temp-test-branch (was 3db4a9b).
Fail to build gcc for commit [3db4a9b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[1382f0f09da0d329609d3fccd6a4eafa48e94665] * fold-const.c (fold_relational_const): Use constant_boolean_node.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1382f0f]
+---------------------------------------- Current commit hash: [1382f0f] ----------------------------------------+
Building GCC for commit [1382f0f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1382f0f * fold-const.c (fold_relational_const): Use constant_boolean_node.
HEAD is now at 1382f0f * fold-const.c (fold_relational_const): Use constant_boolean_node.
Note: checking out '1382f0f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1382f0f... * fold-const.c (fold_relational_const): Use constant_boolean_node.
Deleted branch temp-test-branch (was 1382f0f).
Fail to build gcc for commit [1382f0f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[aaa67502729b8696e5f4953967a3f143d27d367c] extend.texi: Update WG14 URL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [aaa6750]
+---------------------------------------- Current commit hash: [aaa6750] ----------------------------------------+
Building GCC for commit [aaa6750]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: aaa6750 extend.texi: Update WG14 URL.
HEAD is now at aaa6750 extend.texi: Update WG14 URL.
Note: checking out 'aaa6750'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at aaa6750... extend.texi: Update WG14 URL.
Deleted branch temp-test-branch (was aaa6750).
Fail to build gcc for commit [aaa6750], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[f2b5cf977e5f5cce0434b890cc184872bcf1d5bc] * c-parse.in: Unify Objective-C token names.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f2b5cf9]
+---------------------------------------- Current commit hash: [f2b5cf9] ----------------------------------------+
Building GCC for commit [f2b5cf9]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f2b5cf9 * c-parse.in: Unify Objective-C token names.
HEAD is now at f2b5cf9 * c-parse.in: Unify Objective-C token names.
Note: checking out 'f2b5cf9'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f2b5cf9... * c-parse.in: Unify Objective-C token names.
Deleted branch temp-test-branch (was f2b5cf9).
Fail to build gcc for commit [f2b5cf9], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[dc4917425181e331c20a26437d46c79c3cb9885b] lib1funcs.asm (_lshrdi3, [...]): Add ASM implementations for ARM and Thumb.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dc49174]
+---------------------------------------- Current commit hash: [dc49174] ----------------------------------------+
Building GCC for commit [dc49174]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dc49174 lib1funcs.asm (_lshrdi3, [...]): Add ASM implementations for ARM and Thumb.
HEAD is now at dc49174 lib1funcs.asm (_lshrdi3, [...]): Add ASM implementations for ARM and Thumb.
Note: checking out 'dc49174'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dc49174... lib1funcs.asm (_lshrdi3, [...]): Add ASM implementations for ARM and Thumb.
Deleted branch temp-test-branch (was dc49174).
Fail to build gcc for commit [dc49174], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[902fd62cebfcdbf91caf2377cb0db0ae577cbbfd] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [902fd62]
+---------------------------------------- Current commit hash: [902fd62] ----------------------------------------+
Building GCC for commit [902fd62]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 902fd62 Daily bump.
HEAD is now at 902fd62 Daily bump.
Note: checking out '902fd62'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 902fd62... Daily bump.
Deleted branch temp-test-branch (was 902fd62).
Fail to build gcc for commit [902fd62], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[fc89798458ce731dcc7460fdcf0d67544a2ba0d2] Make-lang.in (f95.generated-manpages): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fc89798]
+---------------------------------------- Current commit hash: [fc89798] ----------------------------------------+
Building GCC for commit [fc89798]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fc89798 Make-lang.in (f95.generated-manpages): Remove.
HEAD is now at fc89798 Make-lang.in (f95.generated-manpages): Remove.
Note: checking out 'fc89798'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fc89798... Make-lang.in (f95.generated-manpages): Remove.
Deleted branch temp-test-branch (was fc89798).
Fail to build gcc for commit [fc89798], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[71da1d1913a2fcc0d4e7226974be30ee43de3ae3] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [71da1d1]
+---------------------------------------- Current commit hash: [71da1d1] ----------------------------------------+
Building GCC for commit [71da1d1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 71da1d1 Daily bump.
HEAD is now at 71da1d1 Daily bump.
Note: checking out '71da1d1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 71da1d1... Daily bump.
Deleted branch temp-test-branch (was 71da1d1).
Fail to build gcc for commit [71da1d1], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[fb0e7ec09f246a5211b3490753989a3e5e78c481] * doc/cni.sgml: Removed, merged into gcj.texi.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [fb0e7ec]
+---------------------------------------- Current commit hash: [fb0e7ec] ----------------------------------------+
Building GCC for commit [fb0e7ec]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: fb0e7ec * doc/cni.sgml: Removed, merged into gcj.texi.
HEAD is now at fb0e7ec * doc/cni.sgml: Removed, merged into gcj.texi.
Note: checking out 'fb0e7ec'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at fb0e7ec... * doc/cni.sgml: Removed, merged into gcj.texi.
Deleted branch temp-test-branch (was fb0e7ec).
Fail to build gcc for commit [fb0e7ec], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[08d105faa5a0d6ce749e66f9485cace10ea3a375] configure.ac (gcc_cv_ld): Prefer in-tree ld over whatever the top-level detects...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [08d105f]
+---------------------------------------- Current commit hash: [08d105f] ----------------------------------------+
Building GCC for commit [08d105f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 08d105f configure.ac (gcc_cv_ld): Prefer in-tree ld over whatever the top-level detects...
HEAD is now at 08d105f configure.ac (gcc_cv_ld): Prefer in-tree ld over whatever the top-level detects...
Note: checking out '08d105f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 08d105f... configure.ac (gcc_cv_ld): Prefer in-tree ld over whatever the top-level detects...
Deleted branch temp-test-branch (was 08d105f).
Fail to build gcc for commit [08d105f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[1ab106cdc46e598261d9ffa0673936d35af923db] * arith.c: Fix comment typos.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1ab106c]
+---------------------------------------- Current commit hash: [1ab106c] ----------------------------------------+
Building GCC for commit [1ab106c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1ab106c * arith.c: Fix comment typos.
HEAD is now at 1ab106c * arith.c: Fix comment typos.
Note: checking out '1ab106c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1ab106c... * arith.c: Fix comment typos.
Deleted branch temp-test-branch (was 1ab106c).
Fail to build gcc for commit [1ab106c], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[40e929f3989b793b48d85bb18004030d9df34b54] re PR fortran/13773 (Incorrect diagnosis of restricted function)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [40e929f]
+---------------------------------------- Current commit hash: [40e929f] ----------------------------------------+
Building GCC for commit [40e929f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 40e929f re PR fortran/13773 (Incorrect diagnosis of restricted function)
HEAD is now at 40e929f re PR fortran/13773 (Incorrect diagnosis of restricted function)
Note: checking out '40e929f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 40e929f... re PR fortran/13773 (Incorrect diagnosis of restricted function)
Deleted branch temp-test-branch (was 40e929f).
Fail to build gcc for commit [40e929f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[9152dcf43e3972bb029c9bc252d26e909d1b8891] * java/io/Writer.java (Writer(Object)): Check for null lock object.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [9152dcf]
+---------------------------------------- Current commit hash: [9152dcf] ----------------------------------------+
Building GCC for commit [9152dcf]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 9152dcf * java/io/Writer.java (Writer(Object)): Check for null lock object.
HEAD is now at 9152dcf * java/io/Writer.java (Writer(Object)): Check for null lock object.
Note: checking out '9152dcf'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 9152dcf... * java/io/Writer.java (Writer(Object)): Check for null lock object.
Deleted branch temp-test-branch (was 9152dcf).
Fail to build gcc for commit [9152dcf], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[42048866021815214ed1ffb41d27a0e5090a3f4b] varasm.c (output_constant): Pass the minimum of the two sizes to assemble_integer.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [4204886]
+---------------------------------------- Current commit hash: [4204886] ----------------------------------------+
Building GCC for commit [4204886]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 4204886 varasm.c (output_constant): Pass the minimum of the two sizes to assemble_integer.
HEAD is now at 4204886 varasm.c (output_constant): Pass the minimum of the two sizes to assemble_integer.
Note: checking out '4204886'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 4204886... varasm.c (output_constant): Pass the minimum of the two sizes to assemble_integer.
Deleted branch temp-test-branch (was 4204886).
Fail to build gcc for commit [4204886], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[dcbbf6f31bcbb4a3f03793eb6415c6b8202b9f93] re PR libstdc++/16154 (input iterator concept too restrictive)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [dcbbf6f]
+---------------------------------------- Current commit hash: [dcbbf6f] ----------------------------------------+
Building GCC for commit [dcbbf6f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: dcbbf6f re PR libstdc++/16154 (input iterator concept too restrictive)
HEAD is now at dcbbf6f re PR libstdc++/16154 (input iterator concept too restrictive)
Note: checking out 'dcbbf6f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at dcbbf6f... re PR libstdc++/16154 (input iterator concept too restrictive)
Deleted branch temp-test-branch (was dcbbf6f).
Fail to build gcc for commit [dcbbf6f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[64e1e4c4a7825964b7853402053ad5daf95487b3] s390.md: Remove the generic pipeline description.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [64e1e4c]
+---------------------------------------- Current commit hash: [64e1e4c] ----------------------------------------+
Building GCC for commit [64e1e4c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 64e1e4c s390.md: Remove the generic pipeline description.
HEAD is now at 64e1e4c s390.md: Remove the generic pipeline description.
Note: checking out '64e1e4c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 64e1e4c... s390.md: Remove the generic pipeline description.
Deleted branch temp-test-branch (was 64e1e4c).
Fail to build gcc for commit [64e1e4c], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[15581992c8bbae7f8b4b75e088bcd61edc2355f3] pa.md: Fix typo from last change.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1558199]
+---------------------------------------- Current commit hash: [1558199] ----------------------------------------+
Building GCC for commit [1558199]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1558199 pa.md: Fix typo from last change.
HEAD is now at 1558199 pa.md: Fix typo from last change.
Note: checking out '1558199'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1558199... pa.md: Fix typo from last change.
Deleted branch temp-test-branch (was 1558199).
Fail to build gcc for commit [1558199], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[1c37e0b6e8b036fc3dce3765d195cf57919bed02] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [1c37e0b]
+---------------------------------------- Current commit hash: [1c37e0b] ----------------------------------------+
Building GCC for commit [1c37e0b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 1c37e0b Daily bump.
HEAD is now at 1c37e0b Daily bump.
Note: checking out '1c37e0b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 1c37e0b... Daily bump.
Deleted branch temp-test-branch (was 1c37e0b).
Fail to build gcc for commit [1c37e0b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[6944d9ddb0be2b586fb48eece8591bb62a5d5b66] tree-ssa-operands.c (get_expr_operands): Do not treat malloc attributed functions as pure or const.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [6944d9d]
+---------------------------------------- Current commit hash: [6944d9d] ----------------------------------------+
Building GCC for commit [6944d9d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 6944d9d tree-ssa-operands.c (get_expr_operands): Do not treat malloc attributed functions as pure or const.
HEAD is now at 6944d9d tree-ssa-operands.c (get_expr_operands): Do not treat malloc attributed functions as pure or const.
Note: checking out '6944d9d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 6944d9d... tree-ssa-operands.c (get_expr_operands): Do not treat malloc attributed functions as pure or const.
Deleted branch temp-test-branch (was 6944d9d).
Fail to build gcc for commit [6944d9d], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[350fae6628af14c2e760694d39baec5f7858057c] c-common.c (c_safe_from_p, [...]): Deleted.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [350fae6]
+---------------------------------------- Current commit hash: [350fae6] ----------------------------------------+
Building GCC for commit [350fae6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 350fae6 c-common.c (c_safe_from_p, [...]): Deleted.
HEAD is now at 350fae6 c-common.c (c_safe_from_p, [...]): Deleted.
Note: checking out '350fae6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 350fae6... c-common.c (c_safe_from_p, [...]): Deleted.
Deleted branch temp-test-branch (was 350fae6).
Fail to build gcc for commit [350fae6], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[96a4ec035df0805444de4d6c67323f77ed0a79bc] re PR target/14800 (Some x86 tests aren't valid for x86_64)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [96a4ec0]
+---------------------------------------- Current commit hash: [96a4ec0] ----------------------------------------+
Building GCC for commit [96a4ec0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 96a4ec0 re PR target/14800 (Some x86 tests aren't valid for x86_64)
HEAD is now at 96a4ec0 re PR target/14800 (Some x86 tests aren't valid for x86_64)
Note: checking out '96a4ec0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 96a4ec0... re PR target/14800 (Some x86 tests aren't valid for x86_64)
Deleted branch temp-test-branch (was 96a4ec0).
Fail to build gcc for commit [96a4ec0], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d81d0bdd6a9ad1fc9b7d8a1ba7d980d70805e633] * config/arm/arm.h (PCC_BITFIELD_TYPE_MATTERS): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d81d0bd]
+---------------------------------------- Current commit hash: [d81d0bd] ----------------------------------------+
Building GCC for commit [d81d0bd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d81d0bd * config/arm/arm.h (PCC_BITFIELD_TYPE_MATTERS): Define.
HEAD is now at d81d0bd * config/arm/arm.h (PCC_BITFIELD_TYPE_MATTERS): Define.
Note: checking out 'd81d0bd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d81d0bd... * config/arm/arm.h (PCC_BITFIELD_TYPE_MATTERS): Define.
Deleted branch temp-test-branch (was d81d0bd).
Fail to build gcc for commit [d81d0bd], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[a91b0033574cf8d647d3dd56708ce3ec787536ba] Testcases for my rs6000-specific change of this date.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [a91b003]
+---------------------------------------- Current commit hash: [a91b003] ----------------------------------------+
Building GCC for commit [a91b003]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: a91b003 Testcases for my rs6000-specific change of this date.
HEAD is now at a91b003 Testcases for my rs6000-specific change of this date.
Note: checking out 'a91b003'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at a91b003... Testcases for my rs6000-specific change of this date.
Deleted branch temp-test-branch (was a91b003).
Fail to build gcc for commit [a91b003], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[d7f30833549aa0378f41f8cdb132cff5826847fe] abi.html: Document effect of -fabi-version on value of __GXX_ABI_VERSION...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [d7f3083]
+---------------------------------------- Current commit hash: [d7f3083] ----------------------------------------+
Building GCC for commit [d7f3083]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: d7f3083 abi.html: Document effect of -fabi-version on value of __GXX_ABI_VERSION...
HEAD is now at d7f3083 abi.html: Document effect of -fabi-version on value of __GXX_ABI_VERSION...
Note: checking out 'd7f3083'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at d7f3083... abi.html: Document effect of -fabi-version on value of __GXX_ABI_VERSION...
Deleted branch temp-test-branch (was d7f3083).
Fail to build gcc for commit [d7f3083], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[c0d578e68f92d8add050826588146be0a6fd1ee0] c-opts.c (c_common_handle_option): Handle -fpch-preprocess.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [c0d578e]
+---------------------------------------- Current commit hash: [c0d578e] ----------------------------------------+
Building GCC for commit [c0d578e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: c0d578e c-opts.c (c_common_handle_option): Handle -fpch-preprocess.
HEAD is now at c0d578e c-opts.c (c_common_handle_option): Handle -fpch-preprocess.
Note: checking out 'c0d578e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c0d578e... c-opts.c (c_common_handle_option): Handle -fpch-preprocess.
Deleted branch temp-test-branch (was c0d578e).
Fail to build gcc for commit [c0d578e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[95b147fe4a53a754317dd6f7b46a985e1bba7cc5] re PR libstdc++/15090 (-fno-for-scope vs. libstdc++)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [95b147f]
+---------------------------------------- Current commit hash: [95b147f] ----------------------------------------+
Building GCC for commit [95b147f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 95b147f re PR libstdc++/15090 (-fno-for-scope vs. libstdc++)
HEAD is now at 95b147f re PR libstdc++/15090 (-fno-for-scope vs. libstdc++)
Note: checking out '95b147f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 95b147f... re PR libstdc++/15090 (-fno-for-scope vs. libstdc++)
Deleted branch temp-test-branch (was 95b147f).
Fail to build gcc for commit [95b147f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[933520b9beeea22009be7637b3186c61679266b0] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [933520b]
+---------------------------------------- Current commit hash: [933520b] ----------------------------------------+
Building GCC for commit [933520b]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 933520b Daily bump.
HEAD is now at 933520b Daily bump.
Note: checking out '933520b'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 933520b... Daily bump.
Deleted branch temp-test-branch (was 933520b).
Fail to build gcc for commit [933520b], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[ed397c43b43b6c81ee2273d5bb5494b8014bcaf5] tree-inline.c (remap_type): Arrange to have just one pointer type for each type, mode, and 'can alias' value.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [ed397c4]
+---------------------------------------- Current commit hash: [ed397c4] ----------------------------------------+
Building GCC for commit [ed397c4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: ed397c4 tree-inline.c (remap_type): Arrange to have just one pointer type for each type, mode, and 'can alias' value.
HEAD is now at ed397c4 tree-inline.c (remap_type): Arrange to have just one pointer type for each type, mode, and 'can alias' value.
Note: checking out 'ed397c4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at ed397c4... tree-inline.c (remap_type): Arrange to have just one pointer type for each type, mode, and 'can alias' value.
Deleted branch temp-test-branch (was ed397c4).
Fail to build gcc for commit [ed397c4], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[0b4da8a182e81009fbd65d56451be31790132471] c-decl.c (start_function): Don't call make_decl_rtl.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [0b4da8a]
+---------------------------------------- Current commit hash: [0b4da8a] ----------------------------------------+
Building GCC for commit [0b4da8a]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 0b4da8a c-decl.c (start_function): Don't call make_decl_rtl.
HEAD is now at 0b4da8a c-decl.c (start_function): Don't call make_decl_rtl.
Note: checking out '0b4da8a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 0b4da8a... c-decl.c (start_function): Don't call make_decl_rtl.
Deleted branch temp-test-branch (was 0b4da8a).
Fail to build gcc for commit [0b4da8a], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[77e2332572cb97acdb2d1b381edc53c8795677d3] loop-unswitch.c (unswitch_single_loop): Free bbs at the end.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [77e2332]
+---------------------------------------- Current commit hash: [77e2332] ----------------------------------------+
Building GCC for commit [77e2332]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 77e2332 loop-unswitch.c (unswitch_single_loop): Free bbs at the end.
HEAD is now at 77e2332 loop-unswitch.c (unswitch_single_loop): Free bbs at the end.
Note: checking out '77e2332'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 77e2332... loop-unswitch.c (unswitch_single_loop): Free bbs at the end.
Deleted branch temp-test-branch (was 77e2332).
Fail to build gcc for commit [77e2332], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[f5e440e11d2a06873d52c3443f624d537788600d] resolve.c (resolve_symbol): Add comment in function body.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f5e440e]
+---------------------------------------- Current commit hash: [f5e440e] ----------------------------------------+
Building GCC for commit [f5e440e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f5e440e resolve.c (resolve_symbol): Add comment in function body.
HEAD is now at f5e440e resolve.c (resolve_symbol): Add comment in function body.
Note: checking out 'f5e440e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f5e440e... resolve.c (resolve_symbol): Add comment in function body.
Deleted branch temp-test-branch (was f5e440e).
Fail to build gcc for commit [f5e440e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[2f016d5c37ad265a446e14bb4450118cf8525f0c] * quick build fix
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [2f016d5]
+---------------------------------------- Current commit hash: [2f016d5] ----------------------------------------+
Building GCC for commit [2f016d5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 2f016d5 * quick build fix
HEAD is now at 2f016d5 * quick build fix
Note: checking out '2f016d5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2f016d5... * quick build fix
Deleted branch temp-test-branch (was 2f016d5).
Fail to build gcc for commit [2f016d5], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[965ccc5a1cfc6ad1df67c8e88cfe5f044272eb4f] Makefile.in (GTFILES): Add $(srcdir)/reload.h.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [965ccc5]
+---------------------------------------- Current commit hash: [965ccc5] ----------------------------------------+
Building GCC for commit [965ccc5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 965ccc5 Makefile.in (GTFILES): Add $(srcdir)/reload.h.
HEAD is now at 965ccc5 Makefile.in (GTFILES): Add $(srcdir)/reload.h.
Note: checking out '965ccc5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 965ccc5... Makefile.in (GTFILES): Add $(srcdir)/reload.h.
Deleted branch temp-test-branch (was 965ccc5).
Fail to build gcc for commit [965ccc5], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[07e938fc863ee4cec163cb9290476274242ca68d] stl_algobase.h (fill, fill_n): Revert last change...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [07e938f]
+---------------------------------------- Current commit hash: [07e938f] ----------------------------------------+
Building GCC for commit [07e938f]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 07e938f stl_algobase.h (fill, fill_n): Revert last change...
HEAD is now at 07e938f stl_algobase.h (fill, fill_n): Revert last change...
Note: checking out '07e938f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 07e938f... stl_algobase.h (fill, fill_n): Revert last change...
Deleted branch temp-test-branch (was 07e938f).
Fail to build gcc for commit [07e938f], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[8be123d4a969fb67c7d46754bec8a51de680c97a] io.c (format_item): Allow the number before the X format to be optional when not -pedantic.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8be123d]
+---------------------------------------- Current commit hash: [8be123d] ----------------------------------------+
Building GCC for commit [8be123d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8be123d io.c (format_item): Allow the number before the X format to be optional when not -pedantic.
HEAD is now at 8be123d io.c (format_item): Allow the number before the X format to be optional when not -pedantic.
Note: checking out '8be123d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8be123d... io.c (format_item): Allow the number before the X format to be optional when not -pedantic.
Deleted branch temp-test-branch (was 8be123d).
Fail to build gcc for commit [8be123d], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[02ea8d06bf236a38614eb0c88944e87df3b373f3] tree-ssa-live.c (calculate_live_on_entry): Ignore virtual variables.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [02ea8d0]
+---------------------------------------- Current commit hash: [02ea8d0] ----------------------------------------+
Building GCC for commit [02ea8d0]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 02ea8d0 tree-ssa-live.c (calculate_live_on_entry): Ignore virtual variables.
HEAD is now at 02ea8d0 tree-ssa-live.c (calculate_live_on_entry): Ignore virtual variables.
Note: checking out '02ea8d0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 02ea8d0... tree-ssa-live.c (calculate_live_on_entry): Ignore virtual variables.
Deleted branch temp-test-branch (was 02ea8d0).
Fail to build gcc for commit [02ea8d0], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[082a099ce4d0c306c9af311189e9ae1f8c4cba68] system.h: Poison NO_RECURSIVE_FUNCTION_CSE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [082a099]
+---------------------------------------- Current commit hash: [082a099] ----------------------------------------+
Building GCC for commit [082a099]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 082a099 system.h: Poison NO_RECURSIVE_FUNCTION_CSE.
HEAD is now at 082a099 system.h: Poison NO_RECURSIVE_FUNCTION_CSE.
Note: checking out '082a099'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 082a099... system.h: Poison NO_RECURSIVE_FUNCTION_CSE.
Deleted branch temp-test-branch (was 082a099).
Fail to build gcc for commit [082a099], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[5b5afddf1d3af9d2512fb23f420c29baa7fa1fba] parse.c (gfc_statement_next_fixed): (Change from Andy's tree) Detect bad continuation line in fixed form sources.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [5b5afdd]
+---------------------------------------- Current commit hash: [5b5afdd] ----------------------------------------+
Building GCC for commit [5b5afdd]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 5b5afdd parse.c (gfc_statement_next_fixed): (Change from Andy's tree) Detect bad continuation line in fixed form sources.
HEAD is now at 5b5afdd parse.c (gfc_statement_next_fixed): (Change from Andy's tree) Detect bad continuation line in fixed form sources.
Note: checking out '5b5afdd'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 5b5afdd... parse.c (gfc_statement_next_fixed): (Change from Andy's tree) Detect bad continuation line in fixed form sources.
Deleted branch temp-test-branch (was 5b5afdd).
Fail to build gcc for commit [5b5afdd], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[482c0c5d0f514da98ecf74cac10dec078bd96a0c] complex_inserters_extractors.cc, [...]: Move to...
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [482c0c5]
+---------------------------------------- Current commit hash: [482c0c5] ----------------------------------------+
Building GCC for commit [482c0c5]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 482c0c5 complex_inserters_extractors.cc, [...]: Move to...
HEAD is now at 482c0c5 complex_inserters_extractors.cc, [...]: Move to...
Note: checking out '482c0c5'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 482c0c5... complex_inserters_extractors.cc, [...]: Move to...
Deleted branch temp-test-branch (was 482c0c5).
Fail to build gcc for commit [482c0c5], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[77db1f411d9b7d9cf865b119ea09aadc92238a81] gimplify.c (voidify_wrapper_expr): Allow TARGET_EXPR.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [77db1f4]
+---------------------------------------- Current commit hash: [77db1f4] ----------------------------------------+
Building GCC for commit [77db1f4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 77db1f4 gimplify.c (voidify_wrapper_expr): Allow TARGET_EXPR.
HEAD is now at 77db1f4 gimplify.c (voidify_wrapper_expr): Allow TARGET_EXPR.
Note: checking out '77db1f4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 77db1f4... gimplify.c (voidify_wrapper_expr): Allow TARGET_EXPR.
Deleted branch temp-test-branch (was 77db1f4).
Fail to build gcc for commit [77db1f4], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[e54d02140051c9fe0ccddf982aa1d7b29d7c3263] tree-flow-inline.h (num_immediate_uses): Don't abort if DF is NULL.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e54d021]
+---------------------------------------- Current commit hash: [e54d021] ----------------------------------------+
Building GCC for commit [e54d021]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e54d021 tree-flow-inline.h (num_immediate_uses): Don't abort if DF is NULL.
HEAD is now at e54d021 tree-flow-inline.h (num_immediate_uses): Don't abort if DF is NULL.
Note: checking out 'e54d021'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e54d021... tree-flow-inline.h (num_immediate_uses): Don't abort if DF is NULL.
Deleted branch temp-test-branch (was e54d021).
Fail to build gcc for commit [e54d021], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[819e019c9d5aa88675f8714028a6a0952c63282a] rs6000.md: Apply change mistakenly deleted with 2004-06-22 patch.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [819e019]
+---------------------------------------- Current commit hash: [819e019] ----------------------------------------+
Building GCC for commit [819e019]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 819e019 rs6000.md: Apply change mistakenly deleted with 2004-06-22 patch.
HEAD is now at 819e019 rs6000.md: Apply change mistakenly deleted with 2004-06-22 patch.
Note: checking out '819e019'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 819e019... rs6000.md: Apply change mistakenly deleted with 2004-06-22 patch.
Deleted branch temp-test-branch (was 819e019).
Fail to build gcc for commit [819e019], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[e1564e1d4e05b2d10c9cfb1273a2680a3f0f4dba] tree-mudflap.c (mx_register_decls): Tolerate decl trees resulting from source code with errors.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e1564e1]
+---------------------------------------- Current commit hash: [e1564e1] ----------------------------------------+
Building GCC for commit [e1564e1]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e1564e1 tree-mudflap.c (mx_register_decls): Tolerate decl trees resulting from source code with errors.
HEAD is now at e1564e1 tree-mudflap.c (mx_register_decls): Tolerate decl trees resulting from source code with errors.
Note: checking out 'e1564e1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e1564e1... tree-mudflap.c (mx_register_decls): Tolerate decl trees resulting from source code with errors.
Deleted branch temp-test-branch (was e1564e1).
Fail to build gcc for commit [e1564e1], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[f1526aaae77c8082ef42691d03254926f5104b64] re PR target/16176 (Miscompilation of unaligned data in MIPS backend (SB1 flavor))
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [f1526aa]
+---------------------------------------- Current commit hash: [f1526aa] ----------------------------------------+
Building GCC for commit [f1526aa]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: f1526aa re PR target/16176 (Miscompilation of unaligned data in MIPS backend (SB1 flavor))
HEAD is now at f1526aa re PR target/16176 (Miscompilation of unaligned data in MIPS backend (SB1 flavor))
Note: checking out 'f1526aa'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f1526aa... re PR target/16176 (Miscompilation of unaligned data in MIPS backend (SB1 flavor))
Deleted branch temp-test-branch (was f1526aa).
Fail to build gcc for commit [f1526aa], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[673fda6b48b3d89767d6fdded61dfe41541ab8e9] c-gimplify.c (c_genericize): Replace calls via (*lang_hooks.foo) with lang_hooks.foo.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [673fda6]
+---------------------------------------- Current commit hash: [673fda6] ----------------------------------------+
Building GCC for commit [673fda6]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 673fda6 c-gimplify.c (c_genericize): Replace calls via (*lang_hooks.foo) with lang_hooks.foo.
HEAD is now at 673fda6 c-gimplify.c (c_genericize): Replace calls via (*lang_hooks.foo) with lang_hooks.foo.
Note: checking out '673fda6'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 673fda6... c-gimplify.c (c_genericize): Replace calls via (*lang_hooks.foo) with lang_hooks.foo.
Deleted branch temp-test-branch (was 673fda6).
Fail to build gcc for commit [673fda6], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[3053b100f99e18e0254c8ad2642bca539b9a2cd7] arm.md (all peephole2 patterns): Use predicates that validate register classes as appropriate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [3053b10]
+---------------------------------------- Current commit hash: [3053b10] ----------------------------------------+
Building GCC for commit [3053b10]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3053b10 arm.md (all peephole2 patterns): Use predicates that validate register classes as appropriate.
HEAD is now at 3053b10 arm.md (all peephole2 patterns): Use predicates that validate register classes as appropriate.
Note: checking out '3053b10'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3053b10... arm.md (all peephole2 patterns): Use predicates that validate register classes as appropriate.
Deleted branch temp-test-branch (was 3053b10).
Fail to build gcc for commit [3053b10], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[bb2d400f6145f628e9973d529ca4dc017bb5b978] c-decl.c (finish_function): Do not check for DEFAULT_MAIN_RETURN.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [bb2d400]
+---------------------------------------- Current commit hash: [bb2d400] ----------------------------------------+
Building GCC for commit [bb2d400]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: bb2d400 c-decl.c (finish_function): Do not check for DEFAULT_MAIN_RETURN.
HEAD is now at bb2d400 c-decl.c (finish_function): Do not check for DEFAULT_MAIN_RETURN.
Note: checking out 'bb2d400'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at bb2d400... c-decl.c (finish_function): Do not check for DEFAULT_MAIN_RETURN.
Deleted branch temp-test-branch (was bb2d400).
Fail to build gcc for commit [bb2d400], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[b2e0a4503ad45451399fccd8dce197d3b96f862a] genattrtab.c (write_test_expr): Put a unsigned cast before the first operand for GEU, GTU, LEU and LTU.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [b2e0a45]
+---------------------------------------- Current commit hash: [b2e0a45] ----------------------------------------+
Building GCC for commit [b2e0a45]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: b2e0a45 genattrtab.c (write_test_expr): Put a unsigned cast before the first operand for GEU, GTU, LEU and LTU.
HEAD is now at b2e0a45 genattrtab.c (write_test_expr): Put a unsigned cast before the first operand for GEU, GTU, LEU and LTU.
Note: checking out 'b2e0a45'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b2e0a45... genattrtab.c (write_test_expr): Put a unsigned cast before the first operand for GEU, GTU, LEU and LTU.
Deleted branch temp-test-branch (was b2e0a45).
Fail to build gcc for commit [b2e0a45], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[cc21f43ecc00fdd11f68939b5aab167a2e6d0feb] jacks.xfail: Remove 15.9.1-qualified-concrete-20.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [cc21f43]
+---------------------------------------- Current commit hash: [cc21f43] ----------------------------------------+
Building GCC for commit [cc21f43]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: cc21f43 jacks.xfail: Remove 15.9.1-qualified-concrete-20.
HEAD is now at cc21f43 jacks.xfail: Remove 15.9.1-qualified-concrete-20.
Note: checking out 'cc21f43'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at cc21f43... jacks.xfail: Remove 15.9.1-qualified-concrete-20.
Deleted branch temp-test-branch (was cc21f43).
Fail to build gcc for commit [cc21f43], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3] tree-nested.c (build_addr): Merge real/imagpart with handled_component_p.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [8f44bc3]
+---------------------------------------- Current commit hash: [8f44bc3] ----------------------------------------+
Building GCC for commit [8f44bc3]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 8f44bc3 tree-nested.c (build_addr): Merge real/imagpart with handled_component_p.
HEAD is now at 8f44bc3 tree-nested.c (build_addr): Merge real/imagpart with handled_component_p.
Note: checking out '8f44bc3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 8f44bc3... tree-nested.c (build_addr): Merge real/imagpart with handled_component_p.
Deleted branch temp-test-branch (was 8f44bc3).
Fail to build gcc for commit [8f44bc3], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[de7c79cc7771f311aa451103162436077aa1699a] combine.c (distribute_notes): Don't delete sets to global register variables.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [de7c79c]
+---------------------------------------- Current commit hash: [de7c79c] ----------------------------------------+
Building GCC for commit [de7c79c]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: de7c79c combine.c (distribute_notes): Don't delete sets to global register variables.
HEAD is now at de7c79c combine.c (distribute_notes): Don't delete sets to global register variables.
Note: checking out 'de7c79c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at de7c79c... combine.c (distribute_notes): Don't delete sets to global register variables.
Deleted branch temp-test-branch (was de7c79c).
Fail to build gcc for commit [de7c79c], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[e9e4d4ee5bd8785e26bc03f932ffbcfd6b19b918] re PR c++/14865 (No instantiation of VTT at -O1)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [e9e4d4e]
+---------------------------------------- Current commit hash: [e9e4d4e] ----------------------------------------+
Building GCC for commit [e9e4d4e]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: e9e4d4e re PR c++/14865 (No instantiation of VTT at -O1)
HEAD is now at e9e4d4e re PR c++/14865 (No instantiation of VTT at -O1)
Note: checking out 'e9e4d4e'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at e9e4d4e... re PR c++/14865 (No instantiation of VTT at -O1)
Deleted branch temp-test-branch (was e9e4d4e).
Fail to build gcc for commit [e9e4d4e], skip this commit. Return 125.
Bisecting: 563 revisions left to test after this (roughly 9 steps)
[75089d48a0abd9633194c97a33208400a27db601] MAINTAINERS (Write After Approval): Add myself.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1219 small
[32m[     info][0m Testing commit: [75089d4]
+---------------------------------------- Current commit hash: [75089d4] ----------------------------------------+
Building GCC for commit [75089d4]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 75089d4 MAINTAINERS (Write After Approval): Add myself.
HEAD is now at 75089d4 MAINTAINERS (Write After Approval): Add myself.
Note: checking out '75089d4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 75089d4... MAINTAINERS (Write After Approval): Add myself.
Deleted branch temp-test-branch (was 75089d4).
Fail to build gcc for commit [75089d4], skip this commit. Return 125.
There are only 'skip'ped commits left to test.
The first bad commit could be any of:
cb6231728e5b5cd61ef549354378252bfa92aabb
bf730f15c50fab842ac222b8e60d62737d5f0d9a
f5a76aea0ddbb87fe8b4f64a283951d7e687b84c
0b395e1959dcdea573bd9eb19866a522005b0494
8cd0b81e9e372e8d7ff510d59e74e1a74616d773
3743236e9c2259e46bec32221fcad4db67bfb22b
5c64c9001b34df259ef676ec1af22a652dcd3607
07d5edd25f93b247c49250803a3e37b8f17027b2
45b0c94cb45aefa68b1627f8a76a84bad2d5b717
821e1ea1b155e9ca33f12e8e7af447042822c66b
d5a10cf069a2f84e5b24a22e1eecc91918ea8875
0ab80019b6aadd0fb427920d38428db7ed1ccbf1
2435e0362dff9653f596180879db2c26a73c2786
15d0650c9ea92711fc51116a57d6516fccf88815
f29b9db93eb2f3508d2376103af158675f1ee2b0
67057c537b7f1f895ff87f8616e8a122f886f1bf
e9c5d1c084d89a5c8ea21c34ecb4d4b6703e7d16
2af5538b14e4149ad9e09c3ef1a0ee4735cafb80
85bbb21f8f810152bf51558180f7c6520aca6571
345b912f506bad61fcd703b6aa405a3a94f01024
7853504d63ff5c13c0f64e09d4515ea0ce67ffb8
b61d577bdc333fa999b390204c16529b7cca747e
e4638a72d8b900cc9557bdeaf719a3e3987cd4c6
aa07e14d5d3d90dd7f5e0804a8626cd6d4ddbb0e
b51fa00f4ec185801655336e8d76b584063e69c1
9221325f10a58e13a35dfac007c6b5c906760679
aab087b805ed8609dab58426e00c8994b59d5c07
25a1a39e0d97ba879795de3fafd3115ba06a514f
5877771853e65df4ebc5213c5dd098d2e49bf95a
00dd8ca593fe7cb656195283796c158dcef486c6
5bbb9680379fdd9ac147a9e734c0b11d774c4e04
0b1d52f74522f2e1ab43a0ada8ad1c89f6daeac5
590a6d54128afad3a5fbc8eeb8d37c2bfe2c9c58
648b6075b27f942672d0665619acf58747768fd4
a98f59be6461692ca395b721c8fd60c9527449cf
37f40c9cfd5acd2f5cf508e0a4d31611373a7bc5
59068a897368c953c7acebf678cd29fb46038711
10bc1b1bec937131ad05fa18184b985078b99702
d599f32955972ba057772d1dfaa85836457bbbfc
c1b69e3ca2ede08266a6dd101f2903b08db71eb6
ff24b82044cde0c0ff5dd68f45bc9f2bfbcfb3cf
2ddbba8007ac79d2f61fb8c02dd1a04d3c14d098
a921159ad4fd1de20154b9d71e015471505b5155
5e2f3f396b47642ddd234d8d443648289b8a8772
de101ad2f75511c715a846770e3cd446e49f882c
3017c534d4b25924660d70fb34030691caebde59
7187798577a9a9035d1d492d1686217ff5ca30d7
0eef99c1781d3230490d6a6f3c67dc662304f9d5
3d5c8546d460a98243615f7d8065f60ee1f1c10c
320c065932898a7a465997fca87ba8e33d228099
8a83a69363442100aa9435199e5d385716658255
03defda9a0bc5a891415a6d52c7ccfc7b15eff6c
ad94c84603832382465e4e1ed0e10b5595a30a66
3b48085e661950a1e6fdaf1997cda53ed8388064
f8bcef17296bc600214816f188956d02b4299285
1ee19633cade4692a592576164f627aa7b48422d
73d10efa86de15b218ab2030a9d02d4e396afe2c
2d4886684f9e9de8a150faca0ae061d1e9ffedad
c6e8380069ff630939beec0b5872a37f5b710189
d7777192b6d769f3a7312a8eb7856e0db41002d9
dbeff3e56d566719bb3f0c1ba29362d61fe3ff85
908d0773f08485a63523e21520b948fe91998279
9fc3ed51d05dc76edb1f7f0ac7a52df24c9738ef
5f1a5ede6c70418894b4bfe396299583b711fe84
c6dd0441446d52d675a30056aadf0d2d513c1419
02760d2f0843e45c0336586a34ac01ae7a9e549f
e0f2a7c6f2b108181d3bc695c8c5c768da56322d
144cbad04be7523a756f608fcd3037120057e8e6
3e31938b23d6028127e31bd5e06f53f6ec1b4d97
bda4d0639b5f9ccc4beda89b3bb82415688ac3ac
e9dc0db773f588f61906922675f36fb5bb128967
03febbee849aff83a570f223ad9a3f2425ac3177
f9fed73b66238fc369fbaa06d5a6afca5bdbe1b8
0760c3805d97a3c1554d95e982d86d096952e873
446f52f40bb4083e0e4e92de0442141a1d3d633d
31b6f11ab0530374184676979781ba81b06ae38f
90aa6719a03ca37a01bf94240dbf02fb4b1eb3e0
859711c519c44dfd3fbe764d5ab508a8c7789dc3
898c05b8bd9d73fdb3dd1e9e4e4044b0ac74a789
0fa96cea26f4977bab21d76acbcee97a08f6853c
74ee16427180c49e1e2dfa01991770d2e3e7ab7e
37f3105a58188e54224fb645742780ba9b70d60b
db1e2f88a4bbf7b5d85bcc1012835a2c5c210f23
57ffad2ba318428043732884441476b83d010c2b
f4d8a9ae4ecd3c8b5fdbfa9cef9ff5dc94f2ce02
7954e85c0016deceecd4dafc8622292ad1363967
92efec6ec51ced8c2e2ac5c222645f6757592f32
28af2467e40311bbddd132788d0dcd7fe02f72d4
ad6717df263c91ddaf139f0bed1578d2fd932744
b9d71ce3e4860dd7ae12039eaa05c9731b12a095
e22df3157b6ab0237fbd627c05f7c180500a4423
0ca8e815a54c100982398145f32843b490f74589
14bbffa1d211ad505bc165f762027596b87511f1
3a786c6263dbfe0242bab4fb93a35116ee535090
a4ac5dd3ef232d1b4b820960fef7f787525b8009
2e2052b19ad876dade65b7977f17708ffb057010
b40742a53183a904e4902b1fcad54b7b2c6cf57d
62f1d4705d0b042e13faad97ea12b665b4f3ad84
9cf84a3cf034bdc70b501b592c1981221c115a2b
655948a348f819803aeda65b0ae445ba86712a64
f698d2175aa01ae5be342ac6ea6d09366b8b36a4
72fab006113a72f011e261cb291602195726f7d5
e072ae27e0898a7244b08d003a43b4cecf146df0
a19db17df418ef1a3e9b57631d08b4aa222a017a
cd3ce9b44c1c3b4f4567de0d2767df058b89ce58
1600b7d6167562ce7dbf9cb9f18039e7db848a0e
93a9f7d6c63e39974dd0f77ba42af58f71671ad3
62b857eabfaedc1e5f9c824d0d508ac4a6005d9b
c759d454325f974380284ac54d342705e95e70d2
1b6be71988fb76de4935ceb76ffb8812b8e56650
b7115e7ff56ab2f84ad57366bf49d032829175cc
5162e02a26ed0bc8ba29a5caae71f807f50c8875
6f0032a3f70f373ea8e81627560d94d36ff4daef
0e5b7cfaabe3016b8fdbdb58306797198348aec8
d6f3f2616f18370f0c5b0fd186f9e06f191c778e
dc88d66f1aa98873becd21900046cae7bccbc14c
f9d189555573e9df0cfdb6b7cc1fb78b84775134
293155b099b94b81fa0147f2719f3da23c859f7e
3d98fa14024bb2aee26f91fe7a6256fc089594fb
0524c91d1eee6dc2f1629160ed309a5441fb3bdd
d8044160b7047642e312fb5f713fe0db46171dd8
bb394606fd725089772c6b03e8c2f8847b400b61
c073ab616f5692283e12bc93b82a14aad88adf9e
1600fe22b9c077d311efd4c677b80d2fa0efb17e
80d23e4959036e19145c2eb6a0d117727104a211
7338fc64dde8ab8315095e226c1b9e2469a4e369
ed5947c9bcae4c500c8e96f2809b4df527234804
282450180d4350e1b94d527c3d7a1c5b4a63c7ac
c0d594f1da6b13e79a81d72f71f55ec8b9fa2b60
8695f61e407e56fd8fc052ff1afe84afef2b6e7e
dfc46c1fdef0d825023be8c49c14214b21d1d4f6
33300a2eba5bb060fe7aa5f9ff8c3930f6ecdfac
7c87eac60d08f0818800e48d999a005ef6a34ece
1341376000609bcecf58fd137367f615471311d1
8041d6ab144891243a56c55dd1702a32aeb3f484
313679b0b954e72f851877fb2d4d23afb149b47a
e18be1d424de3c50616989e01a10b2632eb595a3
4b5b961390cde313cc983f4cbffb954eeaf078e3
a757585a22537753f3b9be9709789d8e000b5afe
59587b18ab8fcde4fffb1ffe32c150ea514876d4
e66e7856e8c88873ba3a5b37f8afcd003e0f8df9
95eec0d671ffda4b666c138d426c503548981ed8
a653e758f68488c0056b0a0a3d9fcbe5d5eaf50f
041b94781658f0c4fdcff4880a2c1f937514b28f
6ce2bcb71c2f66918a8287090589a9d9ea45ed74
53ef271f84dcf405c5e58ea7b1ef2211f073d3c1
ee18c9f169de177e07ccc68572222ebf574f6a61
5607edfd0812ffe8cd63d1ba6f18df8474fa7b75
b152aee5c740cd65bdab7c0093dfd3d06dc27b55
85e933d8edd0b4ec8f51f3347890f1df39f1ec55
fce66145a8cdde580c01a973f9db87556ce71771
87fd6c1cc3c455fe3b9c363deb44f6c5a6564466
dbfa8d15358235cfda20583a3c0c557bf50138c6
1201ebed5a36e1d766b951e7b51fdae7784a7e25
ce068299f5f38bc06a50f08f751fc4c23288f36f
373614fc05ef1fedb9b53e2846a58558e6572b31
415c974c0bd00f130e7795c3342bad4e3f014c6e
618df7453e19213478c14873470d6efa760fcc7d
b53dcf3e5c67b345b6dea948cd3a9f4b31ec39a8
498c0f2757190a22826576174616ab2403e2f4f6
b25a89339056f59109121ddd7f9f5b7624f287e4
b9696fd41dee5e9eb711b989648f38432f6e90b0
dbb4e0c6aa853502b33f6f2fc82f908c382fee98
26f4ba86cf6d6bdd54996f4033f2b20d7a11130d
37c849e40ef7215ae2f78862a483781811b69bc7
12ba3f8f9a0118440b5f6d75a6fe15d05399442d
897105a14e2a6d66f472b57e98793798e459b5a9
3aeb3655cf89356c86726d49316dcb957859971f
ba20a3eb0940651ab036d0694999176ce31f4db2
03a4c969079e508d695f0b8b82bd573b54e01a3c
a7b155a6ad9475549f1c0e32bb7c29dc66567864
9655d83b750bc6de0074b0501044d4bcb28679d9
d2d87e6d9ed5644287247ae5dff315d0a0b57de7
109e00403a6044810028032054543fc8dcfeed3a
89422e4749ab8f907b23fa44f32efc4cde9f5fc7
3facc4b61545614e75b4fb852a72bbc80554705b
9bf7acfccbac7fe9541cd27ef2961c763144787c
339586c817ea6e5481d1d10f604f50c81ead3645
91fa0e3de67af533eeeb8ef494a2bb66187570c1
23a60a0436f48f1de4e5bf124f29f0e4a32e7d4e
dff008b446fd93001c3e0c97d503042c37fa8574
2fa548415aa2a47d71a01155e6c1cd9dac1f5b36
811d7e77459bb2926e5928b2ad47caf6eaf258fc
785287145e15dab88c193434e6d07b68b4870783
9ef313e31caf3e61eb3b1b0483249d1598bd73cf
078c8b08a0a0d7db27f491a4212957c967619f67
1e2a2bdc35afe7bbab8d92226882e2494644bc08
5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59
ff2adb9d23ba70c0f68dec2093395a8f3d09655f
a90f9bb112ebc8e243432ea776a374c3adc8b3c7
aa6c7c3a3a02b5518c9a1398145160ddf8df2f56
95c73b23dc40a6ba5a6f130d3f981aa36a7de1e5
bdd2a210b8d0a75ec992299a7af767a0cfe1e0ff
322afd16ae583cc9c71d4177ce8318307a7a568a
c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a
3ff2f9d1d1316c01f2880e6408116cdc5e928ae0
d57f1617211f3309887c6ee18fca97ea7029ebc7
43daf8ffa83f013ccc2a7db8845375df73f5556b
a32b97a20d6638f3cee28919f4e6bd7b1d9b39e8
7a3ea2011be31e937186df05335f665a8a983028
a72967cd5d574694af7abb943c237a8960eabbab
95a3742c4876d496fb2f198b6f94c0b1a33b5ceb
c4ec6988bc930288ea6c7fa2ec67a6cfbd0c0d73
5050d266eaf5c63b62a22579c3f25c598de83417
d1251b1af6003e7dd43cc586b6fd767d2f5208eb
225d221a9d82172d403aa068217dc67ca0a3f249
57ab9ac22c2b40b813269208072ede2452fb673a
c05e85e236f6848de79ca82ca5cf6ccbc897c84c
da291c876347aad7c585d2a7fe8a463af74dd422
3100d647250b4209a601763e7887936d25899f3f
ea0ece094959f7c8f9f180665faee4c57b830b4d
3bcb4e37d15296c7aad59f8591876ccfa28f6c31
6ef44cfd0bb7d3cd4d534748d424a171f761b792
1460af9501354afbba460db4c8e731fdc8f5805f
5801c4671e1109119701047bdd6ba833d622c95d
07166901ad64e6c3d8c85ee1d54613bd662ff603
afeebbc08ead47e1305c69c6129b7abc739ef4b1
1ec4e9c30bd66dab3fabb6958187be4c57e26052
b092552d60a2edc2ae9f7165229092157caf0953
5f393b252ee431bad5c22b8a5ed43239d09e5eed
c2f7605f1d3e8d529a466ab67bf6fb3b266a7440
d1ee83813d3719902016705cfb1898b1bb005027
f516a7dacf06f446b8e5d321c404a0d47702237b
0b068ee90da7cbccbc7fd3ef66d58b9bcbcedabd
5453d5bde8413766efffff9fc5e3205fea13bc7b
61c627ed2c1b7184807d2101ab2d288e9ca4f39b
ccfca4ae18a9197a1404acd3364b8b00c3965f3b
3f35ff6f89136443eb1f2307001ee029ff7bab73
d314442396916fa65739d6baeb24b2f0cfc76634
76f824a4a0a6427b8c29ce6253b2b79c4ad3e519
ab71fa3f9a3d4a3744638e52faab75df63ff9b60
2cf224515418db35a329eeb793b48d1a9a917d8c
42fcd7bb7ad33da94b8eeb4c92461639cc6a1f7c
017f7506b5ca31a00431ec0855f209d60586ce8e
e6ff425c0064f00c28315bdfa2624f556af17a2e
1900c4c6bfaf703c107d5a28e55b9525bbd875fa
ba18e4dbfc7e018c9b313cfc3fea93592880bc41
67fc0c0f596944a4bc88cb8d8061bf4c8753c03f
e17b3578a3b043e0ee9a8493224287e79f9bb2c9
5847e53ee7e2bb6665c0652f46a071aa78de90bd
67c605a553faab6244a1b1d987059798e6c1f9aa
57807c317869610e07a85bf8bf95747638230ed7
684c64bf57175cbeeba5e17267dc86db6547090e
07659e9789694eddd0ca9b6abf86f036b400ceb8
f7dbd56c9a1e2605f54a05c2f613cf086f32634b
65da5a20d95cb5d497a650a6d5492c786fa003df
ec3e68358fa934bd54bf6c93af37360b30dfff70
55c452262a4de89684ce4c06d785af3cbd389fc4
a4a90b847aac34b2cbede88ffeef45343214d066
0ab6a7ba9c98756505d14e7e6e1ad88a3a87fd99
c8b2e872a83dd3869ffc4443201a1f3096bc3a6c
7c9fee34e5688d79d96db0e2b2e56d7273cb4335
9098a3ecee26d89fec8f055810988380a4d4580a
41c64ac01272bd3fca0486e618bd1d1ea14a76bd
44a4b8db079e3cb2ca6f059289b34d521ef8ada5
133f7a77c26701d555ecbd6ae7a894f8429c7cc1
9839edf18db53d249327cd6cc128112684d13dfd
c3e8c6b83815b90a3c5e578909205757f2ab170a
e2ddd6caaeaa5da8fb766f348718504db3986650
09d98c720ee469390f8114878cfd4f46650cec6e
ef2c2c48492148136da005ca1cd82b3a04a32ec9
1f7a8dccd4056be197e8f79fe7bbf2b8bd89c53b
e4602cf33b4359a1a92ffff5749eaf3422600993
1027314a211e7b0e2b05b6bd8f179c12f784517e
7e6eb623f948dcaacab5e1251c99ebadc270c3d5
41fd3bac90eeedbfcc63255a1139d16b733db5f2
b605eb59fcb15b79f0b9095654b8db76b997736c
9ade247982d622219e3935880cd2500d2d3c42f2
d3157fb66d158c3f7073988cd5135da88a48a2f1
2fac9c017f9f3339fc56b843a4e0b372d1f770a1
6661a85ff7ed08bc32ee95993e36d7d0219f5d99
019c8e808737da10aefd430d55d4a96695a8859e
1aae9cdcf2517fb75451442eb9e93f77db09cd7a
4a787fa8bfc011e9cd2f8d2b4eb6aeadcf77beb2
b47785f4ab321d38c5a25eb2c469c940f73801f8
3d27dbd01aa4a707a4c179d6f4b12d2bce16d097
421563d59a5d6d21a90066d79dda8ac825e578e3
1c052514f657db4f56b876814fee2ffd564fae59
8204210bd612ade3760c5c9eec6d6b1368dee15b
58128b9da11df305d8e631bcbbaa6aad2ad970d6
ff6ea709cbe6cb3c54184c8f40f1cdbc794f8473
771b9ca31fd14342715c581d690d584d0e1df3cb
7b1b4aed94bc2787c2e8654bb7a678c56f96a214
4aef80f8e0b9f3a18e2afb6d10dcdcc26683d34d
e784e64956c558965e01fc239371949d3ac98c90
324f9dfb93f95365b8a8b3374cd729476f4c9bcb
662ef0f5c62f781c4d20406ee11333c63bac8eef
1999435c8a37723b3da50cdb9a1bb594d1cc280c
c5dc831c5ec6c740e03cdd4a7349de9964947666
97509a89b1c27446c4ac98d0756f6a587d3ebbf5
a13c75880a4f9da78ef498f8cf7f006b314aa35c
c52eae8de072141afe6620df1ccd2803f86771ff
d1eea9c043477cfcdb0bb284b1176e215f0aa983
3c79fa86db0cf6bbcc3673c2844e85ca8679370c
f814193b9d8f34c0c344f734d66aae2a032dddc8
1b0f3e79b1b3b9e96be90ec30fc6a142057e84ed
b08eae928826bd8474cd30a33949af242dfc400c
29d64660c735aa0c52a29452342b631a09c1266e
2bd749490845f2edc7de74dca4b29fd7d7698dff
96b8a6154eee8298916907259e1543677c8910a5
a2a2059fd77eb8c30c0534cbc766c21072a9829a
08039bd80bfdee7e30ff80b0eb8873ea60ba2a50
78dd5e36d94ddb4b38c5be38d2bbb56ada470b81
b3dd9f3535b30fb5ec664f16aa527bffddf58c6c
fd52837724167ef174edcf6260581f6d92bd3dbb
9cf737f89ffe0c75614ad388440b7b7706b6316b
b3b65c9af5c93c319f48be084a538f5a374e12e7
0f1f6967a21f8e4cc6ca7448dd9adc5d09c99edb
a308828af32b834538eb9b2b9c3833aab6898790
3cc88877dcea023b6c704a81ad658e5d40e8e28c
bd0a5aab91e49e2c36aab756bca6c1d4676a5db6
0fb4f4b86ab649201b02f5ebac88b17a1ab1eb1a
3e7ea383e6b1d713a707ed525bec188324025e1c
3839e36afce7cf51ec030562adcad7af941495e9
9471628798891a7bc2cf21721764520325630c9b
965703ed8e1a320e190baee91f8ce6a3c07d98ea
d22b7e1406dbb03a6d50d649030b70b6f42d1021
9f680e794f0f38dba5088a50025b23ea9b2ad6ab
a4ddde0deeb34ed1aa26813e3e25c9a19df22d96
7b5b57b7dc68b67c1e39eb88d41d377ba96c6606
fc6b41718d2bc46a4062720b5f8a79a67f171bb3
118a3a8ba8497b0b68ebe0f875ce940d84a7315e
7a70d70c54f4b73e25f7860f56bcd8f9e532f16c
071917b066b8545096dcd241bd6f7e2da17ce26a
132da1a5aa17e496019e1603ce3d59fe1e61d44d
289f9db7db45a044bfc59831b56e25cb4aa2e7c8
9d409075cb2e052ce66b91bdc791b8c6cf37dcbb
1b2545bcf251668d695e8cbf9b9acfd4507eef61
cdaa9fc44c28f39dfe720237814b8d0f07f4d6cd
74c2dbf7a17c27d606e21dc6be52de40d7e17f4b
a18f61f853d9a2c1c65cf4021e2bdfa785572fad
27d14326c700db52c1cbc2b61e1875165aac78d4
d29647a46cd2396c11366309a3e3c19b85f3d499
933592af7905835bbb668598ec3cab92eef32163
a40de696ac0207908f22b2b50330e22e86e45329
3bce843ee30206917ccdfbf283c73e19a2ce633c
5f251c2603135f0565ac08898410d795dff8e8d0
a9e7b9d395c19da3ee99fae73d4d0f3e3a3121f5
ebeb17c7bb8d07d412b5f02786fb79b0ab0ad2b9
1ea7e6ad84d890cc6d002e9e698055de85a28cfd
6956a6f38abed183071e192fb84f4f8bfd090eb9
b453c95fd3fa689a6d70e8878848e5d6531e9ac5
fc2ce0d0198cc79515b0f7ff4d5891b4cf347ecf
666e5d7b945c77f3bd9f3fdf00bf75f3a02e3499
bd85b0cba676ce5dc076eec5146fd33575db40ec
be00f578ec251393182c202bd130350c30f9b088
ce25943a4de8370b03133113eb9935f92fbc7a75
ca09cd34f1e976658a5cc60abaf880b2c4901e10
e5da415c49b335f665aca9d63d49abefe0ab1d8e
6e72d1e9f16f624a1c44f6d605c2489c7e9d5c5b
9e953fed92f75f63acb652eb8b2c3b3245ca24fc
5305f6d718b92844c271f2f4bce64fa25e224fa5
789550d1160af7a82194959803c027828ba5723e
50796c52d96b4a024ac637ed528d1947d1a228a1
da727eab528a4d34b1c94a100c9efa70119cd805
72edf1464ddd6345a4caa6e124de0939587b0989
93ae5495f56f08b888269b8fcf175cc7df8f1322
28bad6d14ded53978deea30a09d2a27b0cf35188
ce2a46a203b146e4cf3ebc23ea5de2dba3b4917f
623a66fa858ef308693b61e33f2c7ba6686d3151
d1fe6168c0c4a9c5bba9e04afea5aad5cc7dc2bb
63694b5ed20fd7c3bb05d1e42fc9d6e96770dbfc
803cb0b5c9ff81ba0b4ec018fff529a9b7cf43f2
14ba6d00aaf750cc165764cf09a66c53d2a005a5
e73c80ae862805f76cb4c45de0b1109f5d3e14d5
5ba953549004ce8325163ec9bf2cbd1f045f1913
cc335f4371177761ce88a58a7d5e710f202635fb
d5ad6febfab6a7d9d9e858b48420fb27d33bf65a
edf74484b2277d89da3d02da5ed694fd6fb0716f
1c2cdd56e2a682dfe2040daaf0b8862470ab7991
27e1a8d2eebf19730394a178567c775dd39ac248
715f8bb802ecb1ab114f8b904fa376f40ccb50c7
f935f97b9f5e60a65c37bde6404bfce9e2b02a36
966389eeaaf6b674bbfbdc34b06314c2dd7f8591
b63e5497f3a01e91c526e52550da7c907737792b
50431bc4280a683141da4c51375ef07636083b7b
f659a11ff2646ef5a01ebd12128e73247d217c82
353c3b7e16645aa9e2be04e80707e256965642e4
df94fa14b99a0911478d84280f95aa35482172e9
b1243dd57bc4692e15fa8eaa8e6e566aaa65d289
fc9c8ce15a97920e6bf0fedaa6c50631acff1a31
70c39ccb6aa591494b4bebcbf13f190eabecff30
84b1d821501a5acd4298b3561e951333df771cd8
138c4fd48455093a2c8ffa962dcb420c3006fb01
f3207b37d34107210fda3f7b3bc999ac7537d7c0
7c82a41e7f18796040b3e6effbf6c483b7beb915
b3dd05b10a8318c7af07941d3b13b75b5c4f5683
5182fafe486b98e95bd51d2d665a2a18f397fbe4
ce738b86f9cb4e73b7e7458c8e9a6c4865aa187b
690c364e3e6c98f3a088baed4aa3006fd4c79b6f
bc20e36d1659487e7975ddd1fb18e53867149e8f
25178498408d82ead8eab484067152398acb7335
c1cca8d4eb0613a59efae32be160a5d907a9f757
44930935245c606dc826b43040603a71ad431e54
763ee179ed8e563ffb863f8977d9c5a31cdbf0a9
6355b2d5bb6870b770e00f7dc2b9ab275e3d6a9e
8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722
2373de3a834c39ee799a0a7f6b099f0338ec82df
6b1db06ffd30a38480ac32a12ee9b665721ac147
5557d6723dd80ceb154d49b22869262ee64b1130
f1c3e0a60cd1fd42147cb79c8ee19d6a0f224303
7031baf4de70d1f280df2c3837861ca042ae79b8
bfefd4d5906bb0ab37cd58049b1aa6cc48e07e4a
e851b37384697a3f27e7a6eca391d25fc8ce9b60
f51d8522f761fab8df285b2fa3aa8c6a931509c3
9e6f2e7dcaf419d7db9e0ae7342a1f7bfb98ba26
d962e073a077fe4066b937412d0f6d435f2f4f92
0d0bc03606fc5c4d655130b9f060b018412187cf
daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097
36598e94de6161e92dfaba7518a8ba7313bc9925
4bb4ae964aaf3ef1dd86d2b595a022a9961aee5b
711e31876fc9c16f921891603abd8fd4c2f26857
f26c1794c360f21e23a1bbb878b2a34b0229fac3
2fec96c1b922c681881f3a7e524ded5f86ab11c4
3a8c5d8c261034fa66f3a98b52e3717de9a9ad96
45863ba3631b41587cc34ea3f7621bf191f4eb9f
70411eceaaf403d70ec42a62273a598e17e2f590
0c1a1ecd8062d98df568b076d71868cb022ccc50
6fb25ec080f0151af5d61ece4f4f2ca3af2d051c
09b01df889135a0ba5a2dadfae952c8daaaeef8a
4e0f4df508db6bccfdca88a2bcf26e03317d4c71
c566721f93bb378064b5101a9d5156ce6018159b
ca60dce284a912a0e62500ed6b097c1960dce26e
0919ed7222874f28a047d4ace01e15efd7edfe7d
1f28d17529b61cbaa62098a1b00b5818e29bc600
4d7694fc06e9543508c3babb8e351174345b122d
72e89c7cf045425f882dac9c2e723e73add96100
159d522418cb362957019814c5b6de0035f551cd
9fd8f60d1dd31235b31af53659807573b4b53c50
608cb764bbe79671cb4a426781adcfcf9feb6a2d
d1a7edafe6a978e8f380a74f1f6d386d871bf417
2966b00e88d24531be8ff24ac6c82d5cf70ae116
9ac926b19711f9c51b3bad33c6e6348af5c8796b
3c7ad43e58196cebcb3e912b4c35b38bf74a1e19
cf11c05cfd66a3dedc23dd4874e05380f118760d
7b14411a870638fb16f4a6052fcd64917ed1505d
a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1
3dd8069d498c0cef2040ea3ce54b793280dfb1a6
6c2511d34e54923dd7c2195dff882ffcffaa9631
4fbf3498e4c9f43d7143d22f7a0b0f0ce9a067bf
de5c90ffa4932daa2eb83cd6f7c831926bc5b9a5
9264db16997eea54e44c44a4869845f94f6102f7
e8a382b780014dfccb7a6559b71cb547a829047d
8cff2a9522fcd7b7af3181f73aa91a2fce666722
a9c70186f4a96a84d09f97ba3fbc4cfc94d43d63
096f22f42494fad3990d6a2d74a9844dd6af977b
cc2121787f1242ef008ec037e2da0ec04cda42e9
aed30657939aab74f62b96386be0e96f9e902a1c
d1238423cd03725a2beb98ffb157c4e5022ef3cf
431b736152fcb2f15eaf8e6f2b3010b2aafd5188
659e82ad0fff564050e3363172ef52a9a948a27f
076e544330cef5b05f16bc351b9d87ea6a931b95
b9f065bedac5d0493ca2e8a24d081a6e594cb497
0dce8934d708eecd282dfd14480f3557cc127a95
13f05fd0df4108bbc4de0c6f40d949c975122ea5
5a4f18181b64187fdfa0f0c21d6a2ca476a2469e
7c50e202bc44878533a9eec75fed6c1744e0a281
0792ab197b3956a2631a7b46f773ba11045357bc
18db8f19afa7464645b265b771c397b188b6d1f8
81b4398d1e7f594c956213db39cf1b021561ef29
844f5ccfbb1871ca4540de222210d364c5ce304b
30f1bddcb7217576c4b746ca0e84e50e3684cf78
e867970356883ea35b8863edf179a3bd3f0cd69c
347b63a2c9e48740e8d79c9be8d620d22e1eb40f
8a36a0ccd84d73e8bfb5989be1510536b73b9df9
062583ea1ced97a69fd5df986dada75c33c940d8
f8cfc6aa070047007c18468b54996c116e593642
08fb03fdf38f9055a55007ab4782561ba48f1b04
c8a6f15498c274ee708b862f61d8358a2d4c11ea
0566b51e1fc647d43e1a2dedc8a2d80acd70e1d5
baf8706c69b80fbf100bdb854d96d1d19bb1ad52
63645982e7f5d9d95f152052431db81c2f119a15
eae29fe1dcd76ead474050e5849a6e36ae1f8b29
1f2c9ba511080970929a98ac82e644eb11c65dd8
a4171ce18efea96907998485b2a71e3d4f9dde4f
d0b25f9a2b786f80b5a794f99732b7653afb1ec4
dce1438a65f25cceffec22d53d41ea35ee422673
0173bb6f2d715c4c3839c17e26a38bd522e07fa4
42f806e5a0bbc3f5a02394893343e7e6ce1e94f2
6ef4215401ab8001886973790886dfd75446c037
c5d2de6b4c976dc152c8618ab3e8e1319018dc30
40bc204a9b045fb4ddcd4412dddf93cdea720a2e
e314a036a8942fe4ce5d9fd586f0a8bac90f6df3
161b0a84ef14b9eeef2ba1d865a5056a0a7d3130
2140214f631a6ec8a4cd9c45e1001a5a40fef5e7
67d060c4edc01f4a2a92b05fba4fb07ba43b216a
6bf3d92c78fc0736054b7dc42b5414b3caec08fe
61bea3b0e5f5f7172015d54056e25c88255c4a3a
a0543ff31cf117a8b2bcb7f8da9a69495d9f9412
4eeaf81e5b0b9345c90cedecc0abf0f0d370ebb9
aaab7bb6d7660df0773a444bd6a4a20f586f1a98
325c36911589375105e5437c513bf880aeffdc75
cdc9d80325162532ebca615589415808243f5877
3e97fe67e31070b78a333dba397ab4ddde2e7311
f667741c42d3bc8082877638726e4d3a22285431
e4efa9715632519e202f57250b3d8954b17ac9c9
fd660b1bee7af09cd69d1125cf35e6aa5826234c
2f8e398bf476a5b0682e6fdc0f8b64df1cf0347b
dabbc72269ece1873a9bc9a841ed7f3577312da3
6bbba4c73c8a9540ac77a1ffffd618ce2be3ccf0
b9d861bc86c97e68ea474750bb33dfd10f72119d
bf9a420e62f4f6993daa8b581a6d4ec28ace4730
e0885edbf5c198f300fec204b3688ecf5e6839ef
43acb4c458d3aea42fccef8c1e713718d577a4f8
58b9accaebab8fc4ee05a52f6698c24e8bfa65e2
cc605afe381aeb3a32bd2bf39c0415d6c5f243c0
f00d196d208240cea418ee3bfa86f453d7f4fe5c
963e23c5c23463e331566ecf2ae065fe6f465e98
b9034bbd6d0a84129e2c4abe9938570a0c6b201e
42048866021815214ed1ffb41d27a0e5090a3f4b
f11e087ed68f35e0f3dc65937283226a3a323f3c
8a78744fcf2fe2a787ca0315dc6ab80a03c4db6a
a2f29587957bf9f1853b9eeba2b05492c9b7150a
7d34a5a986580c5fa23a165c800eb60ad5348450
f75ce96a7c4673b18100bbd9d0f6b8c382901b68
d9c75fe042245114199810c6bae601bba0aeb87f
de29c8bc564fc70a942f13f114eea4430b105e08
e370de6e30762a5fb49cd39832c6ed98a60bd82b
ff65de76d08fd68772142066882fc2da9f4ddf6e
b31ad637454889b80006372a4074cd0c2077f884
d85428e234930c9d1352d1e5494b5b245dcd1a22
5ab8e5cc696c9116da67316b19d8c62abde9ed82
5d44aeed9a79c8a149af3c5c22b697ac0beea203
74f48aee289e44577577a8be59dd8233b592f504
e751adc3b1b146663267485a2dcf1ebe239a5c3d
5da9128adac1e5d2ae93d1c20b8c202225ae6355
894ca2c9ff6321673af96c42b1028db992b98943
08d105faa5a0d6ce749e66f9485cace10ea3a375
2f52c5316a90890e8185408429aca0dd331f9728
4fc4dd12a4709902916130fa0cb01209341bb0b4
9e14e18fd124e651f079728315e40a16288863b6
54b2f3104e7200589cf117686fb10ab5bb33f14e
e130a54b78b1f9b096a5ab1b98debfb263e16663
8c16199578ee7b0bcc94a807373569055678d042
9abe5d07d9d68c49971af2b93a4f83608a363284
435317e25c1f3571a72d97d089ca085ffd0bf20b
5e04daf3171dcb6095a9ee91fe09bf5a70df43a0
18cf0da278ff255a2f60a1ed2bef3cece298ab05
f411a73a8caf915d2685c5065de6c918de76daad
9874adaf91fee8a95b7a1ef0ad5014bf55e016ef
a7d840c7b53f775fda89ded048a2d8a7423dfcfa
104a401041fd76a07d6da9a1f28bdbf37d10f74d
bf83cc10ca01f0da835a13d9bda9ca52cd251bea
17192884645f6c9e6135af2e691418734bdb6aac
d601c996f8b9b16383ec49f4a294e09e3bec83c4
16865eaaa8898e0ea0e87e8516a17d5f95ab471b
d397e8c6729cde9044c1ee42d28f2d1e98204cfc
b767fc11d8fc76782a969535772caf9f6df95d68
e56261981bc8ad88515fda18d846bf61bf6c2353
2f93eea8612d4ced2eeee52db5ce66bd75303455
71da1d1913a2fcc0d4e7226974be30ee43de3ae3
11338cda74ae54f5f8a86a271bcd04cb604ec806
902fd62cebfcdbf91caf2377cb0db0ae577cbbfd
0429bc77591e0a2826390f5a2545e8a752dfb35b
9e51cf9da473db64da0af8587a27dab945890990
5882f0f31a400e94182c921c39fb4ddd9781517e
cfc984b52833ddc8b8b9c74adc09cebd0cf04e70
42cc8f8919d926d4cb1209cdcdd4e201f3d0ae62
f44272eef7d8d7945fd038db1b1c383ffad24ba7
bf2774382d22d4f842c0a581cbb296f8b1984d49
d96f6b597e22d1667bdf50ec71dd2b0fef9d1a15
a668adb2f3bbe7e4b6f6aee2ca721b8e466d2ee7
ac5347368c5e7943a853427d42c8dd0ca2958939
1bfc8f675bee787718c1f5d24a300d7b86107fea
5d880bd24bc667dc41a1f31d5713c8dbd90d86c2
5bed2809676ce7157817b42b1c6555c073fa0d6e
6eade693b5f5f0c6d7b75d61d44b75eafc94dd1d
386f10152bb3dcc7e949e36fabb089f27aaa6d45
ca072a31b75eacb8292cfa91fb779020ee5f6118
6046b0ed57e5e96d94f5a0dfcf5b77df125ec231
794c3bee303760a10e5442d23cda23b6c71ed5ea
aef0afc4f41cab8148ee17a4ea7dddb6fca0342e
cfb6b4b8c3c01be5a1d43695c9d2988838f2254a
1616280e701452fe2ee16e6e9ae88bd13de68bed
a1db9d9c61bb4c74f5dac30c9d673c84b63c6384
0fb2ea01912a8a8859cb53caa6a7e33b9b8c9333
42eb30b557a129514aa76470115ea8bb1e35f027
c50a01163c10c9467986f78e5a82cb4975556043
c86dd7db77896014952396f60db88ce551b5a431
7599f1b0501ea3dec6d5c7afc72072b7d658d9b8
f2b5cf977e5f5cce0434b890cc184872bcf1d5bc
687a64249824424a470802efedfcaf3649beb955
d7621d3c741403a604eab08b66658d71f3452e8d
148907eaa6e6cf62e8e253d6124dbd24f653dccc
d00ad49ba1c217ec55751ed6461890e8911bb001
2df6cea5dc471c577065eaacce5a75658861009f
4f4e53dd8517c0b2cbe36f0cf866f9f5ebe294e9
0620be185dfe68d566205c6f11268378b3675533
b1c5b5a09b545dabdd4a10d67f31d93779af95db
76391e5a045593f4cdc97535246ffafe2a5ecd72
801e227002b90184b6880619b00eec78007f4a30
1382f0f09da0d329609d3fccd6a4eafa48e94665
8d4a2ff6c65aeb24104ad5daee443fa89a5d6652
15077df5dcd5c9fd996f31cd56ed12a677a2b771
2f0c006e5f47dc1ccfe2f89c62711b4f304218aa
401844effd2c08b85d0cc583b3b49663150d4b63
8eeea0c1c72e64f95114c53e9a41dabc98c8978b
45aae8f22343ebac74aa78d6db43e93e88831250
90fe9afdbd90e910529a6cbdf2e5582382d27989
6972898c73f6045f08985b2d54f2b7862a648ff1
6ffbdf03e5d6863c7441dce9adab8fbf724bc8a4
2692eb7d0ea1757cbf2508f001be9ee9f2f87ed3
a30f62e037a3d682233878bd6ad710f2d14729e4
398ce3dd7c85766ec8645d7815fac8248c568b54
9ce1594a3e521c3b0f6bd8b8eba1cc3a14e5ced7
4dfcdad172a0959dbbbbe5084b393ba8995c67dd
f746161e4ffa1427f1b2c7b08fafaad3046a9222
3972995b195de4ecd0055f63351987a128546208
d5935e0d5580b29969c68c84dda9d957882c8921
322c24252ef6bd43aa646c7a7ebf015939e26991
ed2e7facb5baeca99a77e2c4efecdb5518890c27
40e929f3989b793b48d85bb18004030d9df34b54
a776161b8bb455734cb3019976b5718bc208ba8f
093c7153029151d28e4f60d9204d0edc31e7e3a2
5291e69adedd50438763fcaf9c2bfd05d75ca5ff
68ca19239c5b844c4f9b82776d2c18d991b880bb
776dc15d3809dbd893c878907960ad4ea556604d
9463204774c527ede4cd4dc4959eb02e1cfeaebe
9e26de105c37842574f337d7b96565850a61d800
70c18d9772113dcf36a386f7950bd65bf67a8b23
95d3f56711188e06e8ad5e3e8010cb6a09cb5ed3
4460cef2258096e1ad518654c127eea8ac71fb79
eb52a1638d528ce0c8df43d1a870da1474c2428f
5763419e53ddb4f56a511d0c980787d0d1b4e993
9bb80bb2de9425d04f47d3570d1ccde5e383e66d
ac4ebd5c900503146c0bbc77084caca839beeb67
ad0978e8460f6894f4b18169fbd76d2ed09757f9
24a88b0c7a37254d961e740f1dc5071177107c01
42159b8af9ef931388b91a15933f69d977d791b5
26c691a88b8a403e7a92ce049368cc7efe3567ce
fd743bc1097ad82cd5bccc9149ac0f63ce36a239
67a69e82e9ba0cd0b940a9fce7e336225e312ccd
d6dc556b315b8e1b99922eda0319548ecb5233e9
d627e19f0e7b1b09ef36233199499fc651403f96
f4a1faa55f8f157e36e9b6194055c6dc8fbe2763
0deb916ce9b997d494a4f5e14ac33ad0c9fe5df7
a80e0e831f9a087573c8be2f7fccc7f574c99595
52ceb03971fb7f878b8a610fa97b07a4de510057
6ca77e6fa4577b378a564bf95276e62158e2b4b6
8e657c46b4a82b1fc4e4487fad9d9e9be07da2bf
bd760894e689fc55e044860f3252602d86a74292
06d72ee6e3ede175130413390d15726c09678cfb
0a0de3bff058d3cb4f82d04f9de1ec0d957ecb5f
1e2e9f544cc5a52838b868514b42f8c1016efac0
64e1e4c4a7825964b7853402053ad5daf95487b3
2832d07bd187c8298675cf1f6f2020033624e0df
79bba51c2833a33d574533bf16ea63d97d201736
6f312d18d4788838bbd51c409a29b11ad8ccf009
ab3d88bed12beabdc31b9f8808da9dab0a3dae64
3b1cce6ac1ed8fe740b0b1730bb6bbb63304f1e3
c1c52409c7f80e9656eb8a1a9e09f7f29f1c866a
6ad70bf28ab96fe47d24898f4ec48d21166342e4
cfc74dce2ab985c8cfe485147de89ead9a2a701c
1854117e11b923066d0ecbc800c9db6ec064c9d7
a9042bb454c0dee2b44922f6a0ddf1849c8a7228
2dec00bf998cc3122b00453832533f6b80ce3059
7465ed07083691bf03e737e8709afa0e20c5f82f
b672076889e2bf7666cea2bb817c2be541622c29
caf2523d6d984c1c46b1c5056b835448f4fc02a9
ae5cbc332f60a4f9bcca56c4739410c9b2d3abf9
e1af8299421eb7261ddcadf3630cf6dfa6c32099
1acd15e832f4d16d642ab5568974f5b83e3ac3d8
b7e6a6b3f511cc8aabb80a4460c417fcac90c2e7
21fdfcc12c75a3ad3b0b4f2a3053f183941710d5
dc04f75547c55a6022125ef3684f18ae432af236
2d8b59dfd5402cce6da3949fb1f84d7492ab5cbc
e2aa7005e792abe50ec7084b4850db0bf8c982ab
9fd47435098270dd5687b9bbaa34d1b9ecb494e7
fb0737c2f5ead1e96c0eb3f72305b0d509cb53f4
f4334c063a8fdc1365bec8e51779f5a5e539c632
fea6ecb7464fd19e3981a6297a30ecc7981de4b2
0bc0f41de71d12f9209664eb35dfba0048d4998c
1c37e0b6e8b036fc3dce3765d195cf57919bed02
2461ecbe6c497c7da3060f955e48321a53de97c5
ee8db92b391a602cb93f4ba227b152bcf81cb054
048d99365055be4021508378e90a90987df38283
a3e14d3983d8215c01b29154edbe1927dcfe79af
b02398bd5bebe35bc44def2963fee7a4c4cf3568
ff98621c682005e2a224f62c1aa5028353a5357e
12fea1f9fcb7129531fa3f30a0688a80e68b5353
242229bbdc6beacddb4ed263c759d3ca52dae927
c5042c5c8b8c932c61262226df9fc988d3dd7662
f44703b57513db0c6a4ce3ca3fe0ab3ea07bd83d
928da1904dd3dea53fa0ba5dfe554c452013cc04
bb60c95face9e13d4d62dc028bd20e073b4babcf
04b0faec0878e8b47e732369bad771e8297a6baa
f0638e1d703324110c59579956152f952f2cc3ab
11670eebf3c9844fc34793789397fe05d60b4a77
bb9db7b136b991ba72b2276ea08c677217372418
0b817eb02d8c970b3041591f58a4a7c4253ed855
bc443e6def9f79e0fbfa1d3b70e59a158c85ebd9
e433aaee67235d51b8fc34b8ec625edcd3d7947e
eb4e1c013c5b2f53ec8a31c98fbcd752d089ff4b
11ed191c4f03b96e9731aead38d1b467af69c178
8426c25e7c2351b1f1f7a48d3ec01a79622f558c
32da620821cb3008eab38080a9292599f1ee3d58
ebca59c355524893ef3facf6ad12074e4661348e
7c34ced1a25f62ed12b1bf1158167fe157b60ae7
b953ebd647221fbd17b033b90eaa5503e66b0019
17abdabcf3d4261dbebcc88cfaa1810b20811fe9
5520b936c8cdde4802352b1cf4ce1ba5cacdb294
c4b3484922543d3fe24d83d561ec9198e669d4c7
e54d02140051c9fe0ccddf982aa1d7b29d7c3263
2ec5cdadd47eaa80ba29800a6136aa245c1f067c
db7b47014640b98a8865bf9242a684a8ed9bb209
14f661f16c1aabf017bcd7b0fea29786366b502f
722962a6553fdcb5349130a047c70c7d4070b46d
84b8b0e04d42732ea65d452aa74e3575f75de10b
f1865cde4be5cfa09f94ff9821ba1d38deb45c49
500e12641f0f7fb4fde1221f7f8052ef351de5f7
942e0f44143290f7475d161fd27b049098182841
5a5086621e8751f9666cf0a3d5956149202e1487
609754920ff466cb720aa317f96b1b7eceb30ad4
082a099ce4d0c306c9af311189e9ae1f8c4cba68
aa33d725018cde8ab90b73e355114343be9072ce
543a0daa84fd7dda27536a892dd88896ba25b1f3
59ce6d6beeaac84f468963740cc09f40eefc398f
8754a0f6a09ab97feffc72de50d1bc462fcc7ec2
c0e3aa48e50d3beab2abbbdc7098c7959d81b94c
ce70456bd6bebd23787157dd3f0cc65eb4ad381d
d05aa0afd8969e6c6e58f63795ffb0ffd89b5378
e0c003921ff62fde521a14436bbeac899181a7b3
f69a11209a5eb346e0e79ea95060d7c22999c210
0ef54a47cf6012a588dc89ce63d2cf8d3106414f
9127884102347420f8185b819c137610b7e51126
b9861bff6c54b2eabafbe684647972f3c4f2a747
f4085d4c0b2c20282d8197507f6ffb35522aa2e6
160874e4cda4402512a4ccc1c36a723226cabf2a
3adf6cadbbfe23b96f8e53780ae5f1bc28f01077
2e24fa83ab8d4c5c532e98f0fd005e4f20c833fc
b8850dd24642e8db12cb09726aaad3295c0b10c4
4ac29b33742d45c8cdc4da91b6e994d6cc49e79a
5e96277660887473bdc8b1953fcc35aedd092e3a
8be123d4a969fb67c7d46754bec8a51de680c97a
a763177b7ba8e9fc96b5821499f464bc5c30267b
6687b0fc2ac79ef97524f859d39d165f98578a5a
66fda8b2e69be9d25c621a0ca802434dd3f1f9c2
52fe4de8a3f1afcefdad091977f9b1a21b92a5a1
5c234cd7f4ce3463ea8a3403dca76654200fe547
7e14028056eafe6486281fb96d17d2f873f6248f
992d907d5caac2269f88788826824df7914fc3ef
2c486ea78cfcbd4b05c7845db23647fe2bf61d6d
5ce7d75d89b0da57124c2461364c32f1e7f7910b
3a5b9284da6acc309118a04dcba3a1cbca2ecdd4
9bf6462a81179f291ba32404cb8ee329f3e6e593
30719c65a90de4791db42c7c1b7cc3e17604f828
b40410b9083d960fa5ca34def27dc1c2ee61c077
19aec1956502bdf46a6c859ca0fa7e4666886bca
692603556b895a3a337b5a82e0012f69e8707896
1ffae6283039532568e776e7a55d07b05c7aa62c
54d581a26ea5cc6ec540be1f108d18db0bbd365a
965ccc5a1cfc6ad1df67c8e88cfe5f044272eb4f
de6f27a82e25b500f5c63f0cf7123c6a0b1669fe
98d784a90b1eaf326983efce3465531ba3b79d00
e7ebc32a807629769f5848ec0f7a2ba7e3fa281f
413ed876c51b0b85661e938b1914dcd3821066f7
4ccfc10aeb564246ff96a17f854a4fa5b46beef2
6bc709c1c5cf974a180d9fe141594aee17285e8a
deb3d52fec87690fed1a14aa4f8666a59f0fcc14
979bf9a120b592b4b7002424a44bf4b9b0854596
a43b9dbe90927631557e12f3fdb7babf51bf5116
d3a7ef9aacb50cbcd85a34966da10304f048a576
da4f9e3b4db0404582e4328bd33a7977f3e8dccc
dc44e18a62f2bb07638dbd467c2df88c58424346
f5e440e11d2a06873d52c3443f624d537788600d
d2032ad8b85b15120621b0ce73711f1792da781f
da28a3b97d88f3fc40bdd9e4c29a737d88f030a0
a6845d137a4deddc939dc367f17080fe5fe4e258
b16c5d49c4d09ee3b1c61ef1d46d568730f412c0
0fa13661a9b9ba37df8bcdec4fa30ea91d19c878
8bc527afe92d96fd31972cfa4362cc1023e523e9
34eb8991ffc7d23522a2764821e03e0a774a2979
56db793abf585246272c17b3e1079024c2bd1deb
0f22079ec250534ffdc853b892162c160de8b302
6263a8f6a597b54898d4865420e61c6368f67080
e916e1d0e0f51b2841bcb617bee933caf14049cd
fa84120041353fa15ba2345e4442ec9e10ffc25b
0bf68c6eabb671e2c02a8fabf76120cc1834da77
84c672b950e3427d9abb5b74d635e586bda74c4e
0aea6467d5022e3858bfed5ce5d24aa877bfed1a
f648d1e451851a392ec157b60cbfcb898c6d8138
20cb64fd5cc597d456961e2d223c386c5950416c
8e2cd6dda72cb630c1efe9036706f92bb3466740
63110e4e74f1c2bec7469c131b097b4ab5bedf25
c37bb106ec37b73a1d44494a268f5857a2b90b93
0b4da8a182e81009fbd65d56451be31790132471
31a52b868a209f0c8f3ade10a91148664526dc9b
5088b05874bc5a93099751efb19abe213ce2d0d1
d28f752bd30791925d7c6fbf08cf426026cd3279
59fa6e39c6387a101c2d5c323045b5e7d55f0732
a90fc8e0f36a0d855d46085d48b3f8c4c9a5698e
34a863061325c013695186e25784d56cd562a0c4
cae80939b64ac547c253fbb53f4c91c67d9e8ad5
b080e5a29ed7265302bbd9acc739d4bd39975754
d55b55aa1c38c1fc24b0f4cacf2fb2bfa13cc4ca
026a935f414f319840a64bb49ef13b3928ae6f29
c6618c0336a1c272391cf097b99e1bca019ed847
6af8eb5714109ffd15a57023ae7e2679d567e792
88c499cce7487e1d4b40e8c7d568db22ba59d90e
8750f9cdec153095cc47c41b887bc86fda4a0e3e
cc52902d97894d218cf6acfd2aa1b904cb4c62e8
6264b0a68d820604c6b85a4c093de22bef6382cf
eeab4d81a61970e9079dbd9a8033d13e0cc27980
44de5aeb00a66307236cb5b7ccfca1a21aaca080
bb9a388dad84486a075d822e4bed05a74faab780
2b27ff64d1ca3e45579562d0840480b3f9931b91
5b200ac2c7278c022c23a684589df1b31a40a153
933520b9beeea22009be7637b3186c61679266b0
ccde3f1a6e48abe8a4654ef8225e91466c6d6b8e
472ca416af9f5457ace9b237eccc08f175a07b29
f6144c34c82da903797566d44901dad231a7e4a9
c0d578e68f92d8add050826588146be0a6fd1ee0
d7981fd95fde4396a5d774be8db49708ef68b86d
058b15c1dc2199a810e4f8793993dc4ede61bb0a
c9e66eda1aa76b77d9a56bf0d1b19a1576c37a62
b79634e3d89667ac3b67531df917974241702862
f6bf7bb617bc7d39715803f8915c6b77316eac25
39bc18760f4b039c6fc89f98a132183b8371a751
3a3f4da9377970c5cfd96dc7f4717427384263c4
80dddedcaf316e1a1f3346c9cbda719b40fd28a5
e584e50152ea99c4f44f48a79a308cba7645c241
00bfee6f84b5fa61c1d1fa6981559e9ef9bbe899
1833df5cfe2cf85a9cf1de054ab53569f59e0ae5
14886ab7b706a6b19c262d4c3b9684afb0e879c1
482c0c5d0f514da98ecf74cac10dec078bd96a0c
3b56276ea5044cf66b9c03b5702813399f9e3746
81f4be3ce1fd9f08d811cf61413e374e0dc43166
7d72d96efe1f576cbeea5e6c59724a8d47f476b9
f50aa5059af99c4bc52ede25ee108e1e8705e7d4
2ab20654a24e909b0e44cf3b25e53e64a0a76193
e9cb3dacee78c2e173e94f11a6c68ba66c8f895f
70315fcdde3a60e23d39586a9b5a237ff9334a9e
76d2b81de4304f1acf7008f91c15f9fd404a6912
815c519159b70c32e1cf201a53fce22260a9e1fd
e332b68d76a8ce6b16439e235d5013a1182a22a9
56c5197bc8b2b3d331dea67fc8d7d313d1730ee6
e72f28d00a920022fd3beeb291075ebb06ed82fd
6bb1041efd25b13d412ca201ccdb98461e96799e
c779c42fc3bb5ad4abe8065559f6fff74cc9caa9
319da9da6b5e02b0465379d5ad77709225addd9a
a91b0033574cf8d647d3dd56708ce3ec787536ba
8eb14e2ebfcc6230fdb1f04bd40da1e8452af0e9
eb8163abfbde8250b9b7450860f06f65356993ca
96a4ec035df0805444de4d6c67323f77ed0a79bc
f82ddcaedbfcb7d25208987be6a945bf9a422759
261e5b9e6a0a97700d3e0b6bbf0c9cff2d185386
28c6dc635956b00d497d8d12cd95b61c47ebb2b8
85b87c94afe309afc7be3fa3e5ad6e303affe2ea
89b4f108d444fbb752592e7814fa0eef161056a1
987a3c2b9c34e9d7b4a11b13e032754fbecb4d6f
dd7473111a63cdeb442d1b74535405739bf7e866
514df03fdac570190b6c9f241d472e454d62d88e
b4117c306105c7e3279bbbabab1dd361a3b35b62
54b4ba60f20d3870a79467caa3b604971225d388
fa948784585f473882d2ab7085df5df21ea1a38d
1eb38ecbd6f28fb4ef0b2b3a497bf56db6a0a2d6
b7cefb87f053f26b4354d18f94c4e3baa4266645
24f8f5ec5601be86dd79c3c593e8640209f87510
a926b253fc0fde013bba32537907417e6364e70a
d52635f82eea28ee0a18ea283de77ac79bee3e05
f12f786b8679b37570b3509ae1c11453830c47b0
2f60699380c4bc929efc444b2413d830bad3e9b5
2f70118592b876b093e8c6baf72d57ae8e244a14
0f59171d711aaa9623e2ebc708324299662e55bd
e876acbd25c26828c235f0723fc5b4554f4ea9d6
2e5a151084e83d504acb5056d57f67cde737335b
b2342b5484b0e968f4a10f58025935df13b23941
0397ac35755f5edc409010579811e9101f86ab2c
5e806501e1718e64e12fbae84dd7f35e91620cdd
6944d9ddb0be2b586fb48eece8591bb62a5d5b66
e6b5a630376f3fc1e82a4e6d564b397b8ce13be7
1cc3d0854a26a83a3ac513e9d034fbba17a2ca94
719df717e2b92a90e53f2ecbfdca858440d08fd0
649b2789d1a5e18be4bc10e1c35d81b405cf2b05
e1564e1d4e05b2d10c9cfb1273a2680a3f0f4dba
9193542205121e73b434a1b5019f0d7ad26bc021
f241bf89479214a544e12446b52eb9d89869aebe
65355d53c368e290265d38f822b1bbb8b3d23c69
66ba7273482a3c56accefba709e0dfe8f8d75824
a2824db366a429dd08c368dc56620a92d4a6542b
a52a0a7feaf1813fac7d38a61341e0894f89fba6
2c6b27c369a9d2ab7f7116add931089b9e8f7b69
c8619b9056bcb98633301e3c13abb42fa4e027fa
044b389201cf912c8b94e7e228cb136493d967ca
60bca1329b31cdbc0feab8d9a2b5f617aee670de
5d81e3d373876ebbea7ff5133c4762be95be6c30
b5e792e209cfee6fe3437eef9470e7765acda53f
1c020272cec98dfc13206f9247da9adac0ab0ad8
646ca712a1d3d4b6642b8d9c3f0d24e463102b76
97358092a486fda247a0e3bcd72cb2a1ab6f45d0
d83aba0f8b3bfec016bb62d146e022b15c35f1ca
15581992c8bbae7f8b4b75e088bcd61edc2355f3
e1d2bd1e44971a4becd718272277361b4f64fcad
43d95aeec1b9a4b12a47abd6b3b9ad50fe74e08a
dcbbf6f31bcbb4a3f03793eb6415c6b8202b9f93
2a2789d84a3fe34c9db7e4c4673479bc79b32ba2
701b17c2dc9a6d35097455e6fd410d4dabce29e7
629ceb937ac50b7ef41f48fdfba3e1f5a55c6068
fe7080d2c8aab8425f987c9b168f4ed42ad680cd
6d3e9d84546050e45a24a63b5bab723f513d75ce
881f20cbcdaaed818ceb9f8e99226ac8c77743da
33c94679bde917193e6af8644598cc85b3df1645
9152dcf43e3972bb029c9bc252d26e909d1b8891
28963c8f26b1ad75f6bfba4653708f4e0ec22d79
7c243eef3984dbd43b380a6cde2a1a03f381d50b
07f266aecd773341be6f62935bcf8a6e935d5528
60cadaea5e337dfe59c9c42b4d79333520bb931d
67a459f37c25a9efb80026e8a85cb875ff07350a
de46b2fe0dc554f71b61f0bcc8d6afdde2292a6c
11ac38b22e3f3de50a968364c86c1430e56627ac
5a4db26d013a854edefdd4bb34d01a86f4b43968
08f7c2eb78c512fc41d363db476d9912a082ec5e
42dfcf84c26960bcc9c0d2f77f9c9ab4ce424927
9412376a4980aad9f32df8651de907b395dedf16
d464f8e99ef16ef8eb26f285e54a2d5ce6024c64
000aa32a49ae77b3703599eb9a66b9f7d0ab7032
44ee9aef7bf45d3170a6b44c907ee94c637f73f3
1ab106cdc46e598261d9ffa0673936d35af923db
6590e19ab7ed5c709611a1d3746d0ae9aefb9221
2ac23d05c0467d9a3b49ec8795ae783626c73914
861464a0fb8f8985803643c63ef4b9e878c36dfa
673fda6b48b3d89767d6fdded61dfe41541ab8e9
d18227544985fbd2e01d73c706ae3bcc24f00d98
cfafe9734d14ae63db12d744541da675c68a26bd
fb0e7ec09f246a5211b3490753989a3e5e78c481
909087e0cfa28372c9aca47a86aa51af91b12684
a7cc468aa3453959c3eccafd5e66eb603f69696c
85ff6f624e23ae016b859f4829dd6f177b24c8b7
d522060b39e1627ebc07734d756b27637c957c53
7cd9b02827c8e773dc0c484a24dda26cfb2c8f1f
8c56bb830708cab8909c6911124af2565ad1acc6
3a4d587b32145384beb79942f6ba1137a1409656
c8e20bd09307de2a787351a88c93458b32d45363
3a906f0433a126420f5e98a1b9b9b53e60f361ef
62d1db179e700aeb45e805aa81de54036745f93e
b713a445f2bfa00419e7efdb5ffc0cf89e335227
fc89798458ce731dcc7460fdcf0d67544a2ba0d2
5e7752d2accb473545101b7d6096bbe599eb864c
94161cec950961a9b8f76db8ef0035dd840d542e
1de8a83646644d4486ddceea6a6c102133b8f1be
bbb2a3456fbf82679da87061c95d3d503ef4740a
0cc3dda8302dcb7e042fccd493b1810118450f93
e2bb53e59a21c042db3e0b605752e683d62618cc
79a4758dd5744731bad51286b13943b77abed1c3
feb357a3360f03fa3439b437c0d255be0c14e54b
bb2d400f6145f628e9973d529ca4dc017bb5b978
d663434b6cd9ae8cbaac50a8c1dcff317594184d
aa7cb8c39ed27ca73f1cd6526da0abe4a114bbcd
f437e359921603b19e22c44b44f6bb64c199b04f
061cae1fa91e579ab981213f4c46de15dd3cdcbb
dc4917425181e331c20a26437d46c79c3cb9885b
5a1f395394d8ac58ed5ade2185f3267b16493791
d4fa05b90d6647ceaf50b5f1b8504fc0e01fae9c
39ae2b013af4a6a8fbdd8bc2ee72cdda174e0d95
d01a8ee025fac8ecd9619c3a868d1979d64bc7b6
0682f0b80c5a14f1a2d9c6499c7481af34ebfb18
d2d8936f3faf747a3305f39bc4d12a37fbe3e8cb
428d4d7660cb092c281734b56d62dce45d7b599a
be1ba3d170d2119394c4700e320240264513d64e
61f0ccffa36f96fc1a1f20fd8d4ec2bfb911140d
abe0d774cf58aa24fd3d9f73c2ac913e7dc65e03
11c01dcc46761825183da2f641d81aec89e38393
cc21f43ecc00fdd11f68939b5aab167a2e6d0feb
9322b95bd7dee4569ef6579e2a59dd37f12c4daf
d42093a1dbfe8be8a96829b8783da5efe8c3d7c8
5c33bb6218a90bcab5fe88ddd0864a50be9014de
d413e3cc11c3b1d746ed9d187b4a7e695355219a
aaa67502729b8696e5f4953967a3f143d27d367c
de7c79cc7771f311aa451103162436077aa1699a
3db4a9b428b760809fdff522272b95c378949e9b
e3d26d7b1f2c26f419362606f484c87f4bc2cd13
79066482014cb25e9743b44622fb304b6633b24b
827c06b6cfd22d7ca78f56614a5be1b50dadca79
91cde0c3f5e20c4a77f68a91fc077666872483ab
cfbd22d765f6afb097d4bfb7b3407d60986e84a9
2be480afc8ad19a2d0331502be0e73cde57ee09b
e9a757769b395ef082be82777e68bfe8a8a79f90
5c3be6fdb01517c31d6a64e675bc9b52d3d7633b
7120d046258a99e63278d0cd3c7f649259c3ef57
c2484a8b43b3aaa60fb0a1681c735ab0fe459476
fb89e8bd0619dc59d72cc2d4bf7a8b17c699564a
940db2c87c3406a8d1a86890f3e2958ab503b880
cb44ab824bd0902002bbf1caa66c05b56829630c
15f8ac7f0878178cca61636f81323629624e4585
500b9b49b224e0dd1589043b7d6992edfecb5816
ae0d0d592f01a1d71ee5941b241b9af75c66ef23
c63817711e77a3c46e9c074d050f16b822f7be82
6e6e49b10f94aaf10b6e9224e07130ab2d818f14
b1b51268b8e9729ddb2195f223ea9120569f184c
3053b100f99e18e0254c8ad2642bca539b9a2cd7
506e2710352a43151c4d5df8673606a9bf395885
1cd29ad23586b888af0c47d11c33b6f6b50481c6
933d6b39d644385b20be11ed1802f13669bccc9e
3953b22e753306e566430affbdacb1fe18f0cf2c
b89e96acc404cb92fe60b4527e1c98189401f0a7
14bc8dc2806a4dae14ec1fa052fb319cf92c2085
819e019c9d5aa88675f8714028a6a0952c63282a
394ef95eafc76d2b28c833cec76984953f3308d3
61a36b9baaae66daf5ba883a86d4c0886256b05f
0c3b8d135d94e03d34a137a13857436be536ac66
a01a235c76298c4f4e67e8128c416fe24724c865
7b08cf9291a33b05d61b19ffc77179cf2e9ba184
f0d59f2e4329ac3ddf2e5c1af8025c88325053b4
e83f48010bb27b7fd1db2ebdecc9e4611fe97793
eb6127a4f9e593f6f00a8f3b5c4c50967f9340f6
4f9c6b6e187417a15ac89f7e76019f27fd637076
aa4a53af510109ace50301adba3ee39237056cb6
571325db5977ad68205f88d6e4d86b1ffaeaaeec
77db1f411d9b7d9cf865b119ea09aadc92238a81
a2f0e34d9ecd47343f8cdcc78841de15a7e5b2c0
fff34d356a721134207d6545fc134a412af8f885
5b5afddf1d3af9d2512fb23f420c29baa7fa1fba
6f0aa5e195d89a7e494e0362596df853762b4dac
9bc856ddbfbb72ad01f2350ded06d7713781f645
f1b90a04e0f8e682a4053b8e0d06c6afb1ee1219
8765339d0b13e84a05d615392655a9b13a604b4a
ade83c33bdb550eeaa645f9e170c0dc54940cb3f
838d430929f683ab4315032d9dda8e1d5f2be8e2
9b089e0545b2b8f6455c91584714e5ab918dfac6
3af5dcdb45192587bb3a338f299d7cc7e7f96125
ee17cbda2e69d9d19d4664cef4f96ff180ca8c5b
9fc4d79ba4e0abc41cb6ee48debc6a2308f22a75
bdb41add9deec358b0724347c73dd2d009ab7f36
13c1cd82670b0be75bf99ba5bd23a7c34460fe65
c19d6c9f9f39c010d76effe3bbbe863ec31ee667
6e539e23964d08d584a9c16050949424d44a3601
ce8fc97bdf64cb3abbe042de3d9030b0c22b74dc
576df3214c16163b65f82064f035fd375d0c02aa
abdef81151d23ac629bbd9e98fdf31fd478912f3
084c663c9911a6649407b9956d9d2d59499cd03c
68d560d4d612ad0683bae7b36708ef88685316c5
02ea8d06bf236a38614eb0c88944e87df3b373f3
1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2
4adf3e34b2ece6f4caac9d42dd4f636b8fc342b3
90afe2c9f5c7a47b53fe31da0b06a6f8dda37cce
07e938fc863ee4cec163cb9290476274242ca68d
eadf906f463167f90f23bed5d3bb56026a4bfc33
c9ecc33602fcfe7f35b96b8d75435d9c0c8f5d00
efaa45e648f2955a132089c7ca4bd0c3092ff000
e2296cc21da00e27eaa1add49748c495fc7a0876
fc55c95e84602db63c585c47a2793d51aeb108aa
919fb66ee1fe24d15725ee6bc780be8267730b60
dba845ac28a8f10754d30bb4826574d3f107f84c
187f073476404d31fb0c72ef3767168238bafbc6
29357d8b9417cf74ce10fc868e4774d4c77d6889
0da2c8ac77a61f9149fcbf3da36f7656aff96a4c
c39373da4911f9246dec9b50011ed2aa9247c2c1
4185ae53974032b6760938b7818099cb7dddd28f
6b9bee8ee6bd4925078813d6d0b198b2d19f3853
2f016d5c37ad265a446e14bb4450118cf8525f0c
979837429d2eae3649dfa49b4cccde99f018a84f
15342341aa4ade477abe31ccba4333d6dfc2956b
f71bc914e6ea87e729459937bb7224a02da4b0a4
623f4556de4ba117aef31e67326fcbf9152dbff6
795af1d7351cecbb1304603e5afd7ce018aa93fa
2fbe90f22457f0a82c1d10ff5a918259c41859b1
960076d93074792ff3c6b749150e577216e4e44b
eb3a47ba3a9bf9dafc2bb51144aff8fa1f80a721
f1526aaae77c8082ef42691d03254926f5104b64
6c875a31e1d906f9821e558cd4da65fe39e2160d
75822272d9f74ec95289fe8dd74944c383c14348
0e7b565cbf161851bc77eb48d5618dff3434d497
71f85957b6ec652431ca32b7de602167180b7fe0
0fe0c61499096286867bcee0df3dfbba3d3f7cba
8b7520861b562c297a3cda422241e4d85ab3788b
77e2332572cb97acdb2d1b381edc53c8795677d3
ed397c43b43b6c81ee2273d5bb5494b8014bcaf5
07a1f7953e64b6b3c8edabbe412099968bce7ab5
4f430fb914a00768b8406f9b6fdb15ae4a93a8b8
2b64895754cd707df368fd198c4275fa607e853b
e804f8229005019d5907146aaee4ff48df081535
8f44bc38a5532e8d1ac357bf56aaef1fbd1899d3
91581bccd5c8d82d2a6e06236f346dceab8ae86e
30107ebef8976647bff8c48911202b6cc13d989e
af72267c7201ac7b0c3e4a90721bfc9bac0e4787
755bddc8a6e5b3397bd83b3bd3252296d02b02e5
7619c085c5a7c57e5ce7da32a290bfed82d006b2
6ef30017a0e7c6855a1e679f6934f65260845b5d
7549d7f202636b2fca00a790289cc336eab7a9a4
09532ff5942f81d125fade2243d372a26c238141
794532221c938e911c0dbb11875140882a86275f
95b147fe4a53a754317dd6f7b46a985e1bba7cc5
d5d85eaf4e5a67a66d8ce797be8f1b973326c1dc
0e60562abe8389976483f16432c90a2c8226db77
d7f30833549aa0378f41f8cdb132cff5826847fe
520f0c480386a790eb5a99a1d3295dd234ea4bce
c520979797bed1c58f0873f11b8ec1105341fec6
d168da7484c329c59021cadbd34c24844c6466ce
f472590a2abf807ef1574f109b44d6c9c120b9c1
d1f9044b7b63d950125cc095730e186eb04e5e3f
e1152c0bc885278944dfbfa1c877e045702abc3f
61ada8ae18a600c8ace28058fe592ce9842f6237
cfa4cb00a7b0b37cf614e824482260ebeb9ce288
0b87eff52480d8fea4628b95df61998ef0dab95c
b2e0a4503ad45451399fccd8dce197d3b96f862a
1ab3a0ade68ce42d89502f7eae5674df245de360
4b351c6ee882549651730baaaab38bd803b34770
5c61a8637793dd25f01d7e58f775d19f0ade7493
5cb2183e8b41ade5f28abc19e852de9081434ae5
c15190ecef2cdd2ff2df390e2cb5197ea585c9de
e9e4d4ee5bd8785e26bc03f932ffbcfd6b19b918
0ff0dfbf18bc964cf71b64dc6f1f1298bea12d04
eb18fd8d19256c81df749f67010abad0af1615d3
3e14aaa2aa50a8ef28da096379f33e776c544d93
4b260c20138daad0b7507cdd555025bb84bf2000
ddc9ce91157ab23b35e1127c695feb5889f3ff53
f8f456c68aea1927308c9ee9b47246e62dc945c2
d81d0bdd6a9ad1fc9b7d8a1ba7d980d70805e633
e83d8d43fe73ecb1d07b359ab7575dce9e94587c
5a2d52cadadb2c5b56a22131fe0d0fca4910b1a3
6b045785002561aa9bef6a0e9654b385e04de5e0
75089d48a0abd9633194c97a33208400a27db601
c872077c88496940e82e8f52988d98a94c9c5d29
61995575da257d7062c0d72dd1b9233d0867e7f1
ed7f23690a8c1cf8295cf151719d7b07f7b68bce
282043099be7da9af2aa7d3d4fcf3ff33a3ed788
6573a10434b3aa2784f052d6ffc3905d8490464e
350fae6628af14c2e760694d39baec5f7858057c
92fbb7592bbd3899a7b2ca98b4ac0e9f857fe114
014251eae30e30a6cc960f41c939d24ffed00066
90c28d48360b5975f18c0d56abbbed0f4407c328
90c3ba6e0d0740dd5f794c669ddc0c449d845d7d
b9c042e86f461de3118dd77c51b4224287435917
78ff5eeaacade93ea0e8dcb22a448b06dc568b45
808fd801de9700471d99876e2ff4be467b8096f2
3c01e5dffbd8ec9480e84f055869b5977d7c4396
6de9cd9a886ea695aa892c3c7c07818a7b7e9e6f
093ff71e715f8192ce276ed1e4adf38e657781f7
We cannot bisect more!
bisect run cannot continue any more
[32m[     info][0m First bad commit: 093ff71 re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
Checking out files:  16% (7771/48556)   Checking out files:  17% (8255/48556)   Checking out files:  18% (8741/48556)   Checking out files:  19% (9226/48556)   Checking out files:  20% (9712/48556)   Checking out files:  20% (9713/48556)   Checking out files:  21% (10197/48556)   Checking out files:  22% (10683/48556)   Checking out files:  23% (11168/48556)   Checking out files:  24% (11654/48556)   Checking out files:  25% (12139/48556)   Checking out files:  26% (12625/48556)   Checking out files:  27% (13111/48556)   Checking out files:  28% (13596/48556)   Checking out files:  29% (14082/48556)   Checking out files:  30% (14567/48556)   Checking out files:  31% (15053/48556)   Checking out files:  32% (15538/48556)   Checking out files:  33% (16024/48556)   Checking out files:  34% (16510/48556)   Checking out files:  35% (16995/48556)   Checking out files:  36% (17481/48556)   Checking out files:  37% (17966/48556)   Checking out files:  38% (18452/48556)   Checking out files:  39% (18937/48556)   Checking out files:  40% (19423/48556)   Checking out files:  41% (19908/48556)   Checking out files:  42% (20394/48556)   Checking out files:  42% (20689/48556)   Checking out files:  43% (20880/48556)   Checking out files:  44% (21365/48556)   Checking out files:  45% (21851/48556)   Checking out files:  46% (22336/48556)   Checking out files:  47% (22822/48556)   Checking out files:  48% (23307/48556)   Checking out files:  49% (23793/48556)   Checking out files:  50% (24278/48556)   Checking out files:  51% (24764/48556)   Checking out files:  52% (25250/48556)   Checking out files:  53% (25735/48556)   Checking out files:  54% (26221/48556)   Checking out files:  55% (26706/48556)   Checking out files:  56% (27192/48556)   Checking out files:  57% (27677/48556)   Checking out files:  58% (28163/48556)   Checking out files:  59% (28649/48556)   Checking out files:  60% (29134/48556)   Checking out files:  61% (29620/48556)   Checking out files:  62% (30105/48556)   Checking out files:  63% (30591/48556)   Checking out files:  64% (31076/48556)   Checking out files:  65% (31562/48556)   Checking out files:  66% (32047/48556)   Checking out files:  67% (32533/48556)   Checking out files:  68% (33019/48556)   Checking out files:  69% (33504/48556)   Checking out files:  70% (33990/48556)   Checking out files:  70% (34012/48556)   Checking out files:  71% (34475/48556)   Checking out files:  72% (34961/48556)   Checking out files:  73% (35446/48556)   Checking out files:  74% (35932/48556)   Checking out files:  75% (36417/48556)   Checking out files:  76% (36903/48556)   Checking out files:  77% (37389/48556)   Checking out files:  78% (37874/48556)   Checking out files:  79% (38360/48556)   Checking out files:  80% (38845/48556)   Checking out files:  81% (39331/48556)   Checking out files:  82% (39816/48556)   Checking out files:  83% (40302/48556)   Checking out files:  84% (40788/48556)   Checking out files:  85% (41273/48556)   Checking out files:  86% (41759/48556)   Checking out files:  87% (42244/48556)   Checking out files:  88% (42730/48556)   Checking out files:  89% (43215/48556)   Checking out files:  90% (43701/48556)   Checking out files:  91% (44186/48556)   Checking out files:  92% (44672/48556)   Checking out files:  93% (45158/48556)   Checking out files:  94% (45643/48556)   Checking out files:  95% (46129/48556)   Checking out files:  96% (46614/48556)   Checking out files:  97% (47100/48556)   Checking out files:  97% (47412/48556)   Checking out files:  98% (47585/48556)   Checking out files:  99% (48071/48556)   Checking out files: 100% (48556/48556)   Checking out files: 100% (48556/48556), done.
Previous HEAD position was 75089d4... MAINTAINERS (Write After Approval): Add myself.
HEAD is now at 3673b8c... Daily bump.

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [093ff71]
+---------------------------------------- Current commit hash: [093ff71] ----------------------------------------+
GCC for commit [093ff71] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-093ff71/bin/gcc with -O1:
0
Output of /tmp/gcc-093ff71/bin/gcc with -O0:
1
----------------------------------------------------
No local changes to save
HEAD is now at 093ff71... re PR bootstrap/15627 (Sun CC cannot bootstrap GCC)
[32m[     info][0m Current commit [093ff71] is bad. Return value: 1

[32m[     info][0m Testing commit: [3c01e5d]
+---------------------------------------- Current commit hash: [3c01e5d] ----------------------------------------+
Building GCC for commit [3c01e5d]...
Switched to a new branch 'temp-test-branch'
Modified collect2.c to correct open function usage.
GCC compilation failed.
Unknown failure reason... Skip this commit, return 125
Saved working directory and index state WIP on temp-test-branch: 3c01e5d cp-tree.h (cp_cv_quals): New type.
HEAD is now at 3c01e5d cp-tree.h (cp_cv_quals): New type.
Note: checking out '3c01e5d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 3c01e5d... cp-tree.h (cp_cv_quals): New type.
Deleted branch temp-test-branch (was 3c01e5d).
Fail to build gcc for commit [3c01e5d], skip this commit. Return 125.
Error: The first bad commit is not the correct one. [2]
