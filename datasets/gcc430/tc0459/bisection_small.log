[32m[     info][0m Compiler type: gcc
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/gcc-4.3.0/bin/gcc
====================Ground truth & buggy output:====================
Correct output:
1
Output of gcc-4.3.0 with -O3:
0
Output of gcc-4.3.0 with -O2:
1
====================================================================
[32m[     info][0m Good version found: gcc-4.2.0
[32m[     info][0m Start Bisection...
No local changes to save
Bisecting: a merge base must be tested
[b23987ec2f0f24c38c78f7cf63c91a699da681bd] tree.h (DECL_PTA_ARTIFICIAL): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [b23987e]
+---------------------------------------- Current commit hash: [b23987e] ----------------------------------------+
GCC for commit [b23987e] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-b23987e/bin/gcc with -O3:
1
Output of /tmp/gcc-b23987e/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at b23987e... tree.h (DECL_PTA_ARTIFICIAL): Remove.
[32m[     info][0m Current commit [b23987e] is good. Return value: 0

Bisecting: 4487 revisions left to test after this (roughly 12 steps)
[b718216c5ad4bc0054646d701d3b4fa67d74c96b] df-scan.c (df_get_exit-block_use_set): Always add the stack pointer to the exit block use set.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [b718216]
+---------------------------------------- Current commit hash: [b718216] ----------------------------------------+
GCC for commit [b718216] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-b718216/bin/gcc with -O3:
0
Output of /tmp/gcc-b718216/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at b718216... df-scan.c (df_get_exit-block_use_set): Always add the stack pointer to the exit block use set.
[32m[     info][0m Current commit [b718216] is bad. Return value: 1

Bisecting: 2243 revisions left to test after this (roughly 11 steps)
[2b5e5642e38e17dc60ca6408f4c2bba651e1a9f7] builtins.c (fold_builtin_load_exponent): New.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [2b5e564]
+---------------------------------------- Current commit hash: [2b5e564] ----------------------------------------+
GCC for commit [2b5e564] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-2b5e564/bin/gcc with -O3:
0
Output of /tmp/gcc-2b5e564/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 2b5e564... builtins.c (fold_builtin_load_exponent): New.
[32m[     info][0m Current commit [2b5e564] is bad. Return value: 1

Bisecting: 1121 revisions left to test after this (roughly 10 steps)
[af71363e455f4c60cf98f5ef42b4ddd8daedabd3] * configure: Regenerate with correct autoconf version.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [af71363]
+---------------------------------------- Current commit hash: [af71363] ----------------------------------------+
GCC for commit [af71363] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-af71363/bin/gcc with -O3:
0
Output of /tmp/gcc-af71363/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at af71363... * configure: Regenerate with correct autoconf version.
[32m[     info][0m Current commit [af71363] is bad. Return value: 1

Bisecting: 560 revisions left to test after this (roughly 9 steps)
[44a69b3186a5a716f7c0621dde26f74c829cc2d9] * config/xtensa/elf.h (HANDLE_PRAGMA_PACK_PUSH_POP): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [44a69b3]
+---------------------------------------- Current commit hash: [44a69b3] ----------------------------------------+
GCC for commit [44a69b3] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-44a69b3/bin/gcc with -O3:
1
Output of /tmp/gcc-44a69b3/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 44a69b3... * config/xtensa/elf.h (HANDLE_PRAGMA_PACK_PUSH_POP): Define.
[32m[     info][0m Current commit [44a69b3] is good. Return value: 0

Bisecting: 280 revisions left to test after this (roughly 8 steps)
[b8d85341b63d9eebe1ca2023adea6b5300873a7b] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [b8d8534]
+---------------------------------------- Current commit hash: [b8d8534] ----------------------------------------+
GCC for commit [b8d8534] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-b8d8534/bin/gcc with -O3:
1
Output of /tmp/gcc-b8d8534/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at b8d8534... Daily bump.
[32m[     info][0m Current commit [b8d8534] is good. Return value: 0

Bisecting: 140 revisions left to test after this (roughly 7 steps)
[3d9cd79a7c9c7d21e974ee10bf05fb356bafea32] spu.c (TARGET_ENCODE_SECTION_INFO): Define.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [3d9cd79]
+---------------------------------------- Current commit hash: [3d9cd79] ----------------------------------------+
GCC for commit [3d9cd79] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-3d9cd79/bin/gcc with -O3:
0
Output of /tmp/gcc-3d9cd79/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 3d9cd79... spu.c (TARGET_ENCODE_SECTION_INFO): Define.
[32m[     info][0m Current commit [3d9cd79] is bad. Return value: 1

Bisecting: 69 revisions left to test after this (roughly 6 steps)
[fd13de777227fdcdb7aafaa97ca5def90755961d] pa.h (LEGITIMATE_CONSTANT_P): Simplify.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [fd13de7]
+---------------------------------------- Current commit hash: [fd13de7] ----------------------------------------+
GCC for commit [fd13de7] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-fd13de7/bin/gcc with -O3:
1
Output of /tmp/gcc-fd13de7/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at fd13de7... pa.h (LEGITIMATE_CONSTANT_P): Simplify.
[32m[     info][0m Current commit [fd13de7] is good. Return value: 0

Bisecting: 34 revisions left to test after this (roughly 5 steps)
[c3f824ce13d83da71f55201f4608db64478e4ef1] traits.hpp: Qualify types.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [c3f824c]
+---------------------------------------- Current commit hash: [c3f824c] ----------------------------------------+
GCC for commit [c3f824c] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-c3f824c/bin/gcc with -O3:
1
Output of /tmp/gcc-c3f824c/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at c3f824c... traits.hpp: Qualify types.
[32m[     info][0m Current commit [c3f824c] is good. Return value: 0

Bisecting: 17 revisions left to test after this (roughly 4 steps)
[da32da74c73fc648fafe98916938543756f4edd5] mkfixinc.sh: Add "*-*-vxworks*" to the list of targets for which a no-op fixer is appropriate.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [da32da7]
+---------------------------------------- Current commit hash: [da32da7] ----------------------------------------+
GCC for commit [da32da7] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-da32da7/bin/gcc with -O3:
0
Output of /tmp/gcc-da32da7/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at da32da7... mkfixinc.sh: Add "*-*-vxworks*" to the list of targets for which a no-op fixer is appropriate.
[32m[     info][0m Current commit [da32da7] is bad. Return value: 1

Bisecting: 8 revisions left to test after this (roughly 3 steps)
[cfaab3a92418d34e14bb0fa447c052fce9f6057b] tree-ssa-operands.h (create_ssa_artificial_load_stmt): Rename from create_ssa_artficial_load_stmt.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [cfaab3a]
+---------------------------------------- Current commit hash: [cfaab3a] ----------------------------------------+
GCC for commit [cfaab3a] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-cfaab3a/bin/gcc with -O3:
1
Output of /tmp/gcc-cfaab3a/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at cfaab3a... tree-ssa-operands.h (create_ssa_artificial_load_stmt): Rename from create_ssa_artficial_load_stmt.
[32m[     info][0m Current commit [cfaab3a] is good. Return value: 0

Bisecting: 4 revisions left to test after this (roughly 2 steps)
[38635499e9c759fc039e669acfabc80f4f65dffb] [multiple changes]
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [3863549]
+---------------------------------------- Current commit hash: [3863549] ----------------------------------------+
GCC for commit [3863549] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-3863549/bin/gcc with -O3:
0
Output of /tmp/gcc-3863549/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 3863549... [multiple changes]
[32m[     info][0m Current commit [3863549] is bad. Return value: 1

Bisecting: 1 revision left to test after this (roughly 1 step)
[d99ae870ff9b0b5e1817a09a74302f94fcb87d06] re PR libstdc++/28125 (Cannot build cross compiler for Solaris: configure: error: Link tests are not allowed after GCC_NO_EXECUTABLES)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [d99ae87]
+---------------------------------------- Current commit hash: [d99ae87] ----------------------------------------+
GCC for commit [d99ae87] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-d99ae87/bin/gcc with -O3:
1
Output of /tmp/gcc-d99ae87/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at d99ae87... re PR libstdc++/28125 (Cannot build cross compiler for Solaris: configure: error: Link tests are not allowed after GCC_NO_EXECUTABLES)
[32m[     info][0m Current commit [d99ae87] is good. Return value: 0

Bisecting: 0 revisions left to test after this (roughly 0 steps)
[419cb3431be4a266e61762978fbe279af6ddc028] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc0459 small
[32m[     info][0m Testing commit: [419cb34]
+---------------------------------------- Current commit hash: [419cb34] ----------------------------------------+
GCC for commit [419cb34] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-419cb34/bin/gcc with -O3:
1
Output of /tmp/gcc-419cb34/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 419cb34... Daily bump.
[32m[     info][0m Current commit [419cb34] is good. Return value: 0

38635499e9c759fc039e669acfabc80f4f65dffb is the first bad commit
commit 38635499e9c759fc039e669acfabc80f4f65dffb
Author: Diego Novillo <dnovillo@gcc.gnu.org>
Date:   Mon Dec 11 20:48:51 2006 -0500

    [multiple changes]
    
    2006-12-11  Diego Novillo  <dnovillo@redhat.com>
    
    	* doc/tree-ssa.texi: Update documentation for virtual operands
    	and the use of push_stmt_changes/pop_stmt_changes.
    	* doc/invoke.texi: Remove documentation for params
    	global-var-threshold.
    	Update documentation on max-aliased-vops.
    
    	* tree-into-ssa.c: Cleanup comments, variables and
    	spacing in various functions.
    	(regs_to_rename): Declare.
    	(mem_syms_to_rename): Declare.
    	(dump_update_ssa): Declare.
    	(debug_update_ssa): Declare.
    	(dump_names_replaced_by): Declare.
    	(debug_names_replaced_by): Declare.
    	(dump_def_blocks): Declare.
    	(debug_def_blocks): Declare.
    	(dump_defs_stack): Declare.
    	(debug_defs_stack): Declare.
    	(dump_currdefs): Declare.
    	(debug_currdefs): Declare.
    	(mark_def_sites): Do not handle virtual operands.
    	(compute_idf): Rename from find_idf.  Update users.
    	(register_new_def): Make local.  Convert second argument
    	to 'tree'.
    	Use BLOCK_DEFS_STACK directly.
    	If pushing a non-register, also push the underlying
    	symbol.
    	(rewrite_stmt): Do not handle virtual operands.
    	(dump_tree_ssa): Call dump_def_blocks, dump_defs_stack,
    	dump_currdefs and dump_tree_ssa_stats.
    	(dump_tree_ssa_stats): Also dump REPL_TBL.
    	(replace_use): Remove.  Update all users to call SET_USE
    	instead.
    	(rewrite_blocks): Move code to free memory to
    	fini_ssa_renamer.
    	(mark_def_site_blocks): Move initialization code to
    	init_ssa_renamer.
    	(init_ssa_renamer): New.
    	(fini_ssa_renamer): New.
    	(rewrite_into_ssa): Call them.
    	(prepare_block_for_update): Process SSA_OP_ALL_USES first
    	and SSA_OP_ALL_DEFS later.  Do not process virtual
    	operands separately.
    	(dump_update_ssa): Call dump_decl_set.
    	(init_update_ssa): Initialize regs_to_rename and
    	mem_syms_to_rename.
    	Call init_ssa_renamer.
    	(delete_update_ssa): Call fini_ssa_renamer.
    	Free blocks_with_phis_to_rewrite.
    	(mark_sym_for_renaming): If the variable has
    	sub-variables, also mark them.
    	If the variable belongs to a partition, also mark it.
    	(mark_set_for_renaming): Call mark_sym_for_renaming on
    	every symbol in the set.
    	(switch_virtuals_to_full_rewrite): Call
    	mark_set_for_renaming.
    	(update_ssa): Separate syms_to_rename into regs_to_rename
    	and mem_syms_to_rename.
    
    	* tree-dump.c (dump_options): Add TDF_MEMSYMS.
    	* tree-pretty-print.c (debug_generic_expr): Add TDF_MEMSYMS.
    	(debug_generic_stmt): Likewise.
    	(debug_tree_chain): Likewise.
    	(dump_symbols): New.
    	(dump_generic_node): Check for TDF_MEMSYMS.
    	Handle MEMORY_PARTITION_TAG.
    	If the statement references memory and TDF_MEMSYMS is
    	given, call dump_symbols.
    	Indicate default names with (D).
    	(dump_vops): Update for new virtual operator format.
    
    	* tree.c (init_ttree): Add MEMORY_PARTITION_TAG to
    	tree_contains_struct.
    	(tree_code_size): Handle MEMORY_PARTITION_TAG.
    	(tree_node_structure): Likewise.
    	(needs_to_live_in_memory): Handle SSA names.
    	* tree.h (MTAG_P): Likewise.
    	(struct tree_memory_partition_tag): Declare.
    	(MPT_SYMBOLS): Define.
    	(union tree_node): Add field 'mpt'.
    	* treestruct.def (TS_MEMORY_PARTITION_TAG): Define.
    	* tree.def (MEMORY_PARTITION_TAG): Define.
    
    	* tree-pass.h (TDF_MEMSYMS): Define.
    
    	* params.h (GLOBAL_VAR_THRESHOLD): Remove.
    
    	* tree-ssa-alias.c: Include pointer-set.h
    	(struct alias_map_d): Remove fields total_alias_vops,
    	grouped_p and may_aliases.  Update all users.
    	(struct mp_info_def): Declare.
    	(mp_info_t): New type.
    	(get_smt_for): Rename from get_tmt_for.  Update all
    	users.
    	(add_may_alias): Add argument ALREADY_ADDED.  If given,
    	use it to avoid adding duplicate entries to alias sets.
    	(replace_may_alias): Remove.  Update all users.
    	(total_alias_vops_cmp): Remove.  Update all users.
    	(group_aliases_into): Remove.  Update all users.
    	(tree_pointer_compare): Remove.  Update all users.
    	(compact_name_tags): Remove.  Update all users.
    	(group_aliases): Remove.  Update all users.
    	(mark_non_addressable): Move from tree-flow-inline.h.
    	Remove the symbol from the partition holding it, if
    	needed.
    	(dump_mp_info): New.
    	(debug_mp_info): New.
    	(sort_mp_info): New.
    	(create_partition_for): New.
    	(rewrite_alias_set_for): New.
    	(compute_memory_partitions): New.
    	(compute_may_aliases): Call it.
    	(init_alias_info): If computing aliases for the first
    	time, mark every memory symbol for renaming.
    	(have_common_aliases_p): New.
    	(compute_flow_insensitive_aliasing): Call it.
    	(setup_pointers_and_addressables): Do not cache
    	num_referenced_vars.
    	For register promoted symbols, mark their former
    	partition for renaming.
    	(maybe_create_global_var): Only create .GLOBAL_VAR if
    	there are no call-clobbered variables and a mix of pure
    	and non-pure functions were found.
    	(may_alias_p): Tidy comments.
    	(create_tag_raw): Remove unused variable new_type.
    	(dump_alias_info): call dump_memory_partitions.
    	(dump_points_to_info_for): Call dump_decl_set.
    	(may_be_aliased): Tidy comments and formatting.
    
    	* timevar.def (TV_MEMORY_PARTITIONING): Define.
    	* tree-vectorizer.c (vect_memsyms_to_rename): Rename from
    	vect_vnames_to_rename.  Set DECL_UIDs instead of SSA name
    	versions in it.
    	(slpeel_update_phi_nodes_for_guard1): Ignore memory PHIs.
    	* tree-vect-transform.c (vect_transform_loop): Call
    	mark_set_for_renaming with vect_memsyms_to_rename.
    	* tree-flow-inline.h (zero_imm_uses_p): New.
    	(memory_partition): New.
    	(set_memory_partition): New.
    	(factoring_name_p): New.
    	(symbol_mem_tag): New.  Update every function that used
    	to access the annotation directly.
    	(set_symbol_mem_tag): Likewise.
    
    	* tree-ssa-copy.c (may_propagate_copy): Allow copies
    	between a partition and a symbol as long as the symbol
    	belongs to the partition.
    	(merge_alias_info): Ignore merge requests when memory
    	partitions are involved.
    
    	* tree-ssa.c (verify_ssa_name): Check that default
    	definitions have empty defining statements.
    	(verify_use): Remove argument IS_VIRTUAL.
    	Don't call verify_ssa_name.
    	(verify_phi_args): Call verify_ssa_name.
    	(verify_flow_insensitive_alias_info): Handle MPTs.
    	(verify_flow_sensitive_alias_info): Likewise.
    	(verify_name_tags): Likewise.
    	(verify_call_clobbering): Likewise.
    	(verify_ssa): Check for VOPs only after aliasing
    	information is available.
    	Check virtuals and real operands separately.
    	Call verify_ssa_name on every operand.
    	(stmt_references_memory_p): Move to tree-ssa-operands.c.
    	(walk_use_def_chains_1): Guard against NULL PHI
    	arguments.
    
    	* tree-ssa-operands.c (stmt_references_memory_p): Move from
    	tree-ssa.c.
    	(get_mpt_for): New.
    	(dump_memory_partitions): New.
    	(debug_memory_partitions): New.
    
    	* tree-flow.h (struct var_ann_d): Add field mpt.
    	(struct stmt_ann_d): Add bitfield references_memory.
    	* Makefile.in (tree-ssa-structalias.o): Include
    	pointer-set.h
    	(tree-ssa-alias.o): Likewise.
    	* tree-ssa-structalias.c: (update_alias_info): Use
    	STORED_SYMS to determine which variables are being
    	written to by the store operation.
    	* tree-ssa-structalias.h (struct alias_info)
    	<total_alias_vops>: Remove.  Update all users.
    	<written_vars>: Change to a pointer set.  Update all
    	users.
    	<dereferenced_ptrs_store>: Likewise.
    	<dereferenced_ptrs_load>: Likewise.
    	(NUM_REFERENCES): Remove.  Update all users.
    	(NUM_REFERENCES_CLEAR): Remove.  Update all users.
    	(NUM_REFERENCES_INC): Remove.  Update all users.
    	(NUM_REFERENCES_SET): Remove.  Update all users.
    
    	* params.def (PARAM_GLOBAL_VAR_THRESHOLD): Remove.
    	Update all users.
    	(PARAM_MAX_ALIASED_VOPS): Set to 10.
    	* tree-ssanames.c (make_ssa_name): Initialize
    	SSA_NAME_IS_DEFAULT_DEF to 0.
    
    2006-12-11  Aldy Hernandez  <aldyh@redhat.com>
    
    	* tree-ssa-dse.c (aggregate_vardecl_d): New.
    	(dse_global_data): Add aggregate_vardecl field.
    	(dse_possible_dead_store_p): New.
    	Add prev_defvar variable.
    	Allow immediate uses and previous immediate uses to differ
    	if they are setting different parts of the whole.
    	(get_aggregate_vardecl): New.
    	(dse_record_partial_aggregate_store): New.
    	(dse_whole_aggregate_clobbered_p): New.
    	(dse_partial_kill_p): New.
    	(dse_optimize_stmt): Abstract code checking a possible dead store
    	into new function dse_possible_dead_store_p().
    	Call dse_maybe_record_aggregate_store().
    	When checking whether a STMT and its USE_STMT refer to the
    	same memory address, check also for partial kills that clobber
    	the whole.
    	Move some variable definitions to the block where they are used.
    	(aggregate_vardecl_hash): New.
    	(aggregate_vardecl_eq): New.
    	(aggregate_vardecl_free): New.
    	(aggregate_whole_store_p): New.
    	(tree_ssa_dse): Initialize and free aggregate_vardecl.
    	Mark which aggregate stores we care about.
    
    2006-12-11  Andrew Macleod  <amacleod@redhat.com>
    
    	* tree-ssa-operands.h (struct vuse_element_d): Declare.
    	(vuse_element_t): Declare.
    	(struct vuse_vec_d): Declare.
    	(vuse_vec_p): Declare.
    	(VUSE_VECT_NUM_ELEM): Define.
    	(VUSE_VECT_ELEMENT_NC): Define.
    	(VUSE_ELEMENT_PTR_NC): Define.
    	(VUSE_ELEMENT_VAR_NC): Define.
    	(VUSE_VECT_ELEMENT): Define.
    	(VUSE_ELEMENT_PTR): Define.
    	(VUSE_ELEMENT_VAR): Define.
    	(struct maydef_optype_d) <use_var>: Remove.
    	<use_ptr>: Remove.
    	<usev>: Add.
    	(struct vuse_optype_d) <kill_var>: Remove.
    	<use_ptr>: Remove.
    	<usev>: Add.
    	(struct mustdef_optype_d) <kill_var>: Remove.
    	<use_ptr>: Remove.
    	<usev>: Add.
    	(VUSE_OP_PTR): Add argument.  Use VUSE_ELEMENT_PTR.
    	(VUSE_OP): Add argument.  Use VUSE_ELEMENT_PTR.
    	(VUSE_NUM): Define.
    	(VUSE_VECT): Define.
    	(MAYDEF_OP_PTR): Add argument.  Use VUSE_OP_PTR.
    	(MAYDEF_OP): Add argument.  Use VUSE_OP.
    	(MAYDEF_NUM): Define.
    	(MAYDEF_VECT): Define.
    	(MUSTDEF_KILL_PTR): Use VUSE_OP_PTR.
    	(MUSTDEF_KILL): Use VUSE_OP.
    	(MUSTDEF_NUM): Define.
    	(MUSTDEF_VECT): Define.
    	(realloc_maydef): Declare.
    	(realloc_vuse): Declare.
    	(struct ssa_operand_iterator_d) <vuse_index>: Add.
    	<mayuse_index>: Add.
    	(LOADED_SYMS): Define.
    	(STORED_SYMS): Define.
    	(FOR_EACH_SSA_MUSTDEF_OPERAND): Call op_iter_next_mustdef.
    	* tree-into-ssa.c: Adapt for multi-operand V_MAY_DEF and VUSE
    	operators.
    	* tree-pretty-print.c: Likewise.
    	* tree-ssa-dse.c: Likewise.
    	* tree-flow-inline.h: Likewise.
    	(op_iter_next_mustdef): New.
    	* tree-ssa-operands.c: Likewise.
    	(ALLOC_OPTYPE): Remove.
    	Update all users.
    	(alloc_def): New.
    	(alloc_use): New.
    	(alloc_maydef): New.
    	(alloc_vuse): New.
    	(alloc_mustdef): New.
    	(realloc_maydef): New.
    	(realloc_vuse): New.
    
    2006-12-11  Aldy Hernandez  <aldyh@redhat.com>
    
    	* tree-ssa-operands.c: Remove build_v_must_defs.
    	(init_ssa_operands): Delete build_v_must_defs.
    	(finalize_ssa_v_must_def_ops): Remove.
    	(finalize_ssa_v_must_defs): Remove.
    	(finalize_ssa_stmt_operands): Do not call
    	finalize_ssa_v_must_defs.
    	(start_ssa_stmt_operands): Do not check build_v_must_defs.
    	(append_v_must_def): Delete.
    	(copy_virtual_operands): Do not copy V_MUST_DEFs.
    	(get_modify_expr_operands): Remove reference to V_MUST_DEF from
    	comment.  Remove opf_kill_def.
    	(build_ssa_operands): Remove references to v_must_defs.
    	(copy_virtual_operands): Same.
    	(copy_virtual_operands): Same.
    	(fini_ssa_operands): Same.
    	(free_ssa_operands): Same.
    	(add_mustdef_op): Remove.
    	Remove mustdef_optype_p.
    	(alloc_mustdef): Remove.
    	Remove references to V_MUST_DEFs in comment at top of file.
    	(get_expr_operands): Remove opf_kill_def.
    	(opf_kill_def): Remove.
    	(add_virtual_operand): Remove opf_kill_def.
    	(get_indirect_ref_operands): Same.
    	(get_tmr_operands): Same.
    
    	* tree-vectorizer.c (rename_variables_in_bb): Remove
    	SSA_OP_ALL_KILLS.
    
    	* tree-ssa-loop-manip.c (find_uses_to_rename_stmt): Remove
    	SSA_OP_ALL_KILLS.
    	(check_loop_closed_ssa_stmt): Same.
    
    	* tree-ssa.c (verify_def): Remove V_MUST_DEF from comment.
    	(verify_use): Same.
    	(verify_ssa): Remove V_MUST_DEFs traces.
    	(verify_ssa): Remove SSA_OP_ALL_KILLS.
    
    	* tree-into-ssa.c (mark_def_sites): Change SSA_OP_VMUSTDEF to
    	SSA_OP_VMAYDEF.
    	(rewrite_update_stmt): Remove SSA_OP_VIRTUAL_KILLS.
    	(rewrite_stmt): Remove SSA_OP_ALL_KILLS.
    
    	* tree-ssa-operands.h (struct stmt_operands_d): Remove V_MUST_DEF
    	references.
    	(MUSTDEF_OPS): Remove.
    	(SSA_OP_VMUSTDEF): Remove.
    	(FOR_EACH_SSA_MUSTDEF_OPERAND): Remove.
    	(struct mustdef_optype_d): Remove.
    	Remove mustdef_optype_p.
    	(struct stmt_operands_d): Remove mustdef_ops.
    	(ssa_operand_iterator_d): Remove mustdefs and mustkills.
    	(SSA_OP_VIRTUAL_DEFS): Remove SSA_OP_VMUSTDEF.
    	(MUSTDEF_RESULT_PTR): Remove.
    	(MUSTDEF_RESULT): Remove.
    	(MUSTDEF_KILL_PTR): Remove.
    	(MUSTDEF_KILL): Remove.
    	(MUSTDEF_NUM): Remove.
    	(MUSTDEF_VECT): Remove.
    	(SSA_OP_VIRTUAL_KILLS): Remove.
    	(SSA_OP_ALL_VIRTUALS): Remove SSA_OP_VIRTUAL_KILLS.
    	(SSA_OP_VMUSTKILL): Remove.
    	(SSA_OP_ALL_KILLS): Remove.
    	(SSA_OP_ALL_OPERANDS): Remove SSA_OP_ALL_KILLS.
    
    	* tree-flow-inline.h (op_iter_init_def): Remove
    	SSA_OP_VIRTUAL_KILLS.
    	(delink_stmt_imm_use): Remove SSA_OP_ALL_KILLS.
    
    	* tree-ssa-pre.c (compute_rvuse_and_antic_safe): Remove
    	SSA_OP_VIRTUAL_KILLS.
    
    	* tree-ssa-loop-im.c (determine_max_movement): Remove
    	SSA_OP_VIRTUAL_KILLS.
    	(gather_mem_refs_stmt): Same.
    	(gather_mem_refs_stmt): Same.
    
    	* tree-ssa-dce.c (mark_really_necessary_kill_operand_phis): Delete.
    	(perform_tree_ssa_dce): Remove call to
    	mark_really_necessary_kill_operand_phis.
    
    	* tree-flow-inline.h (op_iter_init): Remove setting of mustdefs
    	and mustkills.
    	(op_iter_next_use): Do not check mustkills.
    	(op_iter_next_def): Do not check mustdefs.
    	(op_iter_next_tree): Do not check mustkills or mustdefs.
    	(clear_and_done_ssa_iter): Do not set mustdefs or mustkills.
    	(op_iter_next_maymustdef): Do not check mustkills.
    	(op_iter_init_must_and_may_def): Remove SSA_OP_VMUSTKILL.
    	(op_iter_init_mustdef): Remove.
    
    	* tree-ssa-live.c (create_ssa_var_map): Change SSA_OP_VMUSTDEF to
    	SSA_OP_VMAYDEF.
    
    	* tree-ssa-dse.c (dse_optimize_stmt): Remove SSA_OP_VMUSTDEF.
    
    	* tree-ssa-ccp.c: Remove V_MUST_DEF traces from comments.
    	(visit_assignment): Same.
    
    	* tree-ssa-copy.c (copy_prop_visit_assignment): Same.
    
    	* tree-sra.c (mark_all_v_defs_1): Remove V_MUST_DEF from comment.
    
    	* tree-outof-ssa.c (check_replaceable): Remove SSA_OP_VMUSTDEF.
    
    	* tree-pretty-print.c (dump_vops): Remove printing of V_MUST_DEF.
    	Remove kill_p variable.
    
    	* tree-dfa.c (struct dfa_stats_d): Remove num_v_must_defs.
    	(dump_dfa_stats): Remove code related to V_MUST_DEFs.
    	(collect_dfa_stats_r): Do not set num_v_must_defs.
    	(mark_new_vars_to_rename): Remove v_must_defs_{before,after}
    	code.
    
    	* tree-into-ssa.c (mark_def_sites): Change SSA_OP_VMUSTKILL to
    	SSA_OP_VMAYUSE.
    
    	* tree-ssa-pre.c (compute_rvuse_and_antic_safe): Remove
    	SSA_OP_VMUSTDEF and SSA_OP_VMUSTKILL.
    
    	* tree-ssa-propagate.c (stmt_makes_single_store): Remove
    	SSA_OP_VMUSTDEF.
    
    From-SVN: r119760

:040000 040000 a5fdb83bd8e2736324a931ab6ae74914ca120dd8 82c6b320fa93454c411da291eb3a0a9ffd54b309 M	gcc
bisect run success
[32m[     info][0m First bad commit: 3863549 [multiple changes]
Checking out files:   9% (2398/25620)   Checking out files:  10% (2562/25620)   Checking out files:  11% (2819/25620)   Checking out files:  12% (3075/25620)   Checking out files:  13% (3331/25620)   Checking out files:  14% (3587/25620)   Checking out files:  15% (3843/25620)   Checking out files:  16% (4100/25620)   Checking out files:  17% (4356/25620)   Checking out files:  18% (4612/25620)   Checking out files:  19% (4868/25620)   Checking out files:  20% (5124/25620)   Checking out files:  20% (5288/25620)   Checking out files:  21% (5381/25620)   Checking out files:  22% (5637/25620)   Checking out files:  23% (5893/25620)   Checking out files:  24% (6149/25620)   Checking out files:  25% (6405/25620)   Checking out files:  26% (6662/25620)   Checking out files:  27% (6918/25620)   Checking out files:  28% (7174/25620)   Checking out files:  29% (7430/25620)   Checking out files:  30% (7686/25620)   Checking out files:  31% (7943/25620)   Checking out files:  32% (8199/25620)   Checking out files:  33% (8455/25620)   Checking out files:  33% (8557/25620)   Checking out files:  34% (8711/25620)   Checking out files:  35% (8967/25620)   Checking out files:  36% (9224/25620)   Checking out files:  37% (9480/25620)   Checking out files:  38% (9736/25620)   Checking out files:  39% (9992/25620)   Checking out files:  40% (10248/25620)   Checking out files:  41% (10505/25620)   Checking out files:  42% (10761/25620)   Checking out files:  43% (11017/25620)   Checking out files:  44% (11273/25620)   Checking out files:  45% (11529/25620)   Checking out files:  46% (11786/25620)   Checking out files:  47% (12042/25620)   Checking out files:  48% (12298/25620)   Checking out files:  49% (12554/25620)   Checking out files:  50% (12810/25620)   Checking out files:  51% (13067/25620)   Checking out files:  52% (13323/25620)   Checking out files:  53% (13579/25620)   Checking out files:  54% (13835/25620)   Checking out files:  55% (14091/25620)   Checking out files:  56% (14348/25620)   Checking out files:  57% (14604/25620)   Checking out files:  57% (14647/25620)   Checking out files:  58% (14860/25620)   Checking out files:  59% (15116/25620)   Checking out files:  60% (15372/25620)   Checking out files:  61% (15629/25620)   Checking out files:  62% (15885/25620)   Checking out files:  63% (16141/25620)   Checking out files:  64% (16397/25620)   Checking out files:  65% (16653/25620)   Checking out files:  66% (16910/25620)   Checking out files:  67% (17166/25620)   Checking out files:  68% (17422/25620)   Checking out files:  69% (17678/25620)   Checking out files:  70% (17934/25620)   Checking out files:  71% (18191/25620)   Checking out files:  72% (18447/25620)   Checking out files:  73% (18703/25620)   Checking out files:  74% (18959/25620)   Checking out files:  75% (19215/25620)   Checking out files:  76% (19472/25620)   Checking out files:  77% (19728/25620)   Checking out files:  78% (19984/25620)   Checking out files:  79% (20240/25620)   Checking out files:  79% (20405/25620)   Checking out files:  80% (20496/25620)   Checking out files:  81% (20753/25620)   Checking out files:  82% (21009/25620)   Checking out files:  83% (21265/25620)   Checking out files:  84% (21521/25620)   Checking out files:  85% (21777/25620)   Checking out files:  86% (22034/25620)   Checking out files:  87% (22290/25620)   Checking out files:  88% (22546/25620)   Checking out files:  89% (22802/25620)   Checking out files:  90% (23058/25620)   Checking out files:  91% (23315/25620)   Checking out files:  92% (23571/25620)   Checking out files:  93% (23827/25620)   Checking out files:  94% (24083/25620)   Checking out files:  95% (24339/25620)   Checking out files:  96% (24596/25620)   Checking out files:  97% (24852/25620)   Checking out files:  98% (25108/25620)   Checking out files:  98% (25348/25620)   Checking out files:  99% (25364/25620)   Checking out files: 100% (25620/25620)   Checking out files: 100% (25620/25620), done.
Previous HEAD position was 419cb34... Daily bump.
HEAD is now at 3673b8c... Daily bump.

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [3863549]
+---------------------------------------- Current commit hash: [3863549] ----------------------------------------+
GCC for commit [3863549] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-3863549/bin/gcc with -O3:
0
Output of /tmp/gcc-3863549/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 3863549... [multiple changes]
[32m[     info][0m Current commit [3863549] is bad. Return value: 1

[32m[     info][0m Testing commit: [419cb34]
+---------------------------------------- Current commit hash: [419cb34] ----------------------------------------+
GCC for commit [419cb34] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
1
Output of /tmp/gcc-419cb34/bin/gcc with -O3:
1
Output of /tmp/gcc-419cb34/bin/gcc with -O2:
1
----------------------------------------------------
No local changes to save
HEAD is now at 419cb34... Daily bump.
[32m[     info][0m Current commit [419cb34] is good. Return value: 0

[32m[     info][0m Bisection result is correct.
=========================================================================================================================

[32m[     info][0m Getting extra information...
=========================================================================================================================
Output of gcc [3863549] with -O0:
1
Output of gcc [3863549] with -O1:
1
Output of gcc [3863549] with -O2:
1
Output of gcc [3863549] with -O3:
0
Output of gcc [3863549] with -Os:
1
[32m[     info][0m Got extra information.
=========================================================================================================================
[32m[     info][0m Bisection done.
