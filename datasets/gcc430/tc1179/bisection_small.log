[32m[     info][0m Compiler type: gcc
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/gcc-4.3.0/bin/gcc
====================Ground truth & buggy output:====================
Correct output:
-1
Output of gcc-4.3.0 with -O3:
1
Output of gcc-4.3.0 with -O0:
-1
====================================================================
[32m[     info][0m Good version found: gcc-4.0.0
[32m[     info][0m Start Bisection...
No local changes to save
Bisecting: a merge base must be tested
[bd182be84e9c8ae8485ac7c392fa0b6678969e3c] re PR rtl-optimization/20117 (duplicated labels in PIC)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [bd182be]
+---------------------------------------- Current commit hash: [bd182be] ----------------------------------------+
GCC for commit [bd182be] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-bd182be/bin/gcc with -O3:
-1
Output of /tmp/gcc-bd182be/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at bd182be... re PR rtl-optimization/20117 (duplicated labels in PIC)
[32m[     info][0m Current commit [bd182be] is good. Return value: 0

Bisecting: 9952 revisions left to test after this (roughly 13 steps)
[9659ce8b6160434d90f8b7985921f0b05e74d2d7] re PR tree-optimization/24888 (duplication of local variables after versioning/inlining)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [9659ce8]
+---------------------------------------- Current commit hash: [9659ce8] ----------------------------------------+
GCC for commit [9659ce8] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-9659ce8/bin/gcc with -O3:
0
Output of /tmp/gcc-9659ce8/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 9659ce8... re PR tree-optimization/24888 (duplication of local variables after versioning/inlining)
[32m[     info][0m Current commit [9659ce8] is bad. Return value: 1

Bisecting: 4976 revisions left to test after this (roughly 12 steps)
[34d9dc2d292b832a428b97368fd7b1c3c019f625] cvsignore: Likewise.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [34d9dc2]
+---------------------------------------- Current commit hash: [34d9dc2] ----------------------------------------+
GCC for commit [34d9dc2] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-34d9dc2/bin/gcc with -O3:
1
Output of /tmp/gcc-34d9dc2/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 34d9dc2... cvsignore: Likewise.
[32m[     info][0m Current commit [34d9dc2] is bad. Return value: 1

Bisecting: 2487 revisions left to test after this (roughly 11 steps)
[bd16f8f1525135a3d730a4cc8136aeb3328bdfb0] tweak comment
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [bd16f8f]
+---------------------------------------- Current commit hash: [bd16f8f] ----------------------------------------+
GCC for commit [bd16f8f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-bd16f8f/bin/gcc with -O3:
1
Output of /tmp/gcc-bd16f8f/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at bd16f8f... tweak comment
[32m[     info][0m Current commit [bd16f8f] is bad. Return value: 1

Bisecting: 1243 revisions left to test after this (roughly 10 steps)
[eac02e59606def2611a7bc53ea29dbb28f860f1c] * cp-tree.h (DECL_ARRAY_DELETE_OPERATOR_P): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [eac02e59]
+---------------------------------------- Current commit hash: [eac02e59] ----------------------------------------+
GCC for commit [eac02e59] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-eac02e59/bin/gcc with -O3:
1
Output of /tmp/gcc-eac02e59/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at eac02e59... * cp-tree.h (DECL_ARRAY_DELETE_OPERATOR_P): Remove.
[32m[     info][0m Current commit [eac02e59] is bad. Return value: 1

Bisecting: 621 revisions left to test after this (roughly 9 steps)
[9439ae414f662f6923a4067e0906b11baab5fa7c] re PR fortran/18525 (ICE on valid code in gfc_get_symbol_decl())
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [9439ae4]
+---------------------------------------- Current commit hash: [9439ae4] ----------------------------------------+
GCC for commit [9439ae4] already exists. Using existing binary.
Compilation by gcc [9439ae4] with -O3 failed - [cannot find crtbegin.o]. Try to fix and recompile...
Compilation by gcc [9439ae4] with -O0 failed - [cannot find crtbegin.o]. Try to fix and recompile...
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-9439ae4/bin/gcc with -O3:
-1
Output of /tmp/gcc-9439ae4/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 9439ae4... re PR fortran/18525 (ICE on valid code in gfc_get_symbol_decl())
[32m[     info][0m Current commit [9439ae4] is good. Return value: 0

Bisecting: 310 revisions left to test after this (roughly 8 steps)
[87c8b4bed31dbbf4708549e10814197cac4d8249] Fix problems with hot/cold partitioning optimization.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [87c8b4b]
+---------------------------------------- Current commit hash: [87c8b4b] ----------------------------------------+
GCC for commit [87c8b4b] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-87c8b4b/bin/gcc with -O3:
-1
Output of /tmp/gcc-87c8b4b/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 87c8b4b... Fix problems with hot/cold partitioning optimization.
[32m[     info][0m Current commit [87c8b4b] is good. Return value: 0

Bisecting: 155 revisions left to test after this (roughly 7 steps)
[470386b7afe59efcd1a7203a4a6a5a3d195e4521] acconfig.h (ENABLE_NLS, [...]): Remove.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [470386b]
+---------------------------------------- Current commit hash: [470386b] ----------------------------------------+
GCC for commit [470386b] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-470386b/bin/gcc with -O3:
-1
Output of /tmp/gcc-470386b/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 470386b... acconfig.h (ENABLE_NLS, [...]): Remove.
[32m[     info][0m Current commit [470386b] is good. Return value: 0

Bisecting: 77 revisions left to test after this (roughly 6 steps)
[3425638af52c359b893547b9dcde5cccd1bb67ac] c-common.c (handle_malloc_atttribute): Only set DECL_IS_MALLOC if the function returns a pointer type.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [3425638]
+---------------------------------------- Current commit hash: [3425638] ----------------------------------------+
GCC for commit [3425638] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-3425638/bin/gcc with -O3:
-1
Output of /tmp/gcc-3425638/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 3425638... c-common.c (handle_malloc_atttribute): Only set DECL_IS_MALLOC if the function returns a pointer type.
[32m[     info][0m Current commit [3425638] is good. Return value: 0

Bisecting: 38 revisions left to test after this (roughly 5 steps)
[b4a58f80ff157c8dd62151294fa935820540fc05] arm.c (arm_const_double_by_parts): New function.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [b4a58f8]
+---------------------------------------- Current commit hash: [b4a58f8] ----------------------------------------+
GCC for commit [b4a58f8] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-b4a58f8/bin/gcc with -O3:
-1
Output of /tmp/gcc-b4a58f8/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at b4a58f8... arm.c (arm_const_double_by_parts): New function.
[32m[     info][0m Current commit [b4a58f8] is good. Return value: 0

Bisecting: 19 revisions left to test after this (roughly 4 steps)
[0cb7f060b25987814c87f163e1327ff9d811225c] acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [0cb7f06]
+---------------------------------------- Current commit hash: [0cb7f06] ----------------------------------------+
GCC for commit [0cb7f06] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-0cb7f06/bin/gcc with -O3:
-1
Output of /tmp/gcc-0cb7f06/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 0cb7f06... acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER.
[32m[     info][0m Current commit [0cb7f06] is good. Return value: 0

Bisecting: 9 revisions left to test after this (roughly 3 steps)
[17153653c06089378ee66f0da60fc0b0199c18f0] i386.md (*fp_jcc_7_387): Use 'const0_operand' instead of 'const_double_operand' in operand 2 constraints.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [1715365]
+---------------------------------------- Current commit hash: [1715365] ----------------------------------------+
GCC for commit [1715365] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-1715365/bin/gcc with -O3:
1
Output of /tmp/gcc-1715365/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 1715365... i386.md (*fp_jcc_7_387): Use 'const0_operand' instead of 'const_double_operand' in operand 2 constraints.
[32m[     info][0m Current commit [1715365] is bad. Return value: 1

Bisecting: 4 revisions left to test after this (roughly 2 steps)
[eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3] re PR libstdc++/20909 (incorrect floating point format)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [eaf727f]
+---------------------------------------- Current commit hash: [eaf727f] ----------------------------------------+
GCC for commit [eaf727f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-eaf727f/bin/gcc with -O3:
-1
Output of /tmp/gcc-eaf727f/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at eaf727f... re PR libstdc++/20909 (incorrect floating point format)
[32m[     info][0m Current commit [eaf727f] is good. Return value: 0

Bisecting: 2 revisions left to test after this (roughly 1 step)
[0bca51f080dfff5e943b1f1775d874a73bbc441a] backport: copy-prop, incremental SSA updating of FUD chains and newly exposed symbols.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [0bca51f]
+---------------------------------------- Current commit hash: [0bca51f] ----------------------------------------+
GCC for commit [0bca51f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-0bca51f/bin/gcc with -O3:
1
Output of /tmp/gcc-0bca51f/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 0bca51f... backport: copy-prop, incremental SSA updating of FUD chains and newly exposed symbols.
[32m[     info][0m Current commit [0bca51f] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 0 steps)
[45f9480e292e10312914733dd31d1030f4e089af] Daily bump.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc430/tc1179 small
[32m[     info][0m Testing commit: [45f9480]
+---------------------------------------- Current commit hash: [45f9480] ----------------------------------------+
GCC for commit [45f9480] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-45f9480/bin/gcc with -O3:
-1
Output of /tmp/gcc-45f9480/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 45f9480... Daily bump.
[32m[     info][0m Current commit [45f9480] is good. Return value: 0

0bca51f080dfff5e943b1f1775d874a73bbc441a is the first bad commit
commit 0bca51f080dfff5e943b1f1775d874a73bbc441a
Author: Diego Novillo <dnovillo@redhat.com>
Date:   Sat Apr 9 01:37:54 2005 +0000

    backport: copy-prop, incremental SSA updating of FUD chains and newly exposed symbols.
    
    
    	Merge from tree-cleanup-branch: VRP, store CCP, store
    	    copy-prop, incremental SSA updating of FUD chains and
    	    newly exposed symbols.
    
    	* Makefile.in (tree-ssa-copy.o): Depend on tree-ssa-propagate.h.
    	(OBJS-common): Add tree-vrp.o.
    	(tree-vrp.o): New rule.
    	* basic-block.h (nearest_common_dominator_for_set): Declare.
    	* common.opt (ftree-store-ccp): New flag.
    	(ftree-copy-prop): New flag.
    	(ftree-vrp): New flag.
    	(ftree-store-copy-prop): New flag.
    	* dominance.c (nearest_common_dominator_for_set): New.
    	* domwalk.c (walk_dominator_tree): Only traverse
    	statements in blocks marked in walk_data->interesting_blocks.
    	* domwalk.h (struct dom_walk_data): Add field interesting_blocks.
    	* fold-const.c (fold): Handle ASSERT_EXPR.
    	* opts.c (decode_options): Set flag_tree_copy_prop at -O1.
    	Set flag_tree_store_ccp, flag_tree_store_copy_prop and
    	flag_tree_vrp at -O2.
    	* timevar.def (TV_TREE_VRP): Define.
    	(TV_TREE_COPY_PROP): Define.
    	(TV_TREE_STORE_COPY_PROP): Define.
    	(TV_TREE_SSA_INCREMENTAL): Define.
    	(TV_TREE_STORE_CCP): Define.
    	* tree-cfg.c (tree_can_merge_blocks_p): Remove reference
    	to kill_redundant_phi_nodes from comment.
    	(verify_expr): Handle ASSERT_EXPR.
    	* tree-dfa.c (mark_new_vars_to_rename): Remove second
    	argument.  Update all users.
    	(mark_call_clobbered_vars_to_rename): Remove.  Update all
    	users.
    	* tree-flow-inline.h (unmodifiable_var_p): New.
    	* tree-flow.h (enum value_range_type): Declare.
    	(struct value_range_def): Declare.
    	(value_range): Declare.
    	(remove_all_phi_nodes_for): Remove.  Update all users.
    	(find_phi_node_for): Declare.
    	(add_type_alias): Declare.
    	(count_uses_and_derefs): Declare.
    	(kill_redundant_phi_nodes): Remove.
    	(rewrite_into_ssa): Remove.
    	(rewrite_def_def_chains): Remove.
    	(update_ssa, register_new_name_mapping, create_new_def_for,
    	need_ssa_update_p, name_registered_for_update_p,
    	release_ssa_name_after_update_ssa, dump_repl_tbl,
    	debug_repl_tbl, dump_names_replaced_by,
    	debug_names_replaced_by, mark_sym_for_renaming,
    	mark_set_for_renaming, get_current_def, set_current_def,
    	get_value_range, dump_value_range, debug_value_range,
    	dump_all_value_ranges, debug_all_value_ranges,
    	expr_computes_nonzero, loop_depth_of_name,
    	unmodifiable_var_p): Declare.
    	* tree-gimple.c (is_gimple_formal_tmp_rhs): Handle
    	ASSERT_EXPR.
    	* tree-into-ssa.c (block_defs_stack): Update comment.
    	(old_ssa_names, new_ssa_names, old_virtual_ssa_names,
    	syms_to_rename, names_to_release, repl_tbl,
    	need_to_initialize_update_ssa_p, need_to_update_vops_p,
    	need_to_replace_names_p): New locals.
    	(NAME_SETS_GROWTH_FACTOR): Define.
    	(struct repl_map_d): Declare.
    	(struct mark_def_sites_global_data): Add field
    	interesting_blocks.
    	(enum rewrite_mode): Declare.
    	(REGISTER_DEFS_IN_THIS_STMT): Define.
    	(compute_global_livein): Use last_basic_block instead of
    	n_basic_blocks.
    	(set_def_block): Remove last argument.  Update all callers.
    	(prepare_use_operand_for_rename): Remove.  Update all callers.
    	(prepare_def_operand_for_rename): Remove.  Update all callers.
    	(symbol_marked_for_renaming): New.
    	(is_old_name): New.
    	(is_new_name): New.
    	(repl_map_hash): New.
    	(repl_map_eq): New.
    	(repl_map_free): New.
    	(names_replaced_by): New.
    	(add_to_repl_tbl): New.
    	(add_new_name_mapping): New.
    	(mark_def_sites): Assume that all the operands in the
    	statement are in normal form.
    	(find_idf): Assert that the block in the stack is valid.
    	(get_default_def_for): New.
    	(insert_phi_nodes_for): Add new argument 'update_p'.
    	Add documentation.
    	If update_p is true, add a new mapping between the LHS of
    	each new PHI and the name that it replaces.
    	(insert_phi_nodes_1): Only call find_idf if needed.
    	(get_reaching_def): Call get_default_def_for.
    	(rewrite_operand): Remove.
    	(rewrite_stmt): Do nothing if REGISTER_DEFS_IN_THIS_STMT
    	and REWRITE_THIS_STMT are false.
    	Assume that all the operands in the statement are in
    	normal form.
    	(rewrite_add_phi_arguments): Don't use PHI_REWRITTEN.
    	(rewrite_virtual_phi_arguments): Remove.
    	(invalidate_name_tags): Remove.
    	(register_new_update_single, register_new_update_set,
    	rewrite_update_init_block, replace_use,
    	rewrite_update_fini_block, rewrite_update_stmt,
    	rewrite_update_phi_arguments): New.
    	rewrite_blocks): Remove argument 'fix_virtual_phis'.
    	Add arguments 'entry', 'what' and 'blocks'.
    	Initialize the dominator walker according to 'what' and
    	'blocks'.
    	Start the dominator walk at 'entry'.
    	(mark_def_site_blocks): Add argument 'interesting_blocks'.
    	Use it to configure the dominator walker.
    	(rewrite_into_ssa): Remove argument 'all'.
    	Make internal.
    	(rewrite_all_into_ssa): Remove.
    	(rewrite_def_def_chains): Remove.
    	(mark_def_interesting, mark_use_interesting,
    	prepare_phi_args_for_update, prepare_block_for_update,
    	prepare_def_site_for, prepare_def_sites,
    	dump_names_replaced_by, debug_names_replaced_by,
    	dump_repl_tbl, debug_repl_tbl, init_update_ssa,
    	delete_update_ssa, create_new_def_for,
    	register_new_name_mapping, mark_sym_for_renaming,
    	mark_set_for_renaming, need_ssa_update_p,
    	name_registered_for_update_p, ssa_names_to_replace,
    	release_ssa_name_after_update_ssa,
    	insert_updated_phi_nodes_for, update_ssa): New.
    	* tree-loop-linear.c (linear_transform_loops): Call
    	update_ssa instead of rewrite_into_ssa.
    	* tree-optimize.c (vars_to_rename): Remove.
    	Update all users.
    	(init_tree_optimization_passes): Replace
    	pass_redundant_phi with pass_copy_prop.
    	Add pass_vrp.
    	Replace pass_ccp with pass_store_ccp.
    	Add pass_store_copy_prop after pass_store_ccp.
    	(execute_todo): If the TODO_ flags don't include updating
    	the SSA form, assert that it does not need to be updated.
    	Call update_ssa instead of rewrite_into_ssa and
    	rewrite_def_def_chains.
    	If TODO_verify_loops is set, call verify_loop_closed_ssa.
    	(tree_rest_of_compilation):
    	* tree-pass.h (TODO_dump_func, TODO_ggc_collect,
    	TODO_verify_ssa, TODO_verify_flow, TODO_verify_stmts,
    	TODO_cleanup_cfg): Renumber.
    	(TODO_verify_loops, TODO_update_ssa,
    	TODO_update_ssa_no_phi, TODO_update_ssa_full_phi,
    	TODO_update_ssa_only_virtuals): Define.
    	(pass_copy_prop, pass_store_ccp, pass_store_copy_prop, pass_vrp):
    	Declare.
    	* tree-phinodes.c (make_phi_node): Update documentation.
    	(remove_all_phi_nodes_for): Remove.
    	(find_phi_node_for): New.
    	* tree-pretty-print.c (dump_generic_node): Handle ASSERT_EXPR.
    	* tree-scalar-evolution.c (follow_ssa_edge_in_rhs): Likewise.
    	(interpret_rhs_modify_expr): Likewise.
    	* tree-sra.c (decide_instantiations): Mark all symbols in
    	SRA_CANDIDATES for renaming.
    	(mark_all_v_defs_1): Rename from mark_all_v_defs.
    	(mark_all_v_defs): New function.  Update all users to call it
    	with the whole list of scalarized statements, not just the
    	first one.
    	* tree-ssa-alias.c (count_ptr_derefs): Make extern.
    	(compute_flow_insensitive_aliasing): If the tag is
    	unmodifiable and the variable isn't or vice-versa, don't
    	make them alias of each other.
    	(setup_pointers_and_addressables): If the type tag for
    	VAR is about to change, mark the old one for renaming.
    	(add_type_alias): New.
    	* tree-ssa-ccp.c: Document SSA-CCP and STORE-CCP.
    	(ccp_lattice_t): Rename from latticevalue.
    	(value): Remove.  Update all users.
    	(const_val): New local variable.
    	(do_store_ccp): New local variable.
    	(dump_lattice_value): Handle UNINITIALIZED.
    	(debug_lattice_value): New.
    	(get_default_value): Re-write.
    	(set_lattice_value): Re-write.
    	(def_to_varying): Remove.  Update all users.
    	(likely_value): Return VARYING for statements that make
    	stores when STORE_CCP is false.
    	Return VARYING for any statement other than MODIFY_EXPR,
    	COND_EXPR and SWITCH_EXPR.
    	(ccp_initialize): Re-write.
    	(replace_uses_in, replace_vuse_in, substitute_and_fold):
    	Move to tree-ssa-propagate.c.
    	(ccp_lattice_meet): Handle memory stores when
    	DO_STORE_CCP is true.
    	(ccp_visit_phi_node): Likewise.
    	(ccp_fold): Likewise.
    	(evaluate_stmt): Likewise.
    	(visit_assignment): Likewise.
    	(ccp_visit_stmt): Likewise.
    	(execute_ssa_ccp): Add argument 'store_ccp'.  Copy it
    	into DO_STORE_CCP.
    	(do_ssa_ccp): New.
    	(pass_ccp): Use it.
    	(do_ssa_store_ccp): New.
    	(gate_store_ccp): New.
    	(pass_store_ccp): Declare.
    	* tree-ssa-copy.c: Include tree-ssa-propagate.h.
    	(may_propagate_copy): Reformat.
    	Don't abort if ORIG is a virtual and DEST isn't.
    	If NEW does not have alias information but DEST does,
    	copy it.
    	(copy_of, cached_last_copy_of, do_store_copy_prop, enum
    	copy_prop_kind, which_copy_prop): Declare.
    	(stmt_may_generate_copy, get_copy_of_val,
    	get_last_copy_of, set_copy_of_val, dump_copy_of,
    	copy_prop_visit_assignment, copy_prop_visit_cond_stmt,
    	copy_prop_visit_stmt, copy_prop_visit_phi_node,
    	init_copy_prop, fini_copy_prop, execute_copy_prop,
    	gate_copy_prop, do_copy_prop, gate_store_copy_prop,
    	store_copy_prop): New.
    	(pass_copy_prop, pass_store_copy_prop): Declare.
    	* tree-ssa-dom.c (struct opt_stats_d): Add fields
    	'num_const_prop' and 'num_copy_prop'.
    	(cprop_operand): Update them.
    	(dump_dominator_optimization_stats): Dump them.
    	(tree_ssa_dominator_optimize): Call update_ssa instead of
    	rewrite_into_ssa.
    	(loop_depth_of_name): Declare extern.
    	(simplify_cond_and_lookup_avail_expr): Guard against NULL
    	values for LOW or HIGH.
    	(cprop_into_successor_phis): Only propagate if NEW != ORIG.
    	(record_equivalences_from_stmt): Call expr_computes_nonzero.
    	(cprop_operand): Only propagate if VAL != OP.
    	* tree-ssa-dse.c (dse_optimize_stmt): Mark symbols in removed
    	statement for renaming.
    	* tree-ssa-loop-im.c (move_computations): Call update_ssa.
    	* tree-ssa-loop-ivopts.c (rewrite_address_base): Call
    	add_type_alias if necessary.
    	Call mark_new_vars_to_rename.
    	(tree_ssa_iv_optimize): If new symbols need to be renamed,
    	mark every statement updated, call update_ssa and
    	rewrite_into_loop_closed_ssa.
    	* tree-ssa-loop-manip.c (add_exit_phis): Do not remove DEF_BB
    	from LIVEIN if VAR is a virtual.
    	* tree-ssa-loop.c (tree_loop_optimizer_init): Call update_ssa.
    	* tree-ssa-operands.c (get_expr_operands): Handle ASSERT_EXPR.
    	(get_call_expr_operands): Reformat statement.
    	(add_stmt_operand): Don't create V_MAY_DEFs for read-only
    	symbols.
    	* tree-ssa-propagate.c (ssa_prop_init): Initialize
    	SSA_NAME_VALUE for every name.
    	(first_vdef, stmt_makes_single_load, stmt_makes_single_store,
    	get_value_loaded_by): New.
    	(replace_uses_in, replace_vuses_in, replace_phi_args_in,
    	substitute_and_fold): Move from tree-ssa-ccp.c.
    	* tree-ssa-propagate.h (struct prop_value_d, prop_value_t,
    	first_vdef, stmt_makes_single_load, stmt_makes_single_store,
    	get_value_loaded_by, replace_uses_in, substitute_and_fold):
    	Declare.
    	* tree-ssa.c (verify_use): Fix error message.
    	(propagate_into_addr, replace_immediate_uses, get_eq_name,
    	check_phi_redundancy, kill_redundant_phi_nodes,
    	pass_redundant_phi): Remove.  Update all users.
    	* tree-vect-transform.c (vect_create_data_ref_ptr): Call
    	add_type_alias, if necessary.
    	* tree-vectorizer.h (struct _stmt_vect_info): Update
    	documentation for field 'memtag'.
    	* tree-vrp.c: New file.
    	* tree.def (ASSERT_EXPR): Define.
    	* tree.h (ASSERT_EXPR_VAR): Define.
    	(ASSERT_EXPR_COND): Define.
    	(SSA_NAME_VALUE_RANGE): Define.
    	(struct tree_ssa_name): Add field 'value_range'.
    	(PHI_REWRITTEN): Remove.
    	(struct tree_phi_node): Remove field 'rewritten'.
    	* doc/invoke.texi (-fdump-tree-storeccp, -ftree-copy-prop,
    	-ftree-store-copy-prop): Document.
    	* doc/tree-ssa.texi: Remove broken link to McCAT's compiler.
    	Document usage of update_ssa.
    
    testsuite/ChangeLog
    
    	* g++.dg/tree-ssa/pr18178.C: New test.
    	* gcc.c-torture/execute/20030216-1.x: Ignore at -O1.
    	* gcc.c-torture/execute/20041019-1.c: New test.
    	* gcc.dg/tree-ssa/20041008-1.c: New test.
    	* gcc.dg/tree-ssa/ssa-ccp-12.c: New test.
    	* gcc.dg/tree-ssa/20030731-2.c: Update to use -fdump-tree-store_ccp.
    	* gcc.dg/tree-ssa/20030917-1.c: Likewise.
    	* gcc.dg/tree-ssa/20030917-3.c: Likewise.
    	* gcc.dg/tree-ssa/20040721-1.c: Likewise.
    	* gcc.dg/tree-ssa/ssa-ccp-1.c: Likewise.
    	* gcc.dg/tree-ssa/ssa-ccp-2.c: Likewise.
    	* gcc.dg/tree-ssa/ssa-ccp-3.c: Likewise.
    	* gcc.dg/tree-ssa/ssa-ccp-7.c: Likewise.
    	* gcc.dg/tree-ssa/ssa-ccp-9.c: Likewise.
    
    From-SVN: r97884

:040000 040000 dbe727d766153a03c3038835b9367c5e1fbe770b b234bb5004b50a101de2b114400ea0044fd65d99 M	gcc
bisect run success
[32m[     info][0m First bad commit: 0bca51f backport: copy-prop, incremental SSA updating of FUD chains and newly exposed symbols.
Checking out files:  15% (6978/45181)   Checking out files:  16% (7229/45181)   Checking out files:  17% (7681/45181)   Checking out files:  18% (8133/45181)   Checking out files:  19% (8585/45181)   Checking out files:  20% (9037/45181)   Checking out files:  20% (9125/45181)   Checking out files:  21% (9489/45181)   Checking out files:  22% (9940/45181)   Checking out files:  23% (10392/45181)   Checking out files:  24% (10844/45181)   Checking out files:  25% (11296/45181)   Checking out files:  26% (11748/45181)   Checking out files:  27% (12199/45181)   Checking out files:  28% (12651/45181)   Checking out files:  29% (13103/45181)   Checking out files:  30% (13555/45181)   Checking out files:  30% (13592/45181)   Checking out files:  31% (14007/45181)   Checking out files:  32% (14458/45181)   Checking out files:  33% (14910/45181)   Checking out files:  34% (15362/45181)   Checking out files:  35% (15814/45181)   Checking out files:  36% (16266/45181)   Checking out files:  37% (16717/45181)   Checking out files:  38% (17169/45181)   Checking out files:  39% (17621/45181)   Checking out files:  39% (17945/45181)   Checking out files:  40% (18073/45181)   Checking out files:  41% (18525/45181)   Checking out files:  42% (18977/45181)   Checking out files:  43% (19428/45181)   Checking out files:  44% (19880/45181)   Checking out files:  45% (20332/45181)   Checking out files:  46% (20784/45181)   Checking out files:  47% (21236/45181)   Checking out files:  48% (21687/45181)   Checking out files:  49% (22139/45181)   Checking out files:  50% (22591/45181)   Checking out files:  51% (23043/45181)   Checking out files:  51% (23076/45181)   Checking out files:  52% (23495/45181)   Checking out files:  53% (23946/45181)   Checking out files:  54% (24398/45181)   Checking out files:  55% (24850/45181)   Checking out files:  56% (25302/45181)   Checking out files:  57% (25754/45181)   Checking out files:  58% (26205/45181)   Checking out files:  59% (26657/45181)   Checking out files:  60% (27109/45181)   Checking out files:  61% (27561/45181)   Checking out files:  62% (28013/45181)   Checking out files:  63% (28465/45181)   Checking out files:  64% (28916/45181)   Checking out files:  65% (29368/45181)   Checking out files:  65% (29389/45181)   Checking out files:  66% (29820/45181)   Checking out files:  67% (30272/45181)   Checking out files:  68% (30724/45181)   Checking out files:  69% (31175/45181)   Checking out files:  70% (31627/45181)   Checking out files:  71% (32079/45181)   Checking out files:  72% (32531/45181)   Checking out files:  73% (32983/45181)   Checking out files:  74% (33434/45181)   Checking out files:  75% (33886/45181)   Checking out files:  76% (34338/45181)   Checking out files:  77% (34790/45181)   Checking out files:  78% (35242/45181)   Checking out files:  78% (35394/45181)   Checking out files:  79% (35693/45181)   Checking out files:  80% (36145/45181)   Checking out files:  81% (36597/45181)   Checking out files:  82% (37049/45181)   Checking out files:  83% (37501/45181)   Checking out files:  84% (37953/45181)   Checking out files:  85% (38404/45181)   Checking out files:  86% (38856/45181)   Checking out files:  87% (39308/45181)   Checking out files:  88% (39760/45181)   Checking out files:  89% (40212/45181)   Checking out files:  90% (40663/45181)   Checking out files:  90% (40963/45181)   Checking out files:  91% (41115/45181)   Checking out files:  92% (41567/45181)   Checking out files:  93% (42019/45181)   Checking out files:  94% (42471/45181)   Checking out files:  95% (42922/45181)   Checking out files:  96% (43374/45181)   Checking out files:  97% (43826/45181)   Checking out files:  98% (44278/45181)   Checking out files:  99% (44730/45181)   Checking out files:  99% (45029/45181)   Checking out files: 100% (45181/45181)   Checking out files: 100% (45181/45181), done.
Previous HEAD position was 45f9480... Daily bump.
HEAD is now at a91d32a... i386.md ("*movtf_internal): Penalize moves to and from integer registers.

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [0bca51f]
+---------------------------------------- Current commit hash: [0bca51f] ----------------------------------------+
GCC for commit [0bca51f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-0bca51f/bin/gcc with -O3:
1
Output of /tmp/gcc-0bca51f/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 0bca51f... backport: copy-prop, incremental SSA updating of FUD chains and newly exposed symbols.
[32m[     info][0m Current commit [0bca51f] is bad. Return value: 1

[32m[     info][0m Testing commit: [45f9480]
+---------------------------------------- Current commit hash: [45f9480] ----------------------------------------+
GCC for commit [45f9480] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
-1
Output of /tmp/gcc-45f9480/bin/gcc with -O3:
-1
Output of /tmp/gcc-45f9480/bin/gcc with -O0:
-1
----------------------------------------------------
No local changes to save
HEAD is now at 45f9480... Daily bump.
[32m[     info][0m Current commit [45f9480] is good. Return value: 0

[32m[     info][0m Bisection result is correct.
=========================================================================================================================

[32m[     info][0m Getting extra information...
=========================================================================================================================
Output of gcc [0bca51f] with -O0:
-1
Output of gcc [0bca51f] with -O1:
-1
Output of gcc [0bca51f] with -O2:
1
Output of gcc [0bca51f] with -O3:
1
Output of gcc [0bca51f] with -Os:
1
[32m[     info][0m Got extra information.
=========================================================================================================================
[32m[     info][0m Bisection done.
