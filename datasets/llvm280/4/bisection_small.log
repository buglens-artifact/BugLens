[32m[     info][0m Compiler type: llvm
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/llvm-2.8.0/bin/clang
====================Ground truth & buggy output:====================
Correct output:
0
Output of llvm-2.8.0 with -Os:
Output of llvm-2.8.0 with -O1:
0
====================================================================
[32m[     info][0m Good version found: llvm-2.6.0
[32m[     info][0m Start Bisection...
Removing llvm/tools/clang/
No local changes to save
Bisecting: a merge base must be tested
[56d60eaa616498200d8090f45c2602e42e7c5385] revert r79708 + r79711
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [56d60ea]
+---------------------------------------- Current commit hash: [56d60ea] ----------------------------------------+
[32m[     info][0m LLVM with commit [56d60ea] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-56d60ea/bin/clang with -Os:
0
Output of /tmp/llvm-56d60ea/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [56d60ea] is good. Return value: 0

Bisecting: 12261 revisions left to test after this (roughly 14 steps)
[56ec7895210b6b488d9915963927489085000278] fix two bugs in OPC_EmitRegister, which makes ppc happier.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [56ec789]
+---------------------------------------- Current commit hash: [56ec789] ----------------------------------------+
[32m[     info][0m LLVM with commit [56ec789] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-56ec789/bin/clang with -Os:
0
Output of /tmp/llvm-56ec789/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [56ec789] is good. Return value: 0

Bisecting: 6130 revisions left to test after this (roughly 13 steps)
[4cdcf59c6d00f049df1416bccbeac2a23bdd287c] Testing commit access.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [4cdcf59]
+---------------------------------------- Current commit hash: [4cdcf59] ----------------------------------------+
[32m[     info][0m LLVM with commit [4cdcf59] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-4cdcf59/bin/clang with -Os:
Output of /tmp/llvm-4cdcf59/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [4cdcf59] is bad. Return value: 1

Bisecting: 3065 revisions left to test after this (roughly 12 steps)
[bd4ca62c80c65f3d0c5aa5b44baebc7a50158351] document isvolatile etc.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [bd4ca62]
+---------------------------------------- Current commit hash: [bd4ca62] ----------------------------------------+
[32m[     info][0m LLVM with commit [bd4ca62] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-bd4ca62/bin/clang with -Os:
0
Output of /tmp/llvm-bd4ca62/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [bd4ca62] is good. Return value: 0

Bisecting: 1532 revisions left to test after this (roughly 11 steps)
[63ac5999f1d20769f1381ed05ba59eef4339d83f] Refactor visitor logic for clang_annotateTokens() into a worker class.  No functionality change yet.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [63ac599]
+---------------------------------------- Current commit hash: [63ac599] ----------------------------------------+
[32m[     info][0m LLVM with commit [63ac599] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-63ac599/bin/clang with -Os:
Output of /tmp/llvm-63ac599/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [63ac599] is bad. Return value: 1

Bisecting: 766 revisions left to test after this (roughly 10 steps)
[b6410e168c9f4ee20b4d6c9b33c2c14db67d682f] add __builtin_[r]index.  Perhaps all LIBBUILTIN's should get these or something?
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [b6410e1]
+---------------------------------------- Current commit hash: [b6410e1] ----------------------------------------+
[32m[     info][0m LLVM with commit [b6410e1] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-b6410e1/bin/clang with -Os:
0
Output of /tmp/llvm-b6410e1/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [b6410e1] is good. Return value: 0

Bisecting: 383 revisions left to test after this (roughly 9 steps)
[a1e343095f6d4f2ec9b2ca5a9ba086c1460616f1] Avoid adding a null MD node operand, which crashes with "-debug" when trying to print the operand.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [a1e3430]
+---------------------------------------- Current commit hash: [a1e3430] ----------------------------------------+
[32m[     info][0m LLVM with commit [a1e3430] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-a1e3430/bin/clang with -Os:
Output of /tmp/llvm-a1e3430/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [a1e3430] is bad. Return value: 1

Bisecting: 191 revisions left to test after this (roughly 8 steps)
[64694df56496adb587b4d9e62be165257848b46f] add macruby back
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [64694df]
+---------------------------------------- Current commit hash: [64694df] ----------------------------------------+
[32m[     info][0m LLVM with commit [64694df] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-64694df/bin/clang with -Os:
Output of /tmp/llvm-64694df/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [64694df] is bad. Return value: 1

Bisecting: 95 revisions left to test after this (roughly 7 steps)
[bf814c79b61942b49a0e549a131da7d5d1e1005b] I failed to notice that my last patch wasn't doing as much as it could because EmitBranch actually clears the insert point.  This version actually accomplishes what I initially wanted.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [bf814c7]
+---------------------------------------- Current commit hash: [bf814c7] ----------------------------------------+
[32m[     info][0m LLVM with commit [bf814c7] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-bf814c7/bin/clang with -Os:
Output of /tmp/llvm-bf814c7/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [bf814c7] is bad. Return value: 1

Bisecting: 47 revisions left to test after this (roughly 6 steps)
[a8ae1783b44645a4291fc84c8c81f0a0c028e378] Move CodeGen/X86/2010-04-19-DAGCombineCrash.ll into CodeGen/X86/crash.ll. Also reduce.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [a8ae178]
+---------------------------------------- Current commit hash: [a8ae178] ----------------------------------------+
[32m[     info][0m LLVM with commit [a8ae178] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-a8ae178/bin/clang with -Os:
Output of /tmp/llvm-a8ae178/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [a8ae178] is bad. Return value: 1

Bisecting: 23 revisions left to test after this (roughly 5 steps)
[5debc3316841966d66bda90106560ffc09d2757c] stop computing InstImpInputs, it is dead
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [5debc33]
+---------------------------------------- Current commit hash: [5debc33] ----------------------------------------+
[32m[     info][0m LLVM with commit [5debc33] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-5debc33/bin/clang with -Os:
0
Output of /tmp/llvm-5debc33/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [5debc33] is good. Return value: 0

Bisecting: 11 revisions left to test after this (roughly 4 steps)
[950fe784be6a2ad13bd47aef034ed025cccb97e7] Sink the CopyToExportRegsIfNeeded calls out of SelectionDAGISel into SelectionDAGBuilder. This avoids a separate pass over the instructions, and has the side effect of providing debug location information to the copy.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [950fe78]
+---------------------------------------- Current commit hash: [950fe78] ----------------------------------------+
[32m[     info][0m LLVM with commit [950fe78] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-950fe78/bin/clang with -Os:
0
Output of /tmp/llvm-950fe78/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [950fe78] is good. Return value: 0

Bisecting: 5 revisions left to test after this (roughly 3 steps)
[4019d571d93848e7e7ba00bc8dd11ba8145c00ac] Typo.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [4019d57]
+---------------------------------------- Current commit hash: [4019d57] ----------------------------------------+
[32m[     info][0m LLVM with commit [4019d57] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-4019d57/bin/clang with -Os:
0
Output of /tmp/llvm-4019d57/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [4019d57] is good. Return value: 0

Bisecting: 2 revisions left to test after this (roughly 2 steps)
[92b761cf4b6cd4ee686f928d35fca69836f0804a] Remove dead code.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [92b761c]
+---------------------------------------- Current commit hash: [92b761c] ----------------------------------------+
[32m[     info][0m LLVM with commit [92b761c] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-92b761c/bin/clang with -Os:
Output of /tmp/llvm-92b761c/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [92b761c] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 1 step)
[20b551a443dd57f1f759ac6888c74232d6662185] IRgen: Always use i8 arrays to access union bit-fields. This is ugly, but matches how we currently handle structs, and this correctly handles -fno-bitfield-type-align.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [20b551a]
+---------------------------------------- Current commit hash: [20b551a] ----------------------------------------+
[32m[     info][0m LLVM with commit [20b551a] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-20b551a/bin/clang with -Os:
Output of /tmp/llvm-20b551a/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [20b551a] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 0 steps)
[7be315c414969ce4a63e538bee2f5c92d5adb20f] For t2LDRT, t2LDRBT, t2LDRHT, t2LDRSBT, and t2LDRSHT, if Rn(Inst{19-16})=='1111', transform the Opcode to the corresponding t2LDR*pci counterpart.
running /tmp/deduplication/scripts/r_wrongcode_llvm.sh /tmp/deduplication/benchmarks/llvm280/4 small
[32m[     info][0m Testing commit: [7be315c]
+---------------------------------------- Current commit hash: [7be315c] ----------------------------------------+
[32m[     info][0m LLVM with commit [7be315c] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-7be315c/bin/clang with -Os:
0
Output of /tmp/llvm-7be315c/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [7be315c] is good. Return value: 0

20b551a443dd57f1f759ac6888c74232d6662185 is the first bad commit
commit 20b551a443dd57f1f759ac6888c74232d6662185
Author: Daniel Dunbar <daniel@zuster.org>
Date:   Tue Apr 20 17:52:30 2010 +0000

    IRgen: Always use i8 arrays to access union bit-fields. This is ugly, but
    matches how we currently handle structs, and this correctly handles
    -fno-bitfield-type-align.
    
    llvm-svn: 101918

:040000 040000 3a9889981bfac2fe682b6d46db95d553c1effb63 94559812518432a44f9fa59a7bd94b33a5f9777e M	clang
bisect run success
[32m[     info][0m First bad commit: 20b551a IRgen: Always use i8 arrays to access union bit-fields. This is ugly, but matches how we currently handle structs, and this correctly handles -fno-bitfield-type-align.
Previous HEAD position was 7be315c... For t2LDRT, t2LDRBT, t2LDRHT, t2LDRSBT, and t2LDRSHT, if Rn(Inst{19-16})=='1111', transform the Opcode to the corresponding t2LDR*pci counterpart.
HEAD is now at 5c1cfc2... resolve a fixme.  I haven't figured out how to write a testcase to exercise this though.

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [20b551a]
+---------------------------------------- Current commit hash: [20b551a] ----------------------------------------+
[32m[     info][0m LLVM with commit [20b551a] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-20b551a/bin/clang with -Os:
Output of /tmp/llvm-20b551a/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [20b551a] is bad. Return value: 1

[32m[     info][0m Testing commit: [7be315c]
+---------------------------------------- Current commit hash: [7be315c] ----------------------------------------+
[32m[     info][0m LLVM with commit [7be315c] already built. Use existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/llvm-7be315c/bin/clang with -Os:
0
Output of /tmp/llvm-7be315c/bin/clang with -O1:
0
----------------------------------------------------
[32m[     info][0m Current commit [7be315c] is good. Return value: 0

[32m[     info][0m Bisection result is correct.
=========================================================================================================================

[32m[     info][0m Getting extra information...
=========================================================================================================================
Output of llvm [20b551a] with -O0:
0
Output of llvm [20b551a] with -O1:
0
Output of llvm [20b551a] with -O2:
Output of llvm [20b551a] with -O3:
Output of llvm [20b551a] with -Os:
[32m[     info][0m Got extra information.
=========================================================================================================================
[32m[     info][0m Bisection done.
