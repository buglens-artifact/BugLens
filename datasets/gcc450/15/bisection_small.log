[32m[     info][0m Compiler type: gcc
[32m[     info][0m Bad compiler: /tmp/deduplication/prebuild_compilers/gcc-4.5.0/bin/gcc
====================Ground truth & buggy output:====================
Correct output:
0
Output of gcc-4.5.0 with -Os:
25016
Output of gcc-4.5.0 with -O3:
0
====================================================================
[32m[     info][0m Good version found: gcc-4.4.0
[32m[     info][0m Start Bisection...
No local changes to save
Bisecting: a merge base must be tested
[e9d51dc6a3d2af09436f3d8da583ef2b1efda26c] Fix for PR39557
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [e9d51dc]
+---------------------------------------- Current commit hash: [e9d51dc] ----------------------------------------+
GCC for commit [e9d51dc] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-e9d51dc/bin/gcc with -Os:
0
Output of /tmp/gcc-e9d51dc/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at e9d51dc... Fix for PR39557
[32m[     info][0m Current commit [e9d51dc] is good. Return value: 0

Bisecting: 3564 revisions left to test after this (roughly 12 steps)
[feb4e5ba87ce9a1774925b939959ec6d7f20f813] tree-cfg.c (dump_function_to_file): Dump eh tree with TDF_EH, not TDF_DETAILS.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [feb4e5b]
+---------------------------------------- Current commit hash: [feb4e5b] ----------------------------------------+
GCC for commit [feb4e5b] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-feb4e5b/bin/gcc with -Os:
-15832
Output of /tmp/gcc-feb4e5b/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at feb4e5b... tree-cfg.c (dump_function_to_file): Dump eh tree with TDF_EH, not TDF_DETAILS.
[32m[     info][0m Current commit [feb4e5b] is bad. Return value: 1

Bisecting: 1782 revisions left to test after this (roughly 11 steps)
[19b905ce29121de6335c9a90b3ef10c068ce0a66] eabi.asm (__eabi_convert): Don't define if _RELOCATABLE.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [19b905c]
+---------------------------------------- Current commit hash: [19b905c] ----------------------------------------+
GCC for commit [19b905c] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-19b905c/bin/gcc with -Os:
0
Output of /tmp/gcc-19b905c/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at 19b905c... eabi.asm (__eabi_convert): Don't define if _RELOCATABLE.
[32m[     info][0m Current commit [19b905c] is good. Return value: 0

Bisecting: 891 revisions left to test after this (roughly 10 steps)
[ac3cbee587c9d65ba8d5be751c8c74ad9ba4c930] re PR c++/40799 (Revision 149750 failed 483.xalancbmk in SPEC CPU 2006)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [ac3cbee]
+---------------------------------------- Current commit hash: [ac3cbee] ----------------------------------------+
GCC for commit [ac3cbee] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-ac3cbee/bin/gcc with -Os:
-17624
Output of /tmp/gcc-ac3cbee/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at ac3cbee... re PR c++/40799 (Revision 149750 failed 483.xalancbmk in SPEC CPU 2006)
[32m[     info][0m Current commit [ac3cbee] is bad. Return value: 1

Bisecting: 445 revisions left to test after this (roughly 9 steps)
[463d9ac4d3097fa2b93a45a6784826d8cfffa8ca] * tb-gcc.c: Fix copyright notice.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [463d9ac]
+---------------------------------------- Current commit hash: [463d9ac] ----------------------------------------+
GCC for commit [463d9ac] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-463d9ac/bin/gcc with -Os:
0
Output of /tmp/gcc-463d9ac/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at 463d9ac... * tb-gcc.c: Fix copyright notice.
[32m[     info][0m Current commit [463d9ac] is good. Return value: 0

Bisecting: 222 revisions left to test after this (roughly 8 steps)
[ac7120ce8aef83a746376463906782476b407e9b] exp_util.adb: Minor code reorganization (use N_Short_Circuit)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [ac7120c]
+---------------------------------------- Current commit hash: [ac7120c] ----------------------------------------+
GCC for commit [ac7120c] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-ac7120c/bin/gcc with -Os:
5752
Output of /tmp/gcc-ac7120c/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at ac7120c... exp_util.adb: Minor code reorganization (use N_Short_Circuit)
[32m[     info][0m Current commit [ac7120c] is bad. Return value: 1

Bisecting: 111 revisions left to test after this (roughly 7 steps)
[caf271d8026c2f9a3ade32a8e670fa3be6e3892b] re PR fortran/40638 (RTE: "Unit number in I/O statement too large" -- fails with any low value)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [caf271d]
+---------------------------------------- Current commit hash: [caf271d] ----------------------------------------+
GCC for commit [caf271d] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-caf271d/bin/gcc with -Os:
-9144
Output of /tmp/gcc-caf271d/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at caf271d... re PR fortran/40638 (RTE: "Unit number in I/O statement too large" -- fails with any low value)
[32m[     info][0m Current commit [caf271d] is bad. Return value: 1

Bisecting: 55 revisions left to test after this (roughly 6 steps)
[b30bfd402f5109ae54ceb113a9492b8ec3737e0f] gcc-defs.exp (gcc-set-multilib-library-path): Delete.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [b30bfd4]
+---------------------------------------- Current commit hash: [b30bfd4] ----------------------------------------+
GCC for commit [b30bfd4] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-b30bfd4/bin/gcc with -Os:
0
Output of /tmp/gcc-b30bfd4/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at b30bfd4... gcc-defs.exp (gcc-set-multilib-library-path): Delete.
[32m[     info][0m Current commit [b30bfd4] is good. Return value: 0

Bisecting: 27 revisions left to test after this (roughly 5 steps)
[997704f18b252a1063f514a716fbf6b636f62620] re PR bootstrap/40347 (i386-darwin ICEs while building libgcc during stage2)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [997704f]
+---------------------------------------- Current commit hash: [997704f] ----------------------------------------+
GCC for commit [997704f] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-997704f/bin/gcc with -Os:
0
Output of /tmp/gcc-997704f/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at 997704f... re PR bootstrap/40347 (i386-darwin ICEs while building libgcc during stage2)
[32m[     info][0m Current commit [997704f] is good. Return value: 0

Bisecting: 13 revisions left to test after this (roughly 4 steps)
[2b110bfcc074f222a49d875c5f0f5ea370294b9f] Use hash tables for template specialization lookup.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [2b110bf]
+---------------------------------------- Current commit hash: [2b110bf] ----------------------------------------+
GCC for commit [2b110bf] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-2b110bf/bin/gcc with -Os:
0
Output of /tmp/gcc-2b110bf/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at 2b110bf... Use hash tables for template specialization lookup.
[32m[     info][0m Current commit [2b110bf] is good. Return value: 0

Bisecting: 6 revisions left to test after this (roughly 3 steps)
[d73fb533dc652d2201bded0d386093af57810a6f] re PR middle-end/34163 (10% performance regression since Nov 1 on Polyhedron's "NF" on AMD64)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [d73fb53]
+---------------------------------------- Current commit hash: [d73fb53] ----------------------------------------+
GCC for commit [d73fb53] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-d73fb53/bin/gcc with -Os:
0
Output of /tmp/gcc-d73fb53/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at d73fb53... re PR middle-end/34163 (10% performance regression since Nov 1 on Polyhedron's "NF" on AMD64)
[32m[     info][0m Current commit [d73fb53] is good. Return value: 0

Bisecting: 3 revisions left to test after this (roughly 2 steps)
[fae1034ef48b598981195dc0192e882b9ce98894] re PR tree-optimization/40640 (ICE in set_value_range, at tree-vrp.c:383)
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [fae1034]
+---------------------------------------- Current commit hash: [fae1034] ----------------------------------------+
GCC for commit [fae1034] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-fae1034/bin/gcc with -Os:
28536
Output of /tmp/gcc-fae1034/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at fae1034... re PR tree-optimization/40640 (ICE in set_value_range, at tree-vrp.c:383)
[32m[     info][0m Current commit [fae1034] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 1 step)
[ba8978d0f01676d2cc72bb1bac2d3bc54d8cf2e0] ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing for size, reduce amount of inlining.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [ba8978d]
+---------------------------------------- Current commit hash: [ba8978d] ----------------------------------------+
GCC for commit [ba8978d] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-ba8978d/bin/gcc with -Os:
20088
Output of /tmp/gcc-ba8978d/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at ba8978d... ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing for size, reduce amount of inlining.
[32m[     info][0m Current commit [ba8978d] is bad. Return value: 1

Bisecting: 0 revisions left to test after this (roughly 0 steps)
[d4289bdd6d7102d5fc10f782752ac8dbfae6883c] inclhack.def (solaris_int_types): New fix.
running /tmp/deduplication/scripts/r_wrongcode_gcc.sh /tmp/deduplication/benchmarks/gcc450/15 small
[32m[     info][0m Testing commit: [d4289bd]
+---------------------------------------- Current commit hash: [d4289bd] ----------------------------------------+
GCC for commit [d4289bd] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-d4289bd/bin/gcc with -Os:
0
Output of /tmp/gcc-d4289bd/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at d4289bd... inclhack.def (solaris_int_types): New fix.
[32m[     info][0m Current commit [d4289bd] is good. Return value: 0

ba8978d0f01676d2cc72bb1bac2d3bc54d8cf2e0 is the first bad commit
commit ba8978d0f01676d2cc72bb1bac2d3bc54d8cf2e0
Author: Jan Hubicka <jh@suse.cz>
Date:   Fri Jul 3 22:28:14 2009 +0200

    ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing for size, reduce amount of inlining.
    
    	* ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing
    	for size, reduce amount of inlining.
    
    From-SVN: r149210

:040000 040000 46db1331ef332f1ec1e9ef32db6f50b4edd63d4e c1f269eb05987c820b6ef0fd2bcc605acc966dac M	gcc
bisect run success
[32m[     info][0m First bad commit: ba8978d ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing for size, reduce amount of inlining.
Checking out files:  23% (3771/15744)   Checking out files:  24% (3779/15744)   Checking out files:  25% (3936/15744)   Checking out files:  26% (4094/15744)   Checking out files:  27% (4251/15744)   Checking out files:  28% (4409/15744)   Checking out files:  29% (4566/15744)   Checking out files:  30% (4724/15744)   Checking out files:  31% (4881/15744)   Checking out files:  32% (5039/15744)   Checking out files:  33% (5196/15744)   Checking out files:  34% (5353/15744)   Checking out files:  34% (5417/15744)   Checking out files:  35% (5511/15744)   Checking out files:  36% (5668/15744)   Checking out files:  37% (5826/15744)   Checking out files:  38% (5983/15744)   Checking out files:  39% (6141/15744)   Checking out files:  40% (6298/15744)   Checking out files:  41% (6456/15744)   Checking out files:  41% (6480/15744)   Checking out files:  42% (6613/15744)   Checking out files:  43% (6770/15744)   Checking out files:  44% (6928/15744)   Checking out files:  45% (7085/15744)   Checking out files:  46% (7243/15744)   Checking out files:  47% (7400/15744)   Checking out files:  48% (7558/15744)   Checking out files:  49% (7715/15744)   Checking out files:  50% (7872/15744)   Checking out files:  51% (8030/15744)   Checking out files:  52% (8187/15744)   Checking out files:  53% (8345/15744)   Checking out files:  54% (8502/15744)   Checking out files:  54% (8556/15744)   Checking out files:  55% (8660/15744)   Checking out files:  56% (8817/15744)   Checking out files:  57% (8975/15744)   Checking out files:  58% (9132/15744)   Checking out files:  59% (9289/15744)   Checking out files:  60% (9447/15744)   Checking out files:  61% (9604/15744)   Checking out files:  62% (9762/15744)   Checking out files:  63% (9919/15744)   Checking out files:  64% (10077/15744)   Checking out files:  65% (10234/15744)   Checking out files:  66% (10392/15744)   Checking out files:  67% (10549/15744)   Checking out files:  67% (10610/15744)   Checking out files:  68% (10706/15744)   Checking out files:  69% (10864/15744)   Checking out files:  70% (11021/15744)   Checking out files:  71% (11179/15744)   Checking out files:  72% (11336/15744)   Checking out files:  73% (11494/15744)   Checking out files:  74% (11651/15744)   Checking out files:  75% (11808/15744)   Checking out files:  76% (11966/15744)   Checking out files:  77% (12123/15744)   Checking out files:  78% (12281/15744)   Checking out files:  79% (12438/15744)   Checking out files:  80% (12596/15744)   Checking out files:  80% (12677/15744)   Checking out files:  81% (12753/15744)   Checking out files:  82% (12911/15744)   Checking out files:  83% (13068/15744)   Checking out files:  84% (13225/15744)   Checking out files:  85% (13383/15744)   Checking out files:  86% (13540/15744)   Checking out files:  87% (13698/15744)   Checking out files:  88% (13855/15744)   Checking out files:  89% (14013/15744)   Checking out files:  90% (14170/15744)   Checking out files:  91% (14328/15744)   Checking out files:  92% (14485/15744)   Checking out files:  93% (14642/15744)   Checking out files:  94% (14800/15744)   Checking out files:  95% (14957/15744)   Checking out files:  96% (15115/15744)   Checking out files:  96% (15122/15744)   Checking out files:  97% (15272/15744)   Checking out files:  98% (15430/15744)   Checking out files:  99% (15587/15744)   Checking out files: 100% (15744/15744)   Checking out files: 100% (15744/15744), done.
Previous HEAD position was d4289bd... inclhack.def (solaris_int_types): New fix.
HEAD is now at 880f8ea... user.cfg.in: Define _GLIBCXX_HAS_GTHREADS for mutex, condition_variable, and thread output.

[32m[     info][0m Checking the result...
=========================================================================================================================
[32m[     info][0m Testing commit: [ba8978d]
+---------------------------------------- Current commit hash: [ba8978d] ----------------------------------------+
GCC for commit [ba8978d] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-ba8978d/bin/gcc with -Os:
-3704
Output of /tmp/gcc-ba8978d/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at ba8978d... ipa-inline.c (cgraph_decide_inlining_incrementally): When optimizing for size, reduce amount of inlining.
[32m[     info][0m Current commit [ba8978d] is bad. Return value: 1

[32m[     info][0m Testing commit: [d4289bd]
+---------------------------------------- Current commit hash: [d4289bd] ----------------------------------------+
GCC for commit [d4289bd] already exists. Using existing binary.
------------------Current output:-------------------
Ground truth:
0
Output of /tmp/gcc-d4289bd/bin/gcc with -Os:
0
Output of /tmp/gcc-d4289bd/bin/gcc with -O3:
0
----------------------------------------------------
No local changes to save
HEAD is now at d4289bd... inclhack.def (solaris_int_types): New fix.
[32m[     info][0m Current commit [d4289bd] is good. Return value: 0

[32m[     info][0m Bisection result is correct.
=========================================================================================================================

[32m[     info][0m Getting extra information...
=========================================================================================================================
Output of gcc [ba8978d] with -O0:
0
Output of gcc [ba8978d] with -O1:
0
Output of gcc [ba8978d] with -O2:
0
Output of gcc [ba8978d] with -O3:
0
Output of gcc [ba8978d] with -Os:
-21304
[32m[     info][0m Got extra information.
=========================================================================================================================
[32m[     info][0m Bisection done.
